//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DFAWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DFA), typeof(System.Object));
		L.RegFunction("init", init);
		L.RegFunction("search", search);
		L.RegFunction("fei_fa", fei_fa);
		L.RegFunction("New", _CreateDFA);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_instance", get_m_instance, set_m_instance);
		L.RegVar("_instance", get__instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDFA(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DFA obj = new DFA();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DFA.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DFA obj = (DFA)ToLua.CheckObject<DFA>(L, 1);
			int o = obj.init();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int search(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DFA obj = (DFA)ToLua.CheckObject<DFA>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.search(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int fei_fa(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DFA obj = (DFA)ToLua.CheckObject<DFA>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.fei_fa(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, DFA.m_instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, DFA._instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_instance(IntPtr L)
	{
		try
		{
			DFA arg0 = (DFA)ToLua.CheckObject<DFA>(L, 2);
			DFA.m_instance = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

