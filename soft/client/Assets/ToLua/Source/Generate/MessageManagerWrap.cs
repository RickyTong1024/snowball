//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MessageManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MessageManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("RegisterHandle", RegisterHandle);
		L.RegFunction("RemoveHandle", RemoveHandle);
		L.RegFunction("AddMessage", AddMessage);
		L.RegFunction("AddNetMessage", AddNetMessage);
		L.RegFunction("AddCSharpNetMessage", AddCSharpNetMessage);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterHandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MessageManager obj = (MessageManager)ToLua.CheckObject<MessageManager>(L, 1);
			IHandle arg0 = (IHandle)ToLua.CheckObject<IHandle>(L, 2);
			obj.RegisterHandle(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveHandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MessageManager obj = (MessageManager)ToLua.CheckObject<MessageManager>(L, 1);
			IHandle arg0 = (IHandle)ToLua.CheckObject<IHandle>(L, 2);
			obj.RemoveHandle(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MessageManager obj = (MessageManager)ToLua.CheckObject<MessageManager>(L, 1);
			s_message arg0 = (s_message)ToLua.CheckObject<s_message>(L, 2);
			obj.AddMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddNetMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MessageManager obj = (MessageManager)ToLua.CheckObject<MessageManager>(L, 1);
			s_net_message arg0 = (s_net_message)ToLua.CheckObject<s_net_message>(L, 2);
			obj.AddNetMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddCSharpNetMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MessageManager obj = (MessageManager)ToLua.CheckObject<MessageManager>(L, 1);
			s_net_message arg0 = (s_net_message)ToLua.CheckObject<s_net_message>(L, 2);
			obj.AddCSharpNetMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

