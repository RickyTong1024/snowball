//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SoundManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SoundManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("pause_sound", pause_sound);
		L.RegFunction("continue_sound", continue_sound);
		L.RegFunction("play_sound_ex", play_sound_ex);
		L.RegFunction("play_sound", play_sound);
		L.RegFunction("play_3dsound", play_3dsound);
		L.RegFunction("play_mus", play_mus);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Is_play_mus", get_Is_play_mus, set_Is_play_mus);
		L.RegVar("Is_play_eff", get_Is_play_eff, set_Is_play_eff);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int pause_sound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SoundManager obj = (SoundManager)ToLua.CheckObject<SoundManager>(L, 1);
			obj.pause_sound();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int continue_sound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SoundManager obj = (SoundManager)ToLua.CheckObject<SoundManager>(L, 1);
			obj.continue_sound();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int play_sound_ex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SoundManager obj = (SoundManager)ToLua.CheckObject<SoundManager>(L, 1);
			UnityEngine.AudioClip arg0 = (UnityEngine.AudioClip)ToLua.CheckObject(L, 2, typeof(UnityEngine.AudioClip));
			obj.play_sound_ex(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int play_sound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SoundManager obj = (SoundManager)ToLua.CheckObject<SoundManager>(L, 1);
			UnityEngine.AudioClip arg0 = (UnityEngine.AudioClip)ToLua.CheckObject(L, 2, typeof(UnityEngine.AudioClip));
			obj.play_sound(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int play_3dsound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SoundManager obj = (SoundManager)ToLua.CheckObject<SoundManager>(L, 1);
			UnityEngine.AudioClip arg0 = (UnityEngine.AudioClip)ToLua.CheckObject(L, 2, typeof(UnityEngine.AudioClip));
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			obj.play_3dsound(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int play_mus(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SoundManager obj = (SoundManager)ToLua.CheckObject<SoundManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.play_mus(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Is_play_mus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SoundManager obj = (SoundManager)o;
			bool ret = obj.Is_play_mus;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Is_play_mus on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Is_play_eff(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SoundManager obj = (SoundManager)o;
			bool ret = obj.Is_play_eff;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Is_play_eff on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Is_play_mus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SoundManager obj = (SoundManager)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Is_play_mus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Is_play_mus on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Is_play_eff(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SoundManager obj = (SoundManager)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Is_play_eff = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Is_play_eff on a nil value");
		}
	}
}

