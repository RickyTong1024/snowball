//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UILabel_EffectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UILabel.Effect));
		L.RegVar("None", get_None, null);
		L.RegVar("Shadow", get_Shadow, null);
		L.RegVar("Outline", get_Outline, null);
		L.RegVar("Outline8", get_Outline8, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UILabel.Effect>.Check = CheckType;
		StackTraits<UILabel.Effect>.Push = Push;
	}

	static void Push(IntPtr L, UILabel.Effect arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UILabel.Effect), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, UILabel.Effect.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Shadow(IntPtr L)
	{
		ToLua.Push(L, UILabel.Effect.Shadow);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Outline(IntPtr L)
	{
		ToLua.Push(L, UILabel.Effect.Outline);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Outline8(IntPtr L)
	{
		ToLua.Push(L, UILabel.Effect.Outline8);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UILabel.Effect o = (UILabel.Effect)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

