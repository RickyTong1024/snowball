//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class dbcWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(dbc), typeof(System.Object));
		L.RegFunction("load_txt", load_txt);
		L.RegFunction("get_string", get_string);
		L.RegFunction("get_int", get_int);
		L.RegFunction("get_double", get_double);
		L.RegFunction("get_x", get_x);
		L.RegFunction("get_y", get_y);
		L.RegFunction("New", _Createdbc);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Createdbc(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				dbc obj = new dbc();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: dbc.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int load_txt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			dbc obj = (dbc)ToLua.CheckObject<dbc>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.load_txt(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_string(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			dbc obj = (dbc)ToLua.CheckObject<dbc>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string o = obj.get_string(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_int(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			dbc obj = (dbc)ToLua.CheckObject<dbc>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int o = obj.get_int(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_double(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			dbc obj = (dbc)ToLua.CheckObject<dbc>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			double o = obj.get_double(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_x(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			dbc obj = (dbc)ToLua.CheckObject<dbc>(L, 1);
			int o = obj.get_x();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_y(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			dbc obj = (dbc)ToLua.CheckObject<dbc>(L, 1);
			int o = obj.get_y();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

