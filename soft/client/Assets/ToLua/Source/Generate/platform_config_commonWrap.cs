//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class platform_config_commonWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(platform_config_common), typeof(System.Object));
		L.RegFunction("init", init);
		L.RegFunction("New", _Createplatform_config_common);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("version", get_version, null);
		L.RegVar("m_common_url", get_m_common_url, set_m_common_url);
		L.RegVar("m_platform", get_m_platform, set_m_platform);
		L.RegVar("m_debug", get_m_debug, set_m_debug);
		L.RegVar("languageType", get_languageType, set_languageType);
		L.RegVar("APPSFLYER_DEV_KEY", get_APPSFLYER_DEV_KEY, set_APPSFLYER_DEV_KEY);
		L.RegVar("YOUR_APP_ID_HERE", get_YOUR_APP_ID_HERE, set_YOUR_APP_ID_HERE);
		L.RegVar("m_login", get_m_login, set_m_login);
		L.RegConstant("GameFrameRate", 30);
		L.RegVar("AppName", get_AppName, null);
		L.RegVar("FrameworkRoot", get_FrameworkRoot, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Createplatform_config_common(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				platform_config_common obj = new platform_config_common();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: platform_config_common.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			platform_config_common.init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_version(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, platform_config_common.version);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_common_url(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, platform_config_common.m_common_url);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_platform(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, platform_config_common.m_platform);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_debug(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, platform_config_common.m_debug);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_languageType(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, platform_config_common.languageType);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_APPSFLYER_DEV_KEY(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, platform_config_common.APPSFLYER_DEV_KEY);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_YOUR_APP_ID_HERE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, platform_config_common.YOUR_APP_ID_HERE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_login(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, platform_config_common.m_login);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AppName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, platform_config_common.AppName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FrameworkRoot(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, platform_config_common.FrameworkRoot);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_common_url(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			platform_config_common.m_common_url = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_platform(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			platform_config_common.m_platform = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_debug(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			platform_config_common.m_debug = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_languageType(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			platform_config_common.languageType = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_APPSFLYER_DEV_KEY(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			platform_config_common.APPSFLYER_DEV_KEY = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_YOUR_APP_ID_HERE(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			platform_config_common.YOUR_APP_ID_HERE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_login(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			platform_config_common.m_login = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

