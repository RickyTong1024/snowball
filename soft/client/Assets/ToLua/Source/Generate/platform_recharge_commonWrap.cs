//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class platform_recharge_commonWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(platform_recharge_common), typeof(System.Object));
		L.RegFunction("init", init);
		L.RegFunction("do_buy", do_buy);
		L.RegFunction("recharge_done", recharge_done);
		L.RegFunction("recharge_cancel", recharge_cancel);
		L.RegFunction("recharge_product", recharge_product);
		L.RegFunction("recharge_onOderNo", recharge_onOderNo);
		L.RegFunction("New", _Createplatform_recharge_common);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Createplatform_recharge_common(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				platform_recharge_common obj = new platform_recharge_common();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: platform_recharge_common.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			platform_recharge_common obj = (platform_recharge_common)ToLua.CheckObject<platform_recharge_common>(L, 1);
			obj.init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int do_buy(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				platform_recharge_common obj = (platform_recharge_common)ToLua.CheckObject<platform_recharge_common>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.do_buy(arg0);
				return 0;
			}
			else if (count == 3)
			{
				platform_recharge_common obj = (platform_recharge_common)ToLua.CheckObject<platform_recharge_common>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				obj.do_buy(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				platform_recharge_common obj = (platform_recharge_common)ToLua.CheckObject<platform_recharge_common>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
				obj.do_buy(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: platform_recharge_common.do_buy");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int recharge_done(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			platform_recharge_common obj = (platform_recharge_common)ToLua.CheckObject<platform_recharge_common>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.recharge_done(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int recharge_cancel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			platform_recharge_common obj = (platform_recharge_common)ToLua.CheckObject<platform_recharge_common>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.recharge_cancel(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int recharge_product(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			platform_recharge_common obj = (platform_recharge_common)ToLua.CheckObject<platform_recharge_common>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.recharge_product(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int recharge_onOderNo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			platform_recharge_common obj = (platform_recharge_common)ToLua.CheckObject<platform_recharge_common>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.recharge_onOderNo(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

