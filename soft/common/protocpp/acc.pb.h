// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acc.proto

#ifndef PROTOBUF_INCLUDED_acc_2eproto
#define PROTOBUF_INCLUDED_acc_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_acc_2eproto 

namespace protobuf_acc_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_acc_2eproto
namespace dhc {
class acc_t;
class acc_tDefaultTypeInternal;
extern acc_tDefaultTypeInternal _acc_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::acc_t* Arena::CreateMaybeMessage<::dhc::acc_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class acc_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.acc_t) */ {
 public:
  acc_t();
  virtual ~acc_t();

  acc_t(const acc_t& from);

  inline acc_t& operator=(const acc_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  acc_t(acc_t&& from) noexcept
    : acc_t() {
    *this = ::std::move(from);
  }

  inline acc_t& operator=(acc_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const acc_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const acc_t* internal_default_instance() {
    return reinterpret_cast<const acc_t*>(
               &_acc_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(acc_t* other);
  friend void swap(acc_t& a, acc_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline acc_t* New() const final {
    return CreateMaybeMessage<acc_t>(NULL);
  }

  acc_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<acc_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const acc_t& from);
  void MergeFrom(const acc_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(acc_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // optional int32 serverid = 3;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // optional int32 gm_level = 4;
  bool has_gm_level() const;
  void clear_gm_level();
  static const int kGmLevelFieldNumber = 4;
  ::google::protobuf::int32 gm_level() const;
  void set_gm_level(::google::protobuf::int32 value);

  // optional uint64 fenghao_time = 5;
  bool has_fenghao_time() const;
  void clear_fenghao_time();
  static const int kFenghaoTimeFieldNumber = 5;
  ::google::protobuf::uint64 fenghao_time() const;
  void set_fenghao_time(::google::protobuf::uint64 value);

  // optional int32 rank_forbid = 6;
  bool has_rank_forbid() const;
  void clear_rank_forbid();
  static const int kRankForbidFieldNumber = 6;
  ::google::protobuf::int32 rank_forbid() const;
  void set_rank_forbid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dhc.acc_t)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_username();
  void clear_has_username();
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_gm_level();
  void clear_has_gm_level();
  void set_has_fenghao_time();
  void clear_has_fenghao_time();
  void set_has_rank_forbid();
  void clear_has_rank_forbid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 gm_level_;
  ::google::protobuf::uint64 fenghao_time_;
  ::google::protobuf::int32 rank_forbid_;
  friend struct ::protobuf_acc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// acc_t

// optional uint64 guid = 1;
inline bool acc_t::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void acc_t::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void acc_t::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void acc_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 acc_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.guid)
  return guid_;
}
inline void acc_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.guid)
}

// optional string username = 2;
inline bool acc_t::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void acc_t::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void acc_t::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void acc_t::clear_username() {
  set_changed();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& acc_t::username() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.username)
  return username_.GetNoArena();
}
inline void acc_t::set_username(const ::std::string& value) {
  set_changed();
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.acc_t.username)
}
#if LANG_CXX11
inline void acc_t::set_username(::std::string&& value) {
  set_changed();
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.acc_t.username)
}
#endif
inline void acc_t::set_username(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.acc_t.username)
}
inline void acc_t::set_username(const char* value, size_t size) {
  set_changed();
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.acc_t.username)
}
inline ::std::string* acc_t::mutable_username() {
  set_changed();
  set_has_username();
  // @@protoc_insertion_point(field_mutable:dhc.acc_t.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* acc_t::release_username() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.acc_t.username)
  if (!has_username()) {
    return NULL;
  }
  clear_has_username();
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void acc_t::set_allocated_username(::std::string* username) {
  set_changed();
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:dhc.acc_t.username)
}

// optional int32 serverid = 3;
inline bool acc_t::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void acc_t::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void acc_t::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void acc_t::clear_serverid() {
  set_changed();
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 acc_t::serverid() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.serverid)
  return serverid_;
}
inline void acc_t::set_serverid(::google::protobuf::int32 value) {
  set_changed();
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.serverid)
}

// optional int32 gm_level = 4;
inline bool acc_t::has_gm_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void acc_t::set_has_gm_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void acc_t::clear_has_gm_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void acc_t::clear_gm_level() {
  set_changed();
  gm_level_ = 0;
  clear_has_gm_level();
}
inline ::google::protobuf::int32 acc_t::gm_level() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.gm_level)
  return gm_level_;
}
inline void acc_t::set_gm_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_gm_level();
  gm_level_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.gm_level)
}

// optional uint64 fenghao_time = 5;
inline bool acc_t::has_fenghao_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void acc_t::set_has_fenghao_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void acc_t::clear_has_fenghao_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void acc_t::clear_fenghao_time() {
  set_changed();
  fenghao_time_ = GOOGLE_ULONGLONG(0);
  clear_has_fenghao_time();
}
inline ::google::protobuf::uint64 acc_t::fenghao_time() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.fenghao_time)
  return fenghao_time_;
}
inline void acc_t::set_fenghao_time(::google::protobuf::uint64 value) {
  set_changed();
  set_has_fenghao_time();
  fenghao_time_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.fenghao_time)
}

// optional int32 rank_forbid = 6;
inline bool acc_t::has_rank_forbid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void acc_t::set_has_rank_forbid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void acc_t::clear_has_rank_forbid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void acc_t::clear_rank_forbid() {
  set_changed();
  rank_forbid_ = 0;
  clear_has_rank_forbid();
}
inline ::google::protobuf::int32 acc_t::rank_forbid() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.rank_forbid)
  return rank_forbid_;
}
inline void acc_t::set_rank_forbid(::google::protobuf::int32 value) {
  set_changed();
  set_has_rank_forbid();
  rank_forbid_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.rank_forbid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_acc_2eproto
