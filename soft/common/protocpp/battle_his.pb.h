// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: battle_his.proto

#ifndef PROTOBUF_INCLUDED_battle_5fhis_2eproto
#define PROTOBUF_INCLUDED_battle_5fhis_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_battle_5fhis_2eproto 

namespace protobuf_battle_5fhis_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_battle_5fhis_2eproto
namespace dhc {
class battle_his_t;
class battle_his_tDefaultTypeInternal;
extern battle_his_tDefaultTypeInternal _battle_his_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::battle_his_t* Arena::CreateMaybeMessage<::dhc::battle_his_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class battle_his_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.battle_his_t) */ {
 public:
  battle_his_t();
  virtual ~battle_his_t();

  battle_his_t(const battle_his_t& from);

  inline battle_his_t& operator=(const battle_his_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  battle_his_t(battle_his_t&& from) noexcept
    : battle_his_t() {
    *this = ::std::move(from);
  }

  inline battle_his_t& operator=(battle_his_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_his_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const battle_his_t* internal_default_instance() {
    return reinterpret_cast<const battle_his_t*>(
               &_battle_his_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(battle_his_t* other);
  friend void swap(battle_his_t& a, battle_his_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline battle_his_t* New() const final {
    return CreateMaybeMessage<battle_his_t>(NULL);
  }

  battle_his_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<battle_his_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const battle_his_t& from);
  void MergeFrom(const battle_his_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(battle_his_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // optional uint64 player_guid = 2;
  bool has_player_guid() const;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // optional uint64 battle_guid = 3;
  bool has_battle_guid() const;
  void clear_battle_guid();
  static const int kBattleGuidFieldNumber = 3;
  ::google::protobuf::uint64 battle_guid() const;
  void set_battle_guid(::google::protobuf::uint64 value);

  // optional int32 role_id = 4;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  ::google::protobuf::int32 role_id() const;
  void set_role_id(::google::protobuf::int32 value);

  // optional int32 type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 rank = 6;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 6;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // optional int32 sha = 7;
  bool has_sha() const;
  void clear_sha();
  static const int kShaFieldNumber = 7;
  ::google::protobuf::int32 sha() const;
  void set_sha(::google::protobuf::int32 value);

  // optional int32 lsha = 8;
  bool has_lsha() const;
  void clear_lsha();
  static const int kLshaFieldNumber = 8;
  ::google::protobuf::int32 lsha() const;
  void set_lsha(::google::protobuf::int32 value);

  // optional int32 die = 9;
  bool has_die() const;
  void clear_die();
  static const int kDieFieldNumber = 9;
  ::google::protobuf::int32 die() const;
  void set_die(::google::protobuf::int32 value);

  // optional uint64 time = 11;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 11;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // optional int32 score = 10;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 10;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // optional int32 achieve = 12;
  bool has_achieve() const;
  void clear_achieve();
  static const int kAchieveFieldNumber = 12;
  ::google::protobuf::int32 achieve() const;
  void set_achieve(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dhc.battle_his_t)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_player_guid();
  void clear_has_player_guid();
  void set_has_battle_guid();
  void clear_has_battle_guid();
  void set_has_role_id();
  void clear_has_role_id();
  void set_has_type();
  void clear_has_type();
  void set_has_rank();
  void clear_has_rank();
  void set_has_sha();
  void clear_has_sha();
  void set_has_lsha();
  void clear_has_lsha();
  void set_has_die();
  void clear_has_die();
  void set_has_score();
  void clear_has_score();
  void set_has_time();
  void clear_has_time();
  void set_has_achieve();
  void clear_has_achieve();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::uint64 battle_guid_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 sha_;
  ::google::protobuf::int32 lsha_;
  ::google::protobuf::int32 die_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 achieve_;
  friend struct ::protobuf_battle_5fhis_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// battle_his_t

// optional uint64 guid = 1;
inline bool battle_his_t::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_his_t::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_his_t::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_his_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 battle_his_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.guid)
  return guid_;
}
inline void battle_his_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.guid)
}

// optional uint64 player_guid = 2;
inline bool battle_his_t::has_player_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_his_t::set_has_player_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_his_t::clear_has_player_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_his_t::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_player_guid();
}
inline ::google::protobuf::uint64 battle_his_t::player_guid() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.player_guid)
  return player_guid_;
}
inline void battle_his_t::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_player_guid();
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.player_guid)
}

// optional uint64 battle_guid = 3;
inline bool battle_his_t::has_battle_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void battle_his_t::set_has_battle_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void battle_his_t::clear_has_battle_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void battle_his_t::clear_battle_guid() {
  set_changed();
  battle_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_battle_guid();
}
inline ::google::protobuf::uint64 battle_his_t::battle_guid() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.battle_guid)
  return battle_guid_;
}
inline void battle_his_t::set_battle_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_battle_guid();
  battle_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.battle_guid)
}

// optional int32 role_id = 4;
inline bool battle_his_t::has_role_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void battle_his_t::set_has_role_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void battle_his_t::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void battle_his_t::clear_role_id() {
  set_changed();
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 battle_his_t::role_id() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.role_id)
  return role_id_;
}
inline void battle_his_t::set_role_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.role_id)
}

// optional int32 type = 5;
inline bool battle_his_t::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void battle_his_t::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void battle_his_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void battle_his_t::clear_type() {
  set_changed();
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 battle_his_t::type() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.type)
  return type_;
}
inline void battle_his_t::set_type(::google::protobuf::int32 value) {
  set_changed();
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.type)
}

// optional int32 rank = 6;
inline bool battle_his_t::has_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void battle_his_t::set_has_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void battle_his_t::clear_has_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void battle_his_t::clear_rank() {
  set_changed();
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 battle_his_t::rank() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.rank)
  return rank_;
}
inline void battle_his_t::set_rank(::google::protobuf::int32 value) {
  set_changed();
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.rank)
}

// optional int32 sha = 7;
inline bool battle_his_t::has_sha() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void battle_his_t::set_has_sha() {
  _has_bits_[0] |= 0x00000040u;
}
inline void battle_his_t::clear_has_sha() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void battle_his_t::clear_sha() {
  set_changed();
  sha_ = 0;
  clear_has_sha();
}
inline ::google::protobuf::int32 battle_his_t::sha() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.sha)
  return sha_;
}
inline void battle_his_t::set_sha(::google::protobuf::int32 value) {
  set_changed();
  set_has_sha();
  sha_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.sha)
}

// optional int32 lsha = 8;
inline bool battle_his_t::has_lsha() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void battle_his_t::set_has_lsha() {
  _has_bits_[0] |= 0x00000080u;
}
inline void battle_his_t::clear_has_lsha() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void battle_his_t::clear_lsha() {
  set_changed();
  lsha_ = 0;
  clear_has_lsha();
}
inline ::google::protobuf::int32 battle_his_t::lsha() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.lsha)
  return lsha_;
}
inline void battle_his_t::set_lsha(::google::protobuf::int32 value) {
  set_changed();
  set_has_lsha();
  lsha_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.lsha)
}

// optional int32 die = 9;
inline bool battle_his_t::has_die() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void battle_his_t::set_has_die() {
  _has_bits_[0] |= 0x00000100u;
}
inline void battle_his_t::clear_has_die() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void battle_his_t::clear_die() {
  set_changed();
  die_ = 0;
  clear_has_die();
}
inline ::google::protobuf::int32 battle_his_t::die() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.die)
  return die_;
}
inline void battle_his_t::set_die(::google::protobuf::int32 value) {
  set_changed();
  set_has_die();
  die_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.die)
}

// optional int32 score = 10;
inline bool battle_his_t::has_score() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void battle_his_t::set_has_score() {
  _has_bits_[0] |= 0x00000400u;
}
inline void battle_his_t::clear_has_score() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void battle_his_t::clear_score() {
  set_changed();
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 battle_his_t::score() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.score)
  return score_;
}
inline void battle_his_t::set_score(::google::protobuf::int32 value) {
  set_changed();
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.score)
}

// optional uint64 time = 11;
inline bool battle_his_t::has_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void battle_his_t::set_has_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void battle_his_t::clear_has_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void battle_his_t::clear_time() {
  set_changed();
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 battle_his_t::time() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.time)
  return time_;
}
inline void battle_his_t::set_time(::google::protobuf::uint64 value) {
  set_changed();
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.time)
}

// optional int32 achieve = 12;
inline bool battle_his_t::has_achieve() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void battle_his_t::set_has_achieve() {
  _has_bits_[0] |= 0x00000800u;
}
inline void battle_his_t::clear_has_achieve() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void battle_his_t::clear_achieve() {
  set_changed();
  achieve_ = 0;
  clear_has_achieve();
}
inline ::google::protobuf::int32 battle_his_t::achieve() const {
  // @@protoc_insertion_point(field_get:dhc.battle_his_t.achieve)
  return achieve_;
}
inline void battle_his_t::set_achieve(::google::protobuf::int32 value) {
  set_changed();
  set_has_achieve();
  achieve_ = value;
  // @@protoc_insertion_point(field_set:dhc.battle_his_t.achieve)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_battle_5fhis_2eproto
