// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_battle.proto

#include "msg_battle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_battle_5fhis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_battle_5fhis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_battle_his_t;
}  // namespace protobuf_battle_5fhis_2eproto
namespace protobuf_msg_5fbattle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fbattle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_msg_battle_player_info;
}  // namespace protobuf_msg_5fbattle_2eproto
namespace protocol {
namespace game {
class msg_battle_player_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msg_battle_player_info>
      _instance;
} _msg_battle_player_info_default_instance_;
class req_rc_rm_create_roomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<req_rc_rm_create_room>
      _instance;
} _req_rc_rm_create_room_default_instance_;
class rep_rc_rm_create_roomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rep_rc_rm_create_room>
      _instance;
} _rep_rc_rm_create_room_default_instance_;
class push_rc_rm_set_player_roomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<push_rc_rm_set_player_room>
      _instance;
} _push_rc_rm_set_player_room_default_instance_;
class push_rm_rc_battle_endDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<push_rm_rc_battle_end>
      _instance;
} _push_rm_rc_battle_end_default_instance_;
class push_r_rm_createdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<push_r_rm_created>
      _instance;
} _push_r_rm_created_default_instance_;
class push_rc_hall_battle_endDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<push_rc_hall_battle_end>
      _instance;
} _push_rc_hall_battle_end_default_instance_;
class smsg_battle_endDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_battle_end>
      _instance;
} _smsg_battle_end_default_instance_;
class cmsg_offline_battleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_offline_battle>
      _instance;
} _cmsg_offline_battle_default_instance_;
class cmsg_offline_battle_endDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_offline_battle_end>
      _instance;
} _cmsg_offline_battle_end_default_instance_;
class smsg_offline_battle_endDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_offline_battle_end>
      _instance;
} _smsg_offline_battle_end_default_instance_;
}  // namespace game
}  // namespace protocol
namespace protobuf_msg_5fbattle_2eproto {
static void InitDefaultsmsg_battle_player_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_msg_battle_player_info_default_instance_;
    new (ptr) ::protocol::game::msg_battle_player_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::msg_battle_player_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_msg_battle_player_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmsg_battle_player_info}, {}};

static void InitDefaultsreq_rc_rm_create_room() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_req_rc_rm_create_room_default_instance_;
    new (ptr) ::protocol::game::req_rc_rm_create_room();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::req_rc_rm_create_room::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_req_rc_rm_create_room =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsreq_rc_rm_create_room}, {}};

static void InitDefaultsrep_rc_rm_create_room() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_rep_rc_rm_create_room_default_instance_;
    new (ptr) ::protocol::game::rep_rc_rm_create_room();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::rep_rc_rm_create_room::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rep_rc_rm_create_room =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrep_rc_rm_create_room}, {}};

static void InitDefaultspush_rc_rm_set_player_room() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_push_rc_rm_set_player_room_default_instance_;
    new (ptr) ::protocol::game::push_rc_rm_set_player_room();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::push_rc_rm_set_player_room::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_push_rc_rm_set_player_room =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultspush_rc_rm_set_player_room}, {
      &protobuf_msg_5fbattle_2eproto::scc_info_msg_battle_player_info.base,}};

static void InitDefaultspush_rm_rc_battle_end() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_push_rm_rc_battle_end_default_instance_;
    new (ptr) ::protocol::game::push_rm_rc_battle_end();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::push_rm_rc_battle_end::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_push_rm_rc_battle_end =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspush_rm_rc_battle_end}, {}};

static void InitDefaultspush_r_rm_created() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_push_r_rm_created_default_instance_;
    new (ptr) ::protocol::game::push_r_rm_created();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::push_r_rm_created::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_push_r_rm_created =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspush_r_rm_created}, {}};

static void InitDefaultspush_rc_hall_battle_end() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_push_rc_hall_battle_end_default_instance_;
    new (ptr) ::protocol::game::push_rc_hall_battle_end();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::push_rc_hall_battle_end::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_push_rc_hall_battle_end =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspush_rc_hall_battle_end}, {}};

static void InitDefaultssmsg_battle_end() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_battle_end_default_instance_;
    new (ptr) ::protocol::game::smsg_battle_end();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_battle_end::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_battle_end =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_battle_end}, {
      &protobuf_battle_5fhis_2eproto::scc_info_battle_his_t.base,}};

static void InitDefaultscmsg_offline_battle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_offline_battle_default_instance_;
    new (ptr) ::protocol::game::cmsg_offline_battle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_offline_battle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_offline_battle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_offline_battle}, {}};

static void InitDefaultscmsg_offline_battle_end() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_offline_battle_end_default_instance_;
    new (ptr) ::protocol::game::cmsg_offline_battle_end();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_offline_battle_end::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_offline_battle_end =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_offline_battle_end}, {}};

static void InitDefaultssmsg_offline_battle_end() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_offline_battle_end_default_instance_;
    new (ptr) ::protocol::game::smsg_offline_battle_end();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_offline_battle_end::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_offline_battle_end =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_offline_battle_end}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_msg_battle_player_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_req_rc_rm_create_room.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rep_rc_rm_create_room.base);
  ::google::protobuf::internal::InitSCC(&scc_info_push_rc_rm_set_player_room.base);
  ::google::protobuf::internal::InitSCC(&scc_info_push_rm_rc_battle_end.base);
  ::google::protobuf::internal::InitSCC(&scc_info_push_r_rm_created.base);
  ::google::protobuf::internal::InitSCC(&scc_info_push_rc_hall_battle_end.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_battle_end.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_offline_battle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_offline_battle_end.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_offline_battle_end.base);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, role_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, role_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, toukuang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, fashion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, cup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, attr_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, attr_param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, attr_param2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, attr_param3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, camp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_battle_player_info, name_color_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  ~0u,
  7,
  8,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_rc_rm_create_room, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_rc_rm_create_room, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_rc_rm_create_room, battle_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_rc_rm_create_room, battle_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_rc_rm_create_room, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_rc_rm_create_room, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_rc_rm_create_room, udp_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_rc_rm_create_room, udp_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_rc_rm_create_room, tcp_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_rc_rm_create_room, tcp_port_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_rm_set_player_room, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_rm_set_player_room, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_rm_set_player_room, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_rm_set_player_room, battle_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_rm_set_player_room, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_rm_set_player_room, player_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rm_rc_battle_end, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rm_rc_battle_end, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rm_rc_battle_end, battle_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rm_rc_battle_end, result_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_r_rm_created, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_r_rm_created, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_r_rm_created, battle_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_hall_battle_end, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_hall_battle_end, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_hall_battle_end, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_hall_battle_end, guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_rc_hall_battle_end, result_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_battle_end, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_battle_end, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_battle_end, box_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_battle_end, battle_his_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_battle_end, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_battle_end, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_battle_end, cup_),
  1,
  0,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_offline_battle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_offline_battle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_offline_battle, fight_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_offline_battle_end, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_offline_battle_end, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_offline_battle_end, rank_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_offline_battle_end, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_offline_battle_end, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_offline_battle_end, box_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_offline_battle_end, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_offline_battle_end, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_offline_battle_end, cup_),
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 21, sizeof(::protocol::game::msg_battle_player_info)},
  { 37, 44, sizeof(::protocol::game::req_rc_rm_create_room)},
  { 46, 55, sizeof(::protocol::game::rep_rc_rm_create_room)},
  { 59, 68, sizeof(::protocol::game::push_rc_rm_set_player_room)},
  { 72, 79, sizeof(::protocol::game::push_rm_rc_battle_end)},
  { 81, 87, sizeof(::protocol::game::push_r_rm_created)},
  { 88, 96, sizeof(::protocol::game::push_rc_hall_battle_end)},
  { 99, 109, sizeof(::protocol::game::smsg_battle_end)},
  { 114, 120, sizeof(::protocol::game::cmsg_offline_battle)},
  { 121, 127, sizeof(::protocol::game::cmsg_offline_battle_end)},
  { 128, 137, sizeof(::protocol::game::smsg_offline_battle_end)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_msg_battle_player_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_req_rc_rm_create_room_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_rep_rc_rm_create_room_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_push_rc_rm_set_player_room_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_push_rm_rc_battle_end_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_push_r_rm_created_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_push_rc_hall_battle_end_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_battle_end_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_offline_battle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_offline_battle_end_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_offline_battle_end_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msg_battle.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020msg_battle.proto\022\rprotocol.game\032\020battl"
      "e_his.proto\"\255\002\n\026msg_battle_player_info\022\014"
      "\n\004guid\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\022\017\n\007role_id\030\003 "
      "\002(\005\022\022\n\nrole_level\030\004 \002(\005\022\013\n\003sex\030\005 \002(\005\022\016\n\006"
      "avatar\030\006 \002(\005\022\020\n\010toukuang\030\010 \002(\005\022\017\n\007fashio"
      "n\030\t \003(\005\022\021\n\tregion_id\030\n \002(\005\022\013\n\003cup\030\013 \002(\005\022"
      "\021\n\tattr_type\030\016 \003(\005\022\023\n\013attr_param1\030\017 \003(\005\022"
      "\023\n\013attr_param2\030\020 \003(\005\022\023\n\013attr_param3\030\021 \003("
      "\005\022\014\n\004camp\030\022 \001(\005\022\022\n\nname_color\030\023 \002(\005\"A\n\025r"
      "eq_rc_rm_create_room\022\023\n\013battle_guid\030\001 \002("
      "\004\022\023\n\013battle_type\030\002 \002(\005\"[\n\025rep_rc_rm_crea"
      "te_room\022\016\n\006udp_ip\030\001 \002(\t\022\020\n\010udp_port\030\002 \002("
      "\005\022\016\n\006tcp_ip\030\003 \002(\t\022\020\n\010tcp_port\030\004 \002(\005\"\204\001\n\032"
      "push_rc_rm_set_player_room\022\014\n\004guid\030\001 \002(\004"
      "\022\023\n\013battle_guid\030\002 \002(\004\022\014\n\004code\030\003 \002(\t\0225\n\006p"
      "layer\030\004 \002(\0132%.protocol.game.msg_battle_p"
      "layer_info\"<\n\025push_rm_rc_battle_end\022\023\n\013b"
      "attle_guid\030\001 \002(\004\022\016\n\006result\030\002 \002(\014\"(\n\021push"
      "_r_rm_created\022\023\n\013battle_guid\030\001 \002(\004\"F\n\027pu"
      "sh_rc_hall_battle_end\022\014\n\004type\030\001 \002(\005\022\r\n\005g"
      "uids\030\002 \003(\004\022\016\n\006result\030\003 \002(\014\"p\n\017smsg_battl"
      "e_end\022\016\n\006box_id\030\001 \002(\005\022%\n\nbattle_his\030\002 \001("
      "\0132\021.dhc.battle_his_t\022\014\n\004gold\030\003 \002(\005\022\013\n\003ex"
      "p\030\004 \002(\005\022\013\n\003cup\030\005 \002(\005\"$\n\023cmsg_offline_bat"
      "tle\022\r\n\005fight\030\001 \002(\005\"\'\n\027cmsg_offline_battl"
      "e_end\022\014\n\004rank\030\001 \002(\005\"Q\n\027smsg_offline_batt"
      "le_end\022\016\n\006box_id\030\001 \002(\005\022\014\n\004gold\030\002 \002(\005\022\013\n\003"
      "exp\030\003 \002(\005\022\013\n\003cup\030\004 \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1102);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_battle.proto", &protobuf_RegisterTypes);
  ::protobuf_battle_5fhis_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_5fbattle_2eproto
namespace protocol {
namespace game {

// ===================================================================

void msg_battle_player_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_battle_player_info::kGuidFieldNumber;
const int msg_battle_player_info::kNameFieldNumber;
const int msg_battle_player_info::kRoleIdFieldNumber;
const int msg_battle_player_info::kRoleLevelFieldNumber;
const int msg_battle_player_info::kSexFieldNumber;
const int msg_battle_player_info::kAvatarFieldNumber;
const int msg_battle_player_info::kToukuangFieldNumber;
const int msg_battle_player_info::kFashionFieldNumber;
const int msg_battle_player_info::kRegionIdFieldNumber;
const int msg_battle_player_info::kCupFieldNumber;
const int msg_battle_player_info::kAttrTypeFieldNumber;
const int msg_battle_player_info::kAttrParam1FieldNumber;
const int msg_battle_player_info::kAttrParam2FieldNumber;
const int msg_battle_player_info::kAttrParam3FieldNumber;
const int msg_battle_player_info::kCampFieldNumber;
const int msg_battle_player_info::kNameColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_battle_player_info::msg_battle_player_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_msg_battle_player_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.msg_battle_player_info)
}
msg_battle_player_info::msg_battle_player_info(const msg_battle_player_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      fashion_(from.fashion_),
      attr_type_(from.attr_type_),
      attr_param1_(from.attr_param1_),
      attr_param2_(from.attr_param2_),
      attr_param3_(from.attr_param3_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&name_color_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(name_color_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.msg_battle_player_info)
}

void msg_battle_player_info::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_color_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(name_color_));
}

msg_battle_player_info::~msg_battle_player_info() {
  // @@protoc_insertion_point(destructor:protocol.game.msg_battle_player_info)
  SharedDtor();
}

void msg_battle_player_info::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msg_battle_player_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* msg_battle_player_info::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msg_battle_player_info& msg_battle_player_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_msg_battle_player_info.base);
  return *internal_default_instance();
}


void msg_battle_player_info::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.msg_battle_player_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  fashion_.Clear();
  set_changed();
  attr_type_.Clear();
  set_changed();
  attr_param1_.Clear();
  set_changed();
  attr_param2_.Clear();
  set_changed();
  attr_param3_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&region_id_) -
        reinterpret_cast<char*>(&guid_)) + sizeof(region_id_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&cup_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&name_color_) -
        reinterpret_cast<char*>(&cup_)) + sizeof(name_color_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msg_battle_player_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.msg_battle_player_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.msg_battle_player_info.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_role_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_role_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 sex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 avatar = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_avatar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 toukuang = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_toukuang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toukuang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 fashion = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72u, input, this->mutable_fashion())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fashion())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 region_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cup = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_cup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 attr_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 112u, input, this->mutable_attr_type())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_attr_type())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 attr_param1 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 120u, input, this->mutable_attr_param1())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_attr_param1())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 attr_param2 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 128u, input, this->mutable_attr_param2())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_attr_param2())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 attr_param3 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 136u, input, this->mutable_attr_param3())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_attr_param3())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 camp = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_camp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 name_color = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_name_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.msg_battle_player_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.msg_battle_player_info)
  return false;
#undef DO_
}

void msg_battle_player_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.msg_battle_player_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.msg_battle_player_info.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required int32 role_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->role_id(), output);
  }

  // required int32 role_level = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->role_level(), output);
  }

  // required int32 sex = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sex(), output);
  }

  // required int32 avatar = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->avatar(), output);
  }

  // required int32 toukuang = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->toukuang(), output);
  }

  // repeated int32 fashion = 9;
  for (int i = 0, n = this->fashion_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->fashion(i), output);
  }

  // required int32 region_id = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->region_id(), output);
  }

  // required int32 cup = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->cup(), output);
  }

  // repeated int32 attr_type = 14;
  for (int i = 0, n = this->attr_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      14, this->attr_type(i), output);
  }

  // repeated int32 attr_param1 = 15;
  for (int i = 0, n = this->attr_param1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      15, this->attr_param1(i), output);
  }

  // repeated int32 attr_param2 = 16;
  for (int i = 0, n = this->attr_param2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      16, this->attr_param2(i), output);
  }

  // repeated int32 attr_param3 = 17;
  for (int i = 0, n = this->attr_param3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      17, this->attr_param3(i), output);
  }

  // optional int32 camp = 18;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->camp(), output);
  }

  // required int32 name_color = 19;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->name_color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.msg_battle_player_info)
}

::google::protobuf::uint8* msg_battle_player_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.msg_battle_player_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.msg_battle_player_info.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 role_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->role_id(), target);
  }

  // required int32 role_level = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->role_level(), target);
  }

  // required int32 sex = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sex(), target);
  }

  // required int32 avatar = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->avatar(), target);
  }

  // required int32 toukuang = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->toukuang(), target);
  }

  // repeated int32 fashion = 9;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(9, this->fashion_, target);

  // required int32 region_id = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->region_id(), target);
  }

  // required int32 cup = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->cup(), target);
  }

  // repeated int32 attr_type = 14;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(14, this->attr_type_, target);

  // repeated int32 attr_param1 = 15;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(15, this->attr_param1_, target);

  // repeated int32 attr_param2 = 16;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(16, this->attr_param2_, target);

  // repeated int32 attr_param3 = 17;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(17, this->attr_param3_, target);

  // optional int32 camp = 18;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->camp(), target);
  }

  // required int32 name_color = 19;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->name_color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.msg_battle_player_info)
  return target;
}

size_t msg_battle_player_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.msg_battle_player_info)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_guid()) {
    // required uint64 guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  if (has_role_id()) {
    // required int32 role_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_id());
  }

  if (has_role_level()) {
    // required int32 role_level = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_level());
  }

  if (has_sex()) {
    // required int32 sex = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  if (has_avatar()) {
    // required int32 avatar = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->avatar());
  }

  if (has_toukuang()) {
    // required int32 toukuang = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->toukuang());
  }

  if (has_region_id()) {
    // required int32 region_id = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->region_id());
  }

  if (has_cup()) {
    // required int32 cup = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cup());
  }

  if (has_name_color()) {
    // required int32 name_color = 19;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->name_color());
  }

  return total_size;
}
size_t msg_battle_player_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.msg_battle_player_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000005ff) ^ 0x000005ff) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint64 guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());

    // required int32 role_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_id());

    // required int32 role_level = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_level());

    // required int32 sex = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());

    // required int32 avatar = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->avatar());

    // required int32 toukuang = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->toukuang());

    // required int32 region_id = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->region_id());

    // required int32 cup = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cup());

    // required int32 name_color = 19;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->name_color());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 fashion = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->fashion_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->fashion_size());
    total_size += data_size;
  }

  // repeated int32 attr_type = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->attr_type_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->attr_type_size());
    total_size += data_size;
  }

  // repeated int32 attr_param1 = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->attr_param1_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->attr_param1_size());
    total_size += data_size;
  }

  // repeated int32 attr_param2 = 16;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->attr_param2_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->attr_param2_size());
    total_size += data_size;
  }

  // repeated int32 attr_param3 = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->attr_param3_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->attr_param3_size());
    total_size += data_size;
  }

  // optional int32 camp = 18;
  if (has_camp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void msg_battle_player_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.msg_battle_player_info)
  GOOGLE_DCHECK_NE(&from, this);
  const msg_battle_player_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_battle_player_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.msg_battle_player_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.msg_battle_player_info)
    MergeFrom(*source);
  }
}

void msg_battle_player_info::MergeFrom(const msg_battle_player_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.msg_battle_player_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fashion_.MergeFrom(from.fashion_);
  attr_type_.MergeFrom(from.attr_type_);
  attr_param1_.MergeFrom(from.attr_param1_);
  attr_param2_.MergeFrom(from.attr_param2_);
  attr_param3_.MergeFrom(from.attr_param3_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      role_id_ = from.role_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      role_level_ = from.role_level_;
    }
    if (cached_has_bits & 0x00000010u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000020u) {
      avatar_ = from.avatar_;
    }
    if (cached_has_bits & 0x00000040u) {
      toukuang_ = from.toukuang_;
    }
    if (cached_has_bits & 0x00000080u) {
      region_id_ = from.region_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      cup_ = from.cup_;
    }
    if (cached_has_bits & 0x00000200u) {
      camp_ = from.camp_;
    }
    if (cached_has_bits & 0x00000400u) {
      name_color_ = from.name_color_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void msg_battle_player_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.msg_battle_player_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_battle_player_info::CopyFrom(const msg_battle_player_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.msg_battle_player_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg_battle_player_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x000005ff) != 0x000005ff) return false;
  return true;
}

void msg_battle_player_info::Swap(msg_battle_player_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_battle_player_info::InternalSwap(msg_battle_player_info* other) {
  using std::swap;
  fashion_.InternalSwap(&other->fashion_);
  attr_type_.InternalSwap(&other->attr_type_);
  attr_param1_.InternalSwap(&other->attr_param1_);
  attr_param2_.InternalSwap(&other->attr_param2_);
  attr_param3_.InternalSwap(&other->attr_param3_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(role_id_, other->role_id_);
  swap(role_level_, other->role_level_);
  swap(sex_, other->sex_);
  swap(avatar_, other->avatar_);
  swap(toukuang_, other->toukuang_);
  swap(region_id_, other->region_id_);
  swap(cup_, other->cup_);
  swap(camp_, other->camp_);
  swap(name_color_, other->name_color_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata msg_battle_player_info::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void req_rc_rm_create_room::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_rc_rm_create_room::kBattleGuidFieldNumber;
const int req_rc_rm_create_room::kBattleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_rc_rm_create_room::req_rc_rm_create_room()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_req_rc_rm_create_room.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.req_rc_rm_create_room)
}
req_rc_rm_create_room::req_rc_rm_create_room(const req_rc_rm_create_room& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&battle_guid_, &from.battle_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&battle_type_) -
    reinterpret_cast<char*>(&battle_guid_)) + sizeof(battle_type_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.req_rc_rm_create_room)
}

void req_rc_rm_create_room::SharedCtor() {
  ::memset(&battle_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battle_type_) -
      reinterpret_cast<char*>(&battle_guid_)) + sizeof(battle_type_));
}

req_rc_rm_create_room::~req_rc_rm_create_room() {
  // @@protoc_insertion_point(destructor:protocol.game.req_rc_rm_create_room)
  SharedDtor();
}

void req_rc_rm_create_room::SharedDtor() {
}

void req_rc_rm_create_room::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* req_rc_rm_create_room::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_rc_rm_create_room& req_rc_rm_create_room::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_req_rc_rm_create_room.base);
  return *internal_default_instance();
}


void req_rc_rm_create_room::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.req_rc_rm_create_room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&battle_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&battle_type_) -
        reinterpret_cast<char*>(&battle_guid_)) + sizeof(battle_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool req_rc_rm_create_room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.req_rc_rm_create_room)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 battle_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_battle_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battle_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 battle_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_battle_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.req_rc_rm_create_room)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.req_rc_rm_create_room)
  return false;
#undef DO_
}

void req_rc_rm_create_room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.req_rc_rm_create_room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 battle_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->battle_guid(), output);
  }

  // required int32 battle_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->battle_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.req_rc_rm_create_room)
}

::google::protobuf::uint8* req_rc_rm_create_room::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.req_rc_rm_create_room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 battle_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->battle_guid(), target);
  }

  // required int32 battle_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->battle_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.req_rc_rm_create_room)
  return target;
}

size_t req_rc_rm_create_room::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.req_rc_rm_create_room)
  size_t total_size = 0;

  if (has_battle_guid()) {
    // required uint64 battle_guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battle_guid());
  }

  if (has_battle_type()) {
    // required int32 battle_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battle_type());
  }

  return total_size;
}
size_t req_rc_rm_create_room::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.req_rc_rm_create_room)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 battle_guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battle_guid());

    // required int32 battle_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battle_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void req_rc_rm_create_room::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.req_rc_rm_create_room)
  GOOGLE_DCHECK_NE(&from, this);
  const req_rc_rm_create_room* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_rc_rm_create_room>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.req_rc_rm_create_room)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.req_rc_rm_create_room)
    MergeFrom(*source);
  }
}

void req_rc_rm_create_room::MergeFrom(const req_rc_rm_create_room& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.req_rc_rm_create_room)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      battle_guid_ = from.battle_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      battle_type_ = from.battle_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void req_rc_rm_create_room::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.req_rc_rm_create_room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_rc_rm_create_room::CopyFrom(const req_rc_rm_create_room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.req_rc_rm_create_room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_rc_rm_create_room::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void req_rc_rm_create_room::Swap(req_rc_rm_create_room* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_rc_rm_create_room::InternalSwap(req_rc_rm_create_room* other) {
  using std::swap;
  swap(battle_guid_, other->battle_guid_);
  swap(battle_type_, other->battle_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata req_rc_rm_create_room::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rep_rc_rm_create_room::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rep_rc_rm_create_room::kUdpIpFieldNumber;
const int rep_rc_rm_create_room::kUdpPortFieldNumber;
const int rep_rc_rm_create_room::kTcpIpFieldNumber;
const int rep_rc_rm_create_room::kTcpPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rep_rc_rm_create_room::rep_rc_rm_create_room()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_rep_rc_rm_create_room.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.rep_rc_rm_create_room)
}
rep_rc_rm_create_room::rep_rc_rm_create_room(const rep_rc_rm_create_room& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  udp_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_udp_ip()) {
    udp_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.udp_ip_);
  }
  tcp_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tcp_ip()) {
    tcp_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tcp_ip_);
  }
  ::memcpy(&udp_port_, &from.udp_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&tcp_port_) -
    reinterpret_cast<char*>(&udp_port_)) + sizeof(tcp_port_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.rep_rc_rm_create_room)
}

void rep_rc_rm_create_room::SharedCtor() {
  udp_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tcp_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&udp_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tcp_port_) -
      reinterpret_cast<char*>(&udp_port_)) + sizeof(tcp_port_));
}

rep_rc_rm_create_room::~rep_rc_rm_create_room() {
  // @@protoc_insertion_point(destructor:protocol.game.rep_rc_rm_create_room)
  SharedDtor();
}

void rep_rc_rm_create_room::SharedDtor() {
  udp_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tcp_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rep_rc_rm_create_room::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rep_rc_rm_create_room::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rep_rc_rm_create_room& rep_rc_rm_create_room::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_rep_rc_rm_create_room.base);
  return *internal_default_instance();
}


void rep_rc_rm_create_room::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.rep_rc_rm_create_room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_changed();
      udp_ip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      set_changed();
      tcp_ip_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&udp_port_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tcp_port_) -
        reinterpret_cast<char*>(&udp_port_)) + sizeof(tcp_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rep_rc_rm_create_room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.rep_rc_rm_create_room)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string udp_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_udp_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->udp_ip().data(), static_cast<int>(this->udp_ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.rep_rc_rm_create_room.udp_ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 udp_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_udp_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &udp_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string tcp_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tcp_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tcp_ip().data(), static_cast<int>(this->tcp_ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.rep_rc_rm_create_room.tcp_ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 tcp_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_tcp_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tcp_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.rep_rc_rm_create_room)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.rep_rc_rm_create_room)
  return false;
#undef DO_
}

void rep_rc_rm_create_room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.rep_rc_rm_create_room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string udp_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udp_ip().data(), static_cast<int>(this->udp_ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.rep_rc_rm_create_room.udp_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->udp_ip(), output);
  }

  // required int32 udp_port = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->udp_port(), output);
  }

  // required string tcp_ip = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tcp_ip().data(), static_cast<int>(this->tcp_ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.rep_rc_rm_create_room.tcp_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tcp_ip(), output);
  }

  // required int32 tcp_port = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tcp_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.rep_rc_rm_create_room)
}

::google::protobuf::uint8* rep_rc_rm_create_room::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.rep_rc_rm_create_room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string udp_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udp_ip().data(), static_cast<int>(this->udp_ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.rep_rc_rm_create_room.udp_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->udp_ip(), target);
  }

  // required int32 udp_port = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->udp_port(), target);
  }

  // required string tcp_ip = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tcp_ip().data(), static_cast<int>(this->tcp_ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.rep_rc_rm_create_room.tcp_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tcp_ip(), target);
  }

  // required int32 tcp_port = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tcp_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.rep_rc_rm_create_room)
  return target;
}

size_t rep_rc_rm_create_room::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.rep_rc_rm_create_room)
  size_t total_size = 0;

  if (has_udp_ip()) {
    // required string udp_ip = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udp_ip());
  }

  if (has_tcp_ip()) {
    // required string tcp_ip = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tcp_ip());
  }

  if (has_udp_port()) {
    // required int32 udp_port = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->udp_port());
  }

  if (has_tcp_port()) {
    // required int32 tcp_port = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tcp_port());
  }

  return total_size;
}
size_t rep_rc_rm_create_room::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.rep_rc_rm_create_room)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string udp_ip = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udp_ip());

    // required string tcp_ip = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tcp_ip());

    // required int32 udp_port = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->udp_port());

    // required int32 tcp_port = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tcp_port());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rep_rc_rm_create_room::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.rep_rc_rm_create_room)
  GOOGLE_DCHECK_NE(&from, this);
  const rep_rc_rm_create_room* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rep_rc_rm_create_room>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.rep_rc_rm_create_room)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.rep_rc_rm_create_room)
    MergeFrom(*source);
  }
}

void rep_rc_rm_create_room::MergeFrom(const rep_rc_rm_create_room& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.rep_rc_rm_create_room)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_udp_ip();
      udp_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.udp_ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tcp_ip();
      tcp_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tcp_ip_);
    }
    if (cached_has_bits & 0x00000004u) {
      udp_port_ = from.udp_port_;
    }
    if (cached_has_bits & 0x00000008u) {
      tcp_port_ = from.tcp_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rep_rc_rm_create_room::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.rep_rc_rm_create_room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rep_rc_rm_create_room::CopyFrom(const rep_rc_rm_create_room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.rep_rc_rm_create_room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rep_rc_rm_create_room::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void rep_rc_rm_create_room::Swap(rep_rc_rm_create_room* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rep_rc_rm_create_room::InternalSwap(rep_rc_rm_create_room* other) {
  using std::swap;
  udp_ip_.Swap(&other->udp_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tcp_ip_.Swap(&other->tcp_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(udp_port_, other->udp_port_);
  swap(tcp_port_, other->tcp_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rep_rc_rm_create_room::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void push_rc_rm_set_player_room::InitAsDefaultInstance() {
  ::protocol::game::_push_rc_rm_set_player_room_default_instance_._instance.get_mutable()->player_ = const_cast< ::protocol::game::msg_battle_player_info*>(
      ::protocol::game::msg_battle_player_info::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int push_rc_rm_set_player_room::kGuidFieldNumber;
const int push_rc_rm_set_player_room::kBattleGuidFieldNumber;
const int push_rc_rm_set_player_room::kCodeFieldNumber;
const int push_rc_rm_set_player_room::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

push_rc_rm_set_player_room::push_rc_rm_set_player_room()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_push_rc_rm_set_player_room.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.push_rc_rm_set_player_room)
}
push_rc_rm_set_player_room::push_rc_rm_set_player_room(const push_rc_rm_set_player_room& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.has_player()) {
    player_ = new ::protocol::game::msg_battle_player_info(*from.player_);
  } else {
    player_ = NULL;
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&battle_guid_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(battle_guid_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.push_rc_rm_set_player_room)
}

void push_rc_rm_set_player_room::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battle_guid_) -
      reinterpret_cast<char*>(&player_)) + sizeof(battle_guid_));
}

push_rc_rm_set_player_room::~push_rc_rm_set_player_room() {
  // @@protoc_insertion_point(destructor:protocol.game.push_rc_rm_set_player_room)
  SharedDtor();
}

void push_rc_rm_set_player_room::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_;
}

void push_rc_rm_set_player_room::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* push_rc_rm_set_player_room::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const push_rc_rm_set_player_room& push_rc_rm_set_player_room::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_push_rc_rm_set_player_room.base);
  return *internal_default_instance();
}


void push_rc_rm_set_player_room::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.push_rc_rm_set_player_room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_changed();
      code_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(player_ != NULL);
      player_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&battle_guid_) -
        reinterpret_cast<char*>(&guid_)) + sizeof(battle_guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool push_rc_rm_set_player_room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.push_rc_rm_set_player_room)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 battle_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_battle_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battle_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.push_rc_rm_set_player_room.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .protocol.game.msg_battle_player_info player = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.push_rc_rm_set_player_room)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.push_rc_rm_set_player_room)
  return false;
#undef DO_
}

void push_rc_rm_set_player_room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.push_rc_rm_set_player_room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // required uint64 battle_guid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battle_guid(), output);
  }

  // required string code = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.push_rc_rm_set_player_room.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // required .protocol.game.msg_battle_player_info player = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_player(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.push_rc_rm_set_player_room)
}

::google::protobuf::uint8* push_rc_rm_set_player_room::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.push_rc_rm_set_player_room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // required uint64 battle_guid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battle_guid(), target);
  }

  // required string code = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.push_rc_rm_set_player_room.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // required .protocol.game.msg_battle_player_info player = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_player(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.push_rc_rm_set_player_room)
  return target;
}

size_t push_rc_rm_set_player_room::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.push_rc_rm_set_player_room)
  size_t total_size = 0;

  if (has_code()) {
    // required string code = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  if (has_player()) {
    // required .protocol.game.msg_battle_player_info player = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);
  }

  if (has_guid()) {
    // required uint64 guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  if (has_battle_guid()) {
    // required uint64 battle_guid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battle_guid());
  }

  return total_size;
}
size_t push_rc_rm_set_player_room::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.push_rc_rm_set_player_room)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string code = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());

    // required .protocol.game.msg_battle_player_info player = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);

    // required uint64 guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());

    // required uint64 battle_guid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battle_guid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void push_rc_rm_set_player_room::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.push_rc_rm_set_player_room)
  GOOGLE_DCHECK_NE(&from, this);
  const push_rc_rm_set_player_room* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const push_rc_rm_set_player_room>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.push_rc_rm_set_player_room)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.push_rc_rm_set_player_room)
    MergeFrom(*source);
  }
}

void push_rc_rm_set_player_room::MergeFrom(const push_rc_rm_set_player_room& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.push_rc_rm_set_player_room)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_player()->::protocol::game::msg_battle_player_info::MergeFrom(from.player());
    }
    if (cached_has_bits & 0x00000004u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      battle_guid_ = from.battle_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void push_rc_rm_set_player_room::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.push_rc_rm_set_player_room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void push_rc_rm_set_player_room::CopyFrom(const push_rc_rm_set_player_room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.push_rc_rm_set_player_room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool push_rc_rm_set_player_room::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_player()) {
    if (!this->player_->IsInitialized()) return false;
  }
  return true;
}

void push_rc_rm_set_player_room::Swap(push_rc_rm_set_player_room* other) {
  if (other == this) return;
  InternalSwap(other);
}
void push_rc_rm_set_player_room::InternalSwap(push_rc_rm_set_player_room* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_, other->player_);
  swap(guid_, other->guid_);
  swap(battle_guid_, other->battle_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata push_rc_rm_set_player_room::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void push_rm_rc_battle_end::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int push_rm_rc_battle_end::kBattleGuidFieldNumber;
const int push_rm_rc_battle_end::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

push_rm_rc_battle_end::push_rm_rc_battle_end()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_push_rm_rc_battle_end.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.push_rm_rc_battle_end)
}
push_rm_rc_battle_end::push_rm_rc_battle_end(const push_rm_rc_battle_end& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  battle_guid_ = from.battle_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.push_rm_rc_battle_end)
}

void push_rm_rc_battle_end::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  battle_guid_ = GOOGLE_ULONGLONG(0);
}

push_rm_rc_battle_end::~push_rm_rc_battle_end() {
  // @@protoc_insertion_point(destructor:protocol.game.push_rm_rc_battle_end)
  SharedDtor();
}

void push_rm_rc_battle_end::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void push_rm_rc_battle_end::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* push_rm_rc_battle_end::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const push_rm_rc_battle_end& push_rm_rc_battle_end::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_push_rm_rc_battle_end.base);
  return *internal_default_instance();
}


void push_rm_rc_battle_end::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.push_rm_rc_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    result_.ClearNonDefaultToEmptyNoArena();
  }
  set_changed();
  battle_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool push_rm_rc_battle_end::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.push_rm_rc_battle_end)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 battle_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_battle_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battle_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.push_rm_rc_battle_end)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.push_rm_rc_battle_end)
  return false;
#undef DO_
}

void push_rm_rc_battle_end::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.push_rm_rc_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 battle_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->battle_guid(), output);
  }

  // required bytes result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.push_rm_rc_battle_end)
}

::google::protobuf::uint8* push_rm_rc_battle_end::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.push_rm_rc_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 battle_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->battle_guid(), target);
  }

  // required bytes result = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.push_rm_rc_battle_end)
  return target;
}

size_t push_rm_rc_battle_end::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.push_rm_rc_battle_end)
  size_t total_size = 0;

  if (has_result()) {
    // required bytes result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result());
  }

  if (has_battle_guid()) {
    // required uint64 battle_guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battle_guid());
  }

  return total_size;
}
size_t push_rm_rc_battle_end::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.push_rm_rc_battle_end)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result());

    // required uint64 battle_guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battle_guid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void push_rm_rc_battle_end::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.push_rm_rc_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  const push_rm_rc_battle_end* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const push_rm_rc_battle_end>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.push_rm_rc_battle_end)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.push_rm_rc_battle_end)
    MergeFrom(*source);
  }
}

void push_rm_rc_battle_end::MergeFrom(const push_rm_rc_battle_end& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.push_rm_rc_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      battle_guid_ = from.battle_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void push_rm_rc_battle_end::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.push_rm_rc_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void push_rm_rc_battle_end::CopyFrom(const push_rm_rc_battle_end& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.push_rm_rc_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool push_rm_rc_battle_end::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void push_rm_rc_battle_end::Swap(push_rm_rc_battle_end* other) {
  if (other == this) return;
  InternalSwap(other);
}
void push_rm_rc_battle_end::InternalSwap(push_rm_rc_battle_end* other) {
  using std::swap;
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(battle_guid_, other->battle_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata push_rm_rc_battle_end::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void push_r_rm_created::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int push_r_rm_created::kBattleGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

push_r_rm_created::push_r_rm_created()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_push_r_rm_created.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.push_r_rm_created)
}
push_r_rm_created::push_r_rm_created(const push_r_rm_created& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  battle_guid_ = from.battle_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.push_r_rm_created)
}

void push_r_rm_created::SharedCtor() {
  battle_guid_ = GOOGLE_ULONGLONG(0);
}

push_r_rm_created::~push_r_rm_created() {
  // @@protoc_insertion_point(destructor:protocol.game.push_r_rm_created)
  SharedDtor();
}

void push_r_rm_created::SharedDtor() {
}

void push_r_rm_created::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* push_r_rm_created::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const push_r_rm_created& push_r_rm_created::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_push_r_rm_created.base);
  return *internal_default_instance();
}


void push_r_rm_created::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.push_r_rm_created)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  battle_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool push_r_rm_created::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.push_r_rm_created)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 battle_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_battle_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battle_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.push_r_rm_created)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.push_r_rm_created)
  return false;
#undef DO_
}

void push_r_rm_created::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.push_r_rm_created)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 battle_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->battle_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.push_r_rm_created)
}

::google::protobuf::uint8* push_r_rm_created::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.push_r_rm_created)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 battle_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->battle_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.push_r_rm_created)
  return target;
}

size_t push_r_rm_created::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.push_r_rm_created)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 battle_guid = 1;
  if (has_battle_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battle_guid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void push_r_rm_created::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.push_r_rm_created)
  GOOGLE_DCHECK_NE(&from, this);
  const push_r_rm_created* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const push_r_rm_created>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.push_r_rm_created)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.push_r_rm_created)
    MergeFrom(*source);
  }
}

void push_r_rm_created::MergeFrom(const push_r_rm_created& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.push_r_rm_created)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_battle_guid()) {
    set_battle_guid(from.battle_guid());
  }
}

void push_r_rm_created::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.push_r_rm_created)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void push_r_rm_created::CopyFrom(const push_r_rm_created& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.push_r_rm_created)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool push_r_rm_created::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void push_r_rm_created::Swap(push_r_rm_created* other) {
  if (other == this) return;
  InternalSwap(other);
}
void push_r_rm_created::InternalSwap(push_r_rm_created* other) {
  using std::swap;
  swap(battle_guid_, other->battle_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata push_r_rm_created::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void push_rc_hall_battle_end::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int push_rc_hall_battle_end::kTypeFieldNumber;
const int push_rc_hall_battle_end::kGuidsFieldNumber;
const int push_rc_hall_battle_end::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

push_rc_hall_battle_end::push_rc_hall_battle_end()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_push_rc_hall_battle_end.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.push_rc_hall_battle_end)
}
push_rc_hall_battle_end::push_rc_hall_battle_end(const push_rc_hall_battle_end& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      guids_(from.guids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.push_rc_hall_battle_end)
}

void push_rc_hall_battle_end::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

push_rc_hall_battle_end::~push_rc_hall_battle_end() {
  // @@protoc_insertion_point(destructor:protocol.game.push_rc_hall_battle_end)
  SharedDtor();
}

void push_rc_hall_battle_end::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void push_rc_hall_battle_end::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* push_rc_hall_battle_end::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const push_rc_hall_battle_end& push_rc_hall_battle_end::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_push_rc_hall_battle_end.base);
  return *internal_default_instance();
}


void push_rc_hall_battle_end::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.push_rc_hall_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  guids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    result_.ClearNonDefaultToEmptyNoArena();
  }
  set_changed();
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool push_rc_hall_battle_end::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.push_rc_hall_battle_end)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 guids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.push_rc_hall_battle_end)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.push_rc_hall_battle_end)
  return false;
#undef DO_
}

void push_rc_hall_battle_end::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.push_rc_hall_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // repeated uint64 guids = 2;
  for (int i = 0, n = this->guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->guids(i), output);
  }

  // required bytes result = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.push_rc_hall_battle_end)
}

::google::protobuf::uint8* push_rc_hall_battle_end::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.push_rc_hall_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // repeated uint64 guids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->guids_, target);

  // required bytes result = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.push_rc_hall_battle_end)
  return target;
}

size_t push_rc_hall_battle_end::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.push_rc_hall_battle_end)
  size_t total_size = 0;

  if (has_result()) {
    // required bytes result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result());
  }

  if (has_type()) {
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t push_rc_hall_battle_end::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.push_rc_hall_battle_end)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result());

    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint64 guids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->guids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->guids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void push_rc_hall_battle_end::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.push_rc_hall_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  const push_rc_hall_battle_end* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const push_rc_hall_battle_end>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.push_rc_hall_battle_end)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.push_rc_hall_battle_end)
    MergeFrom(*source);
  }
}

void push_rc_hall_battle_end::MergeFrom(const push_rc_hall_battle_end& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.push_rc_hall_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guids_.MergeFrom(from.guids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void push_rc_hall_battle_end::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.push_rc_hall_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void push_rc_hall_battle_end::CopyFrom(const push_rc_hall_battle_end& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.push_rc_hall_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool push_rc_hall_battle_end::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void push_rc_hall_battle_end::Swap(push_rc_hall_battle_end* other) {
  if (other == this) return;
  InternalSwap(other);
}
void push_rc_hall_battle_end::InternalSwap(push_rc_hall_battle_end* other) {
  using std::swap;
  guids_.InternalSwap(&other->guids_);
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata push_rc_hall_battle_end::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_battle_end::InitAsDefaultInstance() {
  ::protocol::game::_smsg_battle_end_default_instance_._instance.get_mutable()->battle_his_ = const_cast< ::dhc::battle_his_t*>(
      ::dhc::battle_his_t::internal_default_instance());
}
void smsg_battle_end::clear_battle_his() {
  if (battle_his_ != NULL) battle_his_->Clear();
  clear_has_battle_his();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_battle_end::kBoxIdFieldNumber;
const int smsg_battle_end::kBattleHisFieldNumber;
const int smsg_battle_end::kGoldFieldNumber;
const int smsg_battle_end::kExpFieldNumber;
const int smsg_battle_end::kCupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_battle_end::smsg_battle_end()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_smsg_battle_end.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_battle_end)
}
smsg_battle_end::smsg_battle_end(const smsg_battle_end& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_battle_his()) {
    battle_his_ = new ::dhc::battle_his_t(*from.battle_his_);
  } else {
    battle_his_ = NULL;
  }
  ::memcpy(&box_id_, &from.box_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cup_) -
    reinterpret_cast<char*>(&box_id_)) + sizeof(cup_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_battle_end)
}

void smsg_battle_end::SharedCtor() {
  ::memset(&battle_his_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cup_) -
      reinterpret_cast<char*>(&battle_his_)) + sizeof(cup_));
}

smsg_battle_end::~smsg_battle_end() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_battle_end)
  SharedDtor();
}

void smsg_battle_end::SharedDtor() {
  if (this != internal_default_instance()) delete battle_his_;
}

void smsg_battle_end::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_battle_end::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_battle_end& smsg_battle_end::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_smsg_battle_end.base);
  return *internal_default_instance();
}


void smsg_battle_end::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(battle_his_ != NULL);
    battle_his_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&box_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cup_) -
        reinterpret_cast<char*>(&box_id_)) + sizeof(cup_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_battle_end::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_battle_end)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 box_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_box_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &box_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .dhc.battle_his_t battle_his = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_battle_his()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 gold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 exp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cup = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_cup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_battle_end)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_battle_end)
  return false;
#undef DO_
}

void smsg_battle_end::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 box_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->box_id(), output);
  }

  // optional .dhc.battle_his_t battle_his = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_battle_his(), output);
  }

  // required int32 gold = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gold(), output);
  }

  // required int32 exp = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exp(), output);
  }

  // required int32 cup = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_battle_end)
}

::google::protobuf::uint8* smsg_battle_end::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 box_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->box_id(), target);
  }

  // optional .dhc.battle_his_t battle_his = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_battle_his(), deterministic, target);
  }

  // required int32 gold = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gold(), target);
  }

  // required int32 exp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exp(), target);
  }

  // required int32 cup = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_battle_end)
  return target;
}

size_t smsg_battle_end::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.smsg_battle_end)
  size_t total_size = 0;

  if (has_box_id()) {
    // required int32 box_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->box_id());
  }

  if (has_gold()) {
    // required int32 gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  if (has_exp()) {
    // required int32 exp = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  if (has_cup()) {
    // required int32 cup = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cup());
  }

  return total_size;
}
size_t smsg_battle_end::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_battle_end)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required int32 box_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->box_id());

    // required int32 gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());

    // required int32 exp = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());

    // required int32 cup = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cup());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .dhc.battle_his_t battle_his = 2;
  if (has_battle_his()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *battle_his_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_battle_end::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_battle_end* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_battle_end>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_battle_end)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_battle_end)
    MergeFrom(*source);
  }
}

void smsg_battle_end::MergeFrom(const smsg_battle_end& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_battle_his()->::dhc::battle_his_t::MergeFrom(from.battle_his());
    }
    if (cached_has_bits & 0x00000002u) {
      box_id_ = from.box_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00000008u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00000010u) {
      cup_ = from.cup_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_battle_end::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_battle_end::CopyFrom(const smsg_battle_end& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_battle_end::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  return true;
}

void smsg_battle_end::Swap(smsg_battle_end* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_battle_end::InternalSwap(smsg_battle_end* other) {
  using std::swap;
  swap(battle_his_, other->battle_his_);
  swap(box_id_, other->box_id_);
  swap(gold_, other->gold_);
  swap(exp_, other->exp_);
  swap(cup_, other->cup_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_battle_end::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_offline_battle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_offline_battle::kFightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_offline_battle::cmsg_offline_battle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_cmsg_offline_battle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_offline_battle)
}
cmsg_offline_battle::cmsg_offline_battle(const cmsg_offline_battle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fight_ = from.fight_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_offline_battle)
}

void cmsg_offline_battle::SharedCtor() {
  fight_ = 0;
}

cmsg_offline_battle::~cmsg_offline_battle() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_offline_battle)
  SharedDtor();
}

void cmsg_offline_battle::SharedDtor() {
}

void cmsg_offline_battle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_offline_battle::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_offline_battle& cmsg_offline_battle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_cmsg_offline_battle.base);
  return *internal_default_instance();
}


void cmsg_offline_battle::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_offline_battle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  fight_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_offline_battle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_offline_battle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_fight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_offline_battle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_offline_battle)
  return false;
#undef DO_
}

void cmsg_offline_battle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_offline_battle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fight = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_offline_battle)
}

::google::protobuf::uint8* cmsg_offline_battle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_offline_battle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fight = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_offline_battle)
  return target;
}

size_t cmsg_offline_battle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_offline_battle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 fight = 1;
  if (has_fight()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fight());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_offline_battle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_offline_battle)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_offline_battle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_offline_battle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_offline_battle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_offline_battle)
    MergeFrom(*source);
  }
}

void cmsg_offline_battle::MergeFrom(const cmsg_offline_battle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_offline_battle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fight()) {
    set_fight(from.fight());
  }
}

void cmsg_offline_battle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_offline_battle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_offline_battle::CopyFrom(const cmsg_offline_battle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_offline_battle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_offline_battle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_offline_battle::Swap(cmsg_offline_battle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_offline_battle::InternalSwap(cmsg_offline_battle* other) {
  using std::swap;
  swap(fight_, other->fight_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_offline_battle::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_offline_battle_end::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_offline_battle_end::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_offline_battle_end::cmsg_offline_battle_end()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_cmsg_offline_battle_end.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_offline_battle_end)
}
cmsg_offline_battle_end::cmsg_offline_battle_end(const cmsg_offline_battle_end& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_ = from.rank_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_offline_battle_end)
}

void cmsg_offline_battle_end::SharedCtor() {
  rank_ = 0;
}

cmsg_offline_battle_end::~cmsg_offline_battle_end() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_offline_battle_end)
  SharedDtor();
}

void cmsg_offline_battle_end::SharedDtor() {
}

void cmsg_offline_battle_end::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_offline_battle_end::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_offline_battle_end& cmsg_offline_battle_end::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_cmsg_offline_battle_end.base);
  return *internal_default_instance();
}


void cmsg_offline_battle_end::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_offline_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  rank_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_offline_battle_end::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_offline_battle_end)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 rank = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_offline_battle_end)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_offline_battle_end)
  return false;
#undef DO_
}

void cmsg_offline_battle_end::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_offline_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 rank = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_offline_battle_end)
}

::google::protobuf::uint8* cmsg_offline_battle_end::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_offline_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 rank = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_offline_battle_end)
  return target;
}

size_t cmsg_offline_battle_end::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_offline_battle_end)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 rank = 1;
  if (has_rank()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_offline_battle_end::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_offline_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_offline_battle_end* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_offline_battle_end>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_offline_battle_end)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_offline_battle_end)
    MergeFrom(*source);
  }
}

void cmsg_offline_battle_end::MergeFrom(const cmsg_offline_battle_end& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_offline_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rank()) {
    set_rank(from.rank());
  }
}

void cmsg_offline_battle_end::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_offline_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_offline_battle_end::CopyFrom(const cmsg_offline_battle_end& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_offline_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_offline_battle_end::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_offline_battle_end::Swap(cmsg_offline_battle_end* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_offline_battle_end::InternalSwap(cmsg_offline_battle_end* other) {
  using std::swap;
  swap(rank_, other->rank_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_offline_battle_end::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_offline_battle_end::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_offline_battle_end::kBoxIdFieldNumber;
const int smsg_offline_battle_end::kGoldFieldNumber;
const int smsg_offline_battle_end::kExpFieldNumber;
const int smsg_offline_battle_end::kCupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_offline_battle_end::smsg_offline_battle_end()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fbattle_2eproto::scc_info_smsg_offline_battle_end.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_offline_battle_end)
}
smsg_offline_battle_end::smsg_offline_battle_end(const smsg_offline_battle_end& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&box_id_, &from.box_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cup_) -
    reinterpret_cast<char*>(&box_id_)) + sizeof(cup_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_offline_battle_end)
}

void smsg_offline_battle_end::SharedCtor() {
  ::memset(&box_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cup_) -
      reinterpret_cast<char*>(&box_id_)) + sizeof(cup_));
}

smsg_offline_battle_end::~smsg_offline_battle_end() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_offline_battle_end)
  SharedDtor();
}

void smsg_offline_battle_end::SharedDtor() {
}

void smsg_offline_battle_end::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_offline_battle_end::descriptor() {
  ::protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_offline_battle_end& smsg_offline_battle_end::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fbattle_2eproto::scc_info_smsg_offline_battle_end.base);
  return *internal_default_instance();
}


void smsg_offline_battle_end::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_offline_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&box_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cup_) -
        reinterpret_cast<char*>(&box_id_)) + sizeof(cup_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_offline_battle_end::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_offline_battle_end)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 box_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_box_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &box_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 gold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 exp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cup = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_cup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_offline_battle_end)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_offline_battle_end)
  return false;
#undef DO_
}

void smsg_offline_battle_end::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_offline_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 box_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->box_id(), output);
  }

  // required int32 gold = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }

  // required int32 exp = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp(), output);
  }

  // required int32 cup = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_offline_battle_end)
}

::google::protobuf::uint8* smsg_offline_battle_end::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_offline_battle_end)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 box_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->box_id(), target);
  }

  // required int32 gold = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }

  // required int32 exp = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp(), target);
  }

  // required int32 cup = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_offline_battle_end)
  return target;
}

size_t smsg_offline_battle_end::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.smsg_offline_battle_end)
  size_t total_size = 0;

  if (has_box_id()) {
    // required int32 box_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->box_id());
  }

  if (has_gold()) {
    // required int32 gold = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  if (has_exp()) {
    // required int32 exp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  if (has_cup()) {
    // required int32 cup = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cup());
  }

  return total_size;
}
size_t smsg_offline_battle_end::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_offline_battle_end)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 box_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->box_id());

    // required int32 gold = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());

    // required int32 exp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());

    // required int32 cup = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cup());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_offline_battle_end::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_offline_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_offline_battle_end* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_offline_battle_end>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_offline_battle_end)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_offline_battle_end)
    MergeFrom(*source);
  }
}

void smsg_offline_battle_end::MergeFrom(const smsg_offline_battle_end& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_offline_battle_end)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      box_id_ = from.box_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00000004u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00000008u) {
      cup_ = from.cup_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_offline_battle_end::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_offline_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_offline_battle_end::CopyFrom(const smsg_offline_battle_end& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_offline_battle_end)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_offline_battle_end::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void smsg_offline_battle_end::Swap(smsg_offline_battle_end* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_offline_battle_end::InternalSwap(smsg_offline_battle_end* other) {
  using std::swap;
  swap(box_id_, other->box_id_);
  swap(gold_, other->gold_);
  swap(exp_, other->exp_);
  swap(cup_, other->cup_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_offline_battle_end::GetMetadata() const {
  protobuf_msg_5fbattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fbattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace game
}  // namespace protocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::msg_battle_player_info* Arena::CreateMaybeMessage< ::protocol::game::msg_battle_player_info >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::msg_battle_player_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::req_rc_rm_create_room* Arena::CreateMaybeMessage< ::protocol::game::req_rc_rm_create_room >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::req_rc_rm_create_room >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::rep_rc_rm_create_room* Arena::CreateMaybeMessage< ::protocol::game::rep_rc_rm_create_room >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::rep_rc_rm_create_room >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::push_rc_rm_set_player_room* Arena::CreateMaybeMessage< ::protocol::game::push_rc_rm_set_player_room >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::push_rc_rm_set_player_room >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::push_rm_rc_battle_end* Arena::CreateMaybeMessage< ::protocol::game::push_rm_rc_battle_end >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::push_rm_rc_battle_end >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::push_r_rm_created* Arena::CreateMaybeMessage< ::protocol::game::push_r_rm_created >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::push_r_rm_created >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::push_rc_hall_battle_end* Arena::CreateMaybeMessage< ::protocol::game::push_rc_hall_battle_end >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::push_rc_hall_battle_end >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_battle_end* Arena::CreateMaybeMessage< ::protocol::game::smsg_battle_end >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_battle_end >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_offline_battle* Arena::CreateMaybeMessage< ::protocol::game::cmsg_offline_battle >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_offline_battle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_offline_battle_end* Arena::CreateMaybeMessage< ::protocol::game::cmsg_offline_battle_end >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_offline_battle_end >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_offline_battle_end* Arena::CreateMaybeMessage< ::protocol::game::smsg_offline_battle_end >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_offline_battle_end >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
