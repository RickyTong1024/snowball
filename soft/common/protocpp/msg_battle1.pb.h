// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_battle1.proto

#ifndef PROTOBUF_INCLUDED_msg_5fbattle1_2eproto
#define PROTOBUF_INCLUDED_msg_5fbattle1_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fbattle1_2eproto 

namespace protobuf_msg_5fbattle1_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5fbattle1_2eproto
namespace protocol {
namespace game {
class cmsg_battle_link;
class cmsg_battle_linkDefaultTypeInternal;
extern cmsg_battle_linkDefaultTypeInternal _cmsg_battle_link_default_instance_;
class cmsg_battle_state;
class cmsg_battle_stateDefaultTypeInternal;
extern cmsg_battle_stateDefaultTypeInternal _cmsg_battle_state_default_instance_;
class msg_battle_boss;
class msg_battle_bossDefaultTypeInternal;
extern msg_battle_bossDefaultTypeInternal _msg_battle_boss_default_instance_;
class msg_battle_code;
class msg_battle_codeDefaultTypeInternal;
extern msg_battle_codeDefaultTypeInternal _msg_battle_code_default_instance_;
class msg_battle_effect;
class msg_battle_effectDefaultTypeInternal;
extern msg_battle_effectDefaultTypeInternal _msg_battle_effect_default_instance_;
class msg_battle_item;
class msg_battle_itemDefaultTypeInternal;
extern msg_battle_itemDefaultTypeInternal _msg_battle_item_default_instance_;
class msg_battle_item_base;
class msg_battle_item_baseDefaultTypeInternal;
extern msg_battle_item_baseDefaultTypeInternal _msg_battle_item_base_default_instance_;
class msg_battle_monster;
class msg_battle_monsterDefaultTypeInternal;
extern msg_battle_monsterDefaultTypeInternal _msg_battle_monster_default_instance_;
class msg_battle_op;
class msg_battle_opDefaultTypeInternal;
extern msg_battle_opDefaultTypeInternal _msg_battle_op_default_instance_;
class msg_battle_player;
class msg_battle_playerDefaultTypeInternal;
extern msg_battle_playerDefaultTypeInternal _msg_battle_player_default_instance_;
class msg_battle_state;
class msg_battle_stateDefaultTypeInternal;
extern msg_battle_stateDefaultTypeInternal _msg_battle_state_default_instance_;
class msg_battle_unit;
class msg_battle_unitDefaultTypeInternal;
extern msg_battle_unitDefaultTypeInternal _msg_battle_unit_default_instance_;
class smsg_battle_link;
class smsg_battle_linkDefaultTypeInternal;
extern smsg_battle_linkDefaultTypeInternal _smsg_battle_link_default_instance_;
}  // namespace game
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::game::cmsg_battle_link* Arena::CreateMaybeMessage<::protocol::game::cmsg_battle_link>(Arena*);
template<> ::protocol::game::cmsg_battle_state* Arena::CreateMaybeMessage<::protocol::game::cmsg_battle_state>(Arena*);
template<> ::protocol::game::msg_battle_boss* Arena::CreateMaybeMessage<::protocol::game::msg_battle_boss>(Arena*);
template<> ::protocol::game::msg_battle_code* Arena::CreateMaybeMessage<::protocol::game::msg_battle_code>(Arena*);
template<> ::protocol::game::msg_battle_effect* Arena::CreateMaybeMessage<::protocol::game::msg_battle_effect>(Arena*);
template<> ::protocol::game::msg_battle_item* Arena::CreateMaybeMessage<::protocol::game::msg_battle_item>(Arena*);
template<> ::protocol::game::msg_battle_item_base* Arena::CreateMaybeMessage<::protocol::game::msg_battle_item_base>(Arena*);
template<> ::protocol::game::msg_battle_monster* Arena::CreateMaybeMessage<::protocol::game::msg_battle_monster>(Arena*);
template<> ::protocol::game::msg_battle_op* Arena::CreateMaybeMessage<::protocol::game::msg_battle_op>(Arena*);
template<> ::protocol::game::msg_battle_player* Arena::CreateMaybeMessage<::protocol::game::msg_battle_player>(Arena*);
template<> ::protocol::game::msg_battle_state* Arena::CreateMaybeMessage<::protocol::game::msg_battle_state>(Arena*);
template<> ::protocol::game::msg_battle_unit* Arena::CreateMaybeMessage<::protocol::game::msg_battle_unit>(Arena*);
template<> ::protocol::game::smsg_battle_link* Arena::CreateMaybeMessage<::protocol::game::smsg_battle_link>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {
namespace game {

// ===================================================================

class msg_battle_unit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_unit) */ {
 public:
  msg_battle_unit();
  virtual ~msg_battle_unit();

  msg_battle_unit(const msg_battle_unit& from);

  inline msg_battle_unit& operator=(const msg_battle_unit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_unit(msg_battle_unit&& from) noexcept
    : msg_battle_unit() {
    *this = ::std::move(from);
  }

  inline msg_battle_unit& operator=(msg_battle_unit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_unit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_unit* internal_default_instance() {
    return reinterpret_cast<const msg_battle_unit*>(
               &_msg_battle_unit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(msg_battle_unit* other);
  friend void swap(msg_battle_unit& a, msg_battle_unit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_unit* New() const final {
    return CreateMaybeMessage<msg_battle_unit>(NULL);
  }

  msg_battle_unit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_unit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_unit& from);
  void MergeFrom(const msg_battle_unit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_unit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 save_re_id = 23;
  int save_re_id_size() const;
  void clear_save_re_id();
  static const int kSaveReIdFieldNumber = 23;
  ::google::protobuf::int32 save_re_id(int index) const;
  void set_save_re_id(int index, ::google::protobuf::int32 value);
  void add_save_re_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      save_re_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_save_re_id();

  // repeated int32 save_re_zhen = 24;
  int save_re_zhen_size() const;
  void clear_save_re_zhen();
  static const int kSaveReZhenFieldNumber = 24;
  ::google::protobuf::int32 save_re_zhen(int index) const;
  void set_save_re_zhen(int index, ::google::protobuf::int32 value);
  void add_save_re_zhen(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      save_re_zhen() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_save_re_zhen();

  // repeated int32 bhit_tids = 32;
  int bhit_tids_size() const;
  void clear_bhit_tids();
  static const int kBhitTidsFieldNumber = 32;
  ::google::protobuf::int32 bhit_tids(int index) const;
  void set_bhit_tids(int index, ::google::protobuf::int32 value);
  void add_bhit_tids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bhit_tids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bhit_tids();

  // repeated int32 buffs = 37;
  int buffs_size() const;
  void clear_buffs();
  static const int kBuffsFieldNumber = 37;
  ::google::protobuf::int32 buffs(int index) const;
  void set_buffs(int index, ::google::protobuf::int32 value);
  void add_buffs(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      buffs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_buffs();

  // repeated int32 buffs_time = 38;
  int buffs_time_size() const;
  void clear_buffs_time();
  static const int kBuffsTimeFieldNumber = 38;
  ::google::protobuf::int32 buffs_time(int index) const;
  void set_buffs_time(int index, ::google::protobuf::int32 value);
  void add_buffs_time(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      buffs_time() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_buffs_time();

  // required uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // optional int32 role_id = 2;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::int32 role_id() const;
  void set_role_id(::google::protobuf::int32 value);

  // optional int32 x = 10;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 10;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 11;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 11;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // optional int32 r = 12;
  bool has_r() const;
  void clear_r();
  static const int kRFieldNumber = 12;
  ::google::protobuf::int32 r() const;
  void set_r(::google::protobuf::int32 value);

  // optional int32 r_py = 13;
  bool has_r_py() const;
  void clear_r_py();
  static const int kRPyFieldNumber = 13;
  ::google::protobuf::int32 r_py() const;
  void set_r_py(::google::protobuf::int32 value);

  // optional int32 re_tid = 15;
  bool has_re_tid() const;
  void clear_re_tid();
  static const int kReTidFieldNumber = 15;
  ::google::protobuf::int32 re_tid() const;
  void set_re_tid(::google::protobuf::int32 value);

  // optional int32 re_state = 16;
  bool has_re_state() const;
  void clear_re_state();
  static const int kReStateFieldNumber = 16;
  ::google::protobuf::int32 re_state() const;
  void set_re_state(::google::protobuf::int32 value);

  // optional int32 re_id = 17;
  bool has_re_id() const;
  void clear_re_id();
  static const int kReIdFieldNumber = 17;
  ::google::protobuf::int32 re_id() const;
  void set_re_id(::google::protobuf::int32 value);

  // optional int32 re_level = 18;
  bool has_re_level() const;
  void clear_re_level();
  static const int kReLevelFieldNumber = 18;
  ::google::protobuf::int32 re_level() const;
  void set_re_level(::google::protobuf::int32 value);

  // optional int32 re_time = 19;
  bool has_re_time() const;
  void clear_re_time();
  static const int kReTimeFieldNumber = 19;
  ::google::protobuf::int32 re_time() const;
  void set_re_time(::google::protobuf::int32 value);

  // optional bool is_move = 14;
  bool has_is_move() const;
  void clear_is_move();
  static const int kIsMoveFieldNumber = 14;
  bool is_move() const;
  void set_is_move(bool value);

  // optional bool is_jf = 25;
  bool has_is_jf() const;
  void clear_is_jf();
  static const int kIsJfFieldNumber = 25;
  bool is_jf() const;
  void set_is_jf(bool value);

  // optional int32 re_x = 20;
  bool has_re_x() const;
  void clear_re_x();
  static const int kReXFieldNumber = 20;
  ::google::protobuf::int32 re_x() const;
  void set_re_x(::google::protobuf::int32 value);

  // optional int32 re_y = 21;
  bool has_re_y() const;
  void clear_re_y();
  static const int kReYFieldNumber = 21;
  ::google::protobuf::int32 re_y() const;
  void set_re_y(::google::protobuf::int32 value);

  // optional int32 re_r = 22;
  bool has_re_r() const;
  void clear_re_r();
  static const int kReRFieldNumber = 22;
  ::google::protobuf::int32 re_r() const;
  void set_re_r(::google::protobuf::int32 value);

  // optional int32 jf_sx = 26;
  bool has_jf_sx() const;
  void clear_jf_sx();
  static const int kJfSxFieldNumber = 26;
  ::google::protobuf::int32 jf_sx() const;
  void set_jf_sx(::google::protobuf::int32 value);

  // optional int32 jf_sy = 27;
  bool has_jf_sy() const;
  void clear_jf_sy();
  static const int kJfSyFieldNumber = 27;
  ::google::protobuf::int32 jf_sy() const;
  void set_jf_sy(::google::protobuf::int32 value);

  // optional int32 jf_xx = 28;
  bool has_jf_xx() const;
  void clear_jf_xx();
  static const int kJfXxFieldNumber = 28;
  ::google::protobuf::int32 jf_xx() const;
  void set_jf_xx(::google::protobuf::int32 value);

  // optional int32 jf_yy = 29;
  bool has_jf_yy() const;
  void clear_jf_yy();
  static const int kJfYyFieldNumber = 29;
  ::google::protobuf::int32 jf_yy() const;
  void set_jf_yy(::google::protobuf::int32 value);

  // optional int32 jf_speed = 30;
  bool has_jf_speed() const;
  void clear_jf_speed();
  static const int kJfSpeedFieldNumber = 30;
  ::google::protobuf::int32 jf_speed() const;
  void set_jf_speed(::google::protobuf::int32 value);

  // optional int32 jf_r = 31;
  bool has_jf_r() const;
  void clear_jf_r();
  static const int kJfRFieldNumber = 31;
  ::google::protobuf::int32 jf_r() const;
  void set_jf_r(::google::protobuf::int32 value);

  // optional int32 death_time = 33;
  bool has_death_time() const;
  void clear_death_time();
  static const int kDeathTimeFieldNumber = 33;
  ::google::protobuf::int32 death_time() const;
  void set_death_time(::google::protobuf::int32 value);

  // optional int32 rtime = 34;
  bool has_rtime() const;
  void clear_rtime();
  static const int kRtimeFieldNumber = 34;
  ::google::protobuf::int32 rtime() const;
  void set_rtime(::google::protobuf::int32 value);

  // optional int32 attackr = 35;
  bool has_attackr() const;
  void clear_attackr();
  static const int kAttackrFieldNumber = 35;
  ::google::protobuf::int32 attackr() const;
  void set_attackr(::google::protobuf::int32 value);

  // optional int32 hp = 36;
  bool has_hp() const;
  void clear_hp();
  static const int kHpFieldNumber = 36;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // optional int32 is_ai = 200;
  bool has_is_ai() const;
  void clear_is_ai();
  static const int kIsAiFieldNumber = 200;
  ::google::protobuf::int32 is_ai() const;
  void set_is_ai(::google::protobuf::int32 value);

  // optional int32 eyeRange = 201;
  bool has_eyerange() const;
  void clear_eyerange();
  static const int kEyeRangeFieldNumber = 201;
  ::google::protobuf::int32 eyerange() const;
  void set_eyerange(::google::protobuf::int32 value);

  // optional int32 ai_state = 202;
  bool has_ai_state() const;
  void clear_ai_state();
  static const int kAiStateFieldNumber = 202;
  ::google::protobuf::int32 ai_state() const;
  void set_ai_state(::google::protobuf::int32 value);

  // optional int32 nextPoint_x = 203;
  bool has_nextpoint_x() const;
  void clear_nextpoint_x();
  static const int kNextPointXFieldNumber = 203;
  ::google::protobuf::int32 nextpoint_x() const;
  void set_nextpoint_x(::google::protobuf::int32 value);

  // optional int32 nextPoint_y = 204;
  bool has_nextpoint_y() const;
  void clear_nextpoint_y();
  static const int kNextPointYFieldNumber = 204;
  ::google::protobuf::int32 nextpoint_y() const;
  void set_nextpoint_y(::google::protobuf::int32 value);

  // optional int32 totalZhen = 205;
  bool has_totalzhen() const;
  void clear_totalzhen();
  static const int kTotalZhenFieldNumber = 205;
  ::google::protobuf::int32 totalzhen() const;
  void set_totalzhen(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_unit)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_role_id();
  void clear_has_role_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_r();
  void clear_has_r();
  void set_has_r_py();
  void clear_has_r_py();
  void set_has_is_move();
  void clear_has_is_move();
  void set_has_re_tid();
  void clear_has_re_tid();
  void set_has_re_state();
  void clear_has_re_state();
  void set_has_re_id();
  void clear_has_re_id();
  void set_has_re_level();
  void clear_has_re_level();
  void set_has_re_time();
  void clear_has_re_time();
  void set_has_re_x();
  void clear_has_re_x();
  void set_has_re_y();
  void clear_has_re_y();
  void set_has_re_r();
  void clear_has_re_r();
  void set_has_is_jf();
  void clear_has_is_jf();
  void set_has_jf_sx();
  void clear_has_jf_sx();
  void set_has_jf_sy();
  void clear_has_jf_sy();
  void set_has_jf_xx();
  void clear_has_jf_xx();
  void set_has_jf_yy();
  void clear_has_jf_yy();
  void set_has_jf_speed();
  void clear_has_jf_speed();
  void set_has_jf_r();
  void clear_has_jf_r();
  void set_has_death_time();
  void clear_has_death_time();
  void set_has_rtime();
  void clear_has_rtime();
  void set_has_attackr();
  void clear_has_attackr();
  void set_has_hp();
  void clear_has_hp();
  void set_has_is_ai();
  void clear_has_is_ai();
  void set_has_eyerange();
  void clear_has_eyerange();
  void set_has_ai_state();
  void clear_has_ai_state();
  void set_has_nextpoint_x();
  void clear_has_nextpoint_x();
  void set_has_nextpoint_y();
  void clear_has_nextpoint_y();
  void set_has_totalzhen();
  void clear_has_totalzhen();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > save_re_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > save_re_zhen_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bhit_tids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > buffs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > buffs_time_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 r_;
  ::google::protobuf::int32 r_py_;
  ::google::protobuf::int32 re_tid_;
  ::google::protobuf::int32 re_state_;
  ::google::protobuf::int32 re_id_;
  ::google::protobuf::int32 re_level_;
  ::google::protobuf::int32 re_time_;
  bool is_move_;
  bool is_jf_;
  ::google::protobuf::int32 re_x_;
  ::google::protobuf::int32 re_y_;
  ::google::protobuf::int32 re_r_;
  ::google::protobuf::int32 jf_sx_;
  ::google::protobuf::int32 jf_sy_;
  ::google::protobuf::int32 jf_xx_;
  ::google::protobuf::int32 jf_yy_;
  ::google::protobuf::int32 jf_speed_;
  ::google::protobuf::int32 jf_r_;
  ::google::protobuf::int32 death_time_;
  ::google::protobuf::int32 rtime_;
  ::google::protobuf::int32 attackr_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 is_ai_;
  ::google::protobuf::int32 eyerange_;
  ::google::protobuf::int32 ai_state_;
  ::google::protobuf::int32 nextpoint_x_;
  ::google::protobuf::int32 nextpoint_y_;
  ::google::protobuf::int32 totalzhen_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_battle_boss : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_boss) */ {
 public:
  msg_battle_boss();
  virtual ~msg_battle_boss();

  msg_battle_boss(const msg_battle_boss& from);

  inline msg_battle_boss& operator=(const msg_battle_boss& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_boss(msg_battle_boss&& from) noexcept
    : msg_battle_boss() {
    *this = ::std::move(from);
  }

  inline msg_battle_boss& operator=(msg_battle_boss&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_boss& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_boss* internal_default_instance() {
    return reinterpret_cast<const msg_battle_boss*>(
               &_msg_battle_boss_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(msg_battle_boss* other);
  friend void swap(msg_battle_boss& a, msg_battle_boss& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_boss* New() const final {
    return CreateMaybeMessage<msg_battle_boss>(NULL);
  }

  msg_battle_boss* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_boss>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_boss& from);
  void MergeFrom(const msg_battle_boss& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_boss* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protocol.game.msg_battle_unit unit = 1;
  bool has_unit() const;
  void clear_unit();
  static const int kUnitFieldNumber = 1;
  private:
  const ::protocol::game::msg_battle_unit& _internal_unit() const;
  public:
  const ::protocol::game::msg_battle_unit& unit() const;
  ::protocol::game::msg_battle_unit* release_unit();
  ::protocol::game::msg_battle_unit* mutable_unit();
  void set_allocated_unit(::protocol::game::msg_battle_unit* unit);

  // optional int32 attack_state = 2;
  bool has_attack_state() const;
  void clear_attack_state();
  static const int kAttackStateFieldNumber = 2;
  ::google::protobuf::int32 attack_state() const;
  void set_attack_state(::google::protobuf::int32 value);

  // optional int32 attackZhen = 3;
  bool has_attackzhen() const;
  void clear_attackzhen();
  static const int kAttackZhenFieldNumber = 3;
  ::google::protobuf::int32 attackzhen() const;
  void set_attackzhen(::google::protobuf::int32 value);

  // optional int32 boss_birth_time = 4;
  bool has_boss_birth_time() const;
  void clear_boss_birth_time();
  static const int kBossBirthTimeFieldNumber = 4;
  ::google::protobuf::int32 boss_birth_time() const;
  void set_boss_birth_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_boss)
 private:
  void set_has_unit();
  void clear_has_unit();
  void set_has_attack_state();
  void clear_has_attack_state();
  void set_has_attackzhen();
  void clear_has_attackzhen();
  void set_has_boss_birth_time();
  void clear_has_boss_birth_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::protocol::game::msg_battle_unit* unit_;
  ::google::protobuf::int32 attack_state_;
  ::google::protobuf::int32 attackzhen_;
  ::google::protobuf::int32 boss_birth_time_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_battle_monster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_monster) */ {
 public:
  msg_battle_monster();
  virtual ~msg_battle_monster();

  msg_battle_monster(const msg_battle_monster& from);

  inline msg_battle_monster& operator=(const msg_battle_monster& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_monster(msg_battle_monster&& from) noexcept
    : msg_battle_monster() {
    *this = ::std::move(from);
  }

  inline msg_battle_monster& operator=(msg_battle_monster&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_monster& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_monster* internal_default_instance() {
    return reinterpret_cast<const msg_battle_monster*>(
               &_msg_battle_monster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(msg_battle_monster* other);
  friend void swap(msg_battle_monster& a, msg_battle_monster& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_monster* New() const final {
    return CreateMaybeMessage<msg_battle_monster>(NULL);
  }

  msg_battle_monster* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_monster>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_monster& from);
  void MergeFrom(const msg_battle_monster& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_monster* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string attack_guid = 4;
  bool has_attack_guid() const;
  void clear_attack_guid();
  static const int kAttackGuidFieldNumber = 4;
  const ::std::string& attack_guid() const;
  void set_attack_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_attack_guid(::std::string&& value);
  #endif
  void set_attack_guid(const char* value);
  void set_attack_guid(const char* value, size_t size);
  ::std::string* mutable_attack_guid();
  ::std::string* release_attack_guid();
  void set_allocated_attack_guid(::std::string* attack_guid);

  // required .protocol.game.msg_battle_unit unit = 1;
  bool has_unit() const;
  void clear_unit();
  static const int kUnitFieldNumber = 1;
  private:
  const ::protocol::game::msg_battle_unit& _internal_unit() const;
  public:
  const ::protocol::game::msg_battle_unit& unit() const;
  ::protocol::game::msg_battle_unit* release_unit();
  ::protocol::game::msg_battle_unit* mutable_unit();
  void set_allocated_unit(::protocol::game::msg_battle_unit* unit);

  // optional int32 birth_x = 2;
  bool has_birth_x() const;
  void clear_birth_x();
  static const int kBirthXFieldNumber = 2;
  ::google::protobuf::int32 birth_x() const;
  void set_birth_x(::google::protobuf::int32 value);

  // optional int32 birth_y = 3;
  bool has_birth_y() const;
  void clear_birth_y();
  static const int kBirthYFieldNumber = 3;
  ::google::protobuf::int32 birth_y() const;
  void set_birth_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_monster)
 private:
  void set_has_unit();
  void clear_has_unit();
  void set_has_birth_x();
  void clear_has_birth_x();
  void set_has_birth_y();
  void clear_has_birth_y();
  void set_has_attack_guid();
  void clear_has_attack_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attack_guid_;
  ::protocol::game::msg_battle_unit* unit_;
  ::google::protobuf::int32 birth_x_;
  ::google::protobuf::int32 birth_y_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_battle_player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_player) */ {
 public:
  msg_battle_player();
  virtual ~msg_battle_player();

  msg_battle_player(const msg_battle_player& from);

  inline msg_battle_player& operator=(const msg_battle_player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_player(msg_battle_player&& from) noexcept
    : msg_battle_player() {
    *this = ::std::move(from);
  }

  inline msg_battle_player& operator=(msg_battle_player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_player* internal_default_instance() {
    return reinterpret_cast<const msg_battle_player*>(
               &_msg_battle_player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(msg_battle_player* other);
  friend void swap(msg_battle_player& a, msg_battle_player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_player* New() const final {
    return CreateMaybeMessage<msg_battle_player>(NULL);
  }

  msg_battle_player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_player& from);
  void MergeFrom(const msg_battle_player& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 attr_type = 6;
  int attr_type_size() const;
  void clear_attr_type();
  static const int kAttrTypeFieldNumber = 6;
  ::google::protobuf::int32 attr_type(int index) const;
  void set_attr_type(int index, ::google::protobuf::int32 value);
  void add_attr_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attr_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attr_type();

  // repeated int32 attr_param1 = 7;
  int attr_param1_size() const;
  void clear_attr_param1();
  static const int kAttrParam1FieldNumber = 7;
  ::google::protobuf::int32 attr_param1(int index) const;
  void set_attr_param1(int index, ::google::protobuf::int32 value);
  void add_attr_param1(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attr_param1() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attr_param1();

  // repeated int32 attr_param2 = 8;
  int attr_param2_size() const;
  void clear_attr_param2();
  static const int kAttrParam2FieldNumber = 8;
  ::google::protobuf::int32 attr_param2(int index) const;
  void set_attr_param2(int index, ::google::protobuf::int32 value);
  void add_attr_param2(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attr_param2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attr_param2();

  // repeated int32 attr_param3 = 9;
  int attr_param3_size() const;
  void clear_attr_param3();
  static const int kAttrParam3FieldNumber = 9;
  ::google::protobuf::int32 attr_param3(int index) const;
  void set_attr_param3(int index, ::google::protobuf::int32 value);
  void add_attr_param3(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attr_param3() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attr_param3();

  // repeated int32 fashion = 14;
  int fashion_size() const;
  void clear_fashion();
  static const int kFashionFieldNumber = 14;
  ::google::protobuf::int32 fashion(int index) const;
  void set_fashion(int index, ::google::protobuf::int32 value);
  void add_fashion(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fashion() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fashion();

  // repeated int32 lattr_value = 34;
  int lattr_value_size() const;
  void clear_lattr_value();
  static const int kLattrValueFieldNumber = 34;
  ::google::protobuf::int32 lattr_value(int index) const;
  void set_lattr_value(int index, ::google::protobuf::int32 value);
  void add_lattr_value(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lattr_value() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lattr_value();

  // repeated int32 talent_id = 35;
  int talent_id_size() const;
  void clear_talent_id();
  static const int kTalentIdFieldNumber = 35;
  ::google::protobuf::int32 talent_id(int index) const;
  void set_talent_id(int index, ::google::protobuf::int32 value);
  void add_talent_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      talent_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_talent_id();

  // repeated int32 talent_level = 36;
  int talent_level_size() const;
  void clear_talent_level();
  static const int kTalentLevelFieldNumber = 36;
  ::google::protobuf::int32 talent_level(int index) const;
  void set_talent_level(int index, ::google::protobuf::int32 value);
  void add_talent_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      talent_level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_talent_level();

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string attack_guid = 104;
  bool has_attack_guid() const;
  void clear_attack_guid();
  static const int kAttackGuidFieldNumber = 104;
  const ::std::string& attack_guid() const;
  void set_attack_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_attack_guid(::std::string&& value);
  #endif
  void set_attack_guid(const char* value);
  void set_attack_guid(const char* value, size_t size);
  ::std::string* mutable_attack_guid();
  ::std::string* release_attack_guid();
  void set_allocated_attack_guid(::std::string* attack_guid);

  // required .protocol.game.msg_battle_unit unit = 1;
  bool has_unit() const;
  void clear_unit();
  static const int kUnitFieldNumber = 1;
  private:
  const ::protocol::game::msg_battle_unit& _internal_unit() const;
  public:
  const ::protocol::game::msg_battle_unit& unit() const;
  ::protocol::game::msg_battle_unit* release_unit();
  ::protocol::game::msg_battle_unit* mutable_unit();
  void set_allocated_unit(::protocol::game::msg_battle_unit* unit);

  // optional int32 sex = 3;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 role_level = 4;
  bool has_role_level() const;
  void clear_role_level();
  static const int kRoleLevelFieldNumber = 4;
  ::google::protobuf::int32 role_level() const;
  void set_role_level(::google::protobuf::int32 value);

  // optional int32 camp = 5;
  bool has_camp() const;
  void clear_camp();
  static const int kCampFieldNumber = 5;
  ::google::protobuf::int32 camp() const;
  void set_camp(::google::protobuf::int32 value);

  // optional int32 avatar = 10;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 10;
  ::google::protobuf::int32 avatar() const;
  void set_avatar(::google::protobuf::int32 value);

  // optional int32 cup = 12;
  bool has_cup() const;
  void clear_cup();
  static const int kCupFieldNumber = 12;
  ::google::protobuf::int32 cup() const;
  void set_cup(::google::protobuf::int32 value);

  // optional int32 toukuang = 13;
  bool has_toukuang() const;
  void clear_toukuang();
  static const int kToukuangFieldNumber = 13;
  ::google::protobuf::int32 toukuang() const;
  void set_toukuang(::google::protobuf::int32 value);

  // optional int32 region_id = 15;
  bool has_region_id() const;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 15;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // optional int32 name_color = 16;
  bool has_name_color() const;
  void clear_name_color();
  static const int kNameColorFieldNumber = 16;
  ::google::protobuf::int32 name_color() const;
  void set_name_color(::google::protobuf::int32 value);

  // optional int32 level = 30;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 30;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int32 exp = 31;
  bool has_exp() const;
  void clear_exp();
  static const int kExpFieldNumber = 31;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // optional int32 score = 32;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 32;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // optional int32 score_level = 33;
  bool has_score_level() const;
  void clear_score_level();
  static const int kScoreLevelFieldNumber = 33;
  ::google::protobuf::int32 score_level() const;
  void set_score_level(::google::protobuf::int32 value);

  // optional int32 talent_point = 37;
  bool has_talent_point() const;
  void clear_talent_point();
  static const int kTalentPointFieldNumber = 37;
  ::google::protobuf::int32 talent_point() const;
  void set_talent_point(::google::protobuf::int32 value);

  // optional int32 die = 38;
  bool has_die() const;
  void clear_die();
  static const int kDieFieldNumber = 38;
  ::google::protobuf::int32 die() const;
  void set_die(::google::protobuf::int32 value);

  // optional int32 sha = 39;
  bool has_sha() const;
  void clear_sha();
  static const int kShaFieldNumber = 39;
  ::google::protobuf::int32 sha() const;
  void set_sha(::google::protobuf::int32 value);

  // optional int32 lsha = 40;
  bool has_lsha() const;
  void clear_lsha();
  static const int kLshaFieldNumber = 40;
  ::google::protobuf::int32 lsha() const;
  void set_lsha(::google::protobuf::int32 value);

  // optional int32 birth_y = 103;
  bool has_birth_y() const;
  void clear_birth_y();
  static const int kBirthYFieldNumber = 103;
  ::google::protobuf::int32 birth_y() const;
  void set_birth_y(::google::protobuf::int32 value);

  // optional int32 max_lsha = 41;
  bool has_max_lsha() const;
  void clear_max_lsha();
  static const int kMaxLshaFieldNumber = 41;
  ::google::protobuf::int32 max_lsha() const;
  void set_max_lsha(::google::protobuf::int32 value);

  // optional int32 skill_id = 50;
  bool has_skill_id() const;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 50;
  ::google::protobuf::int32 skill_id() const;
  void set_skill_id(::google::protobuf::int32 value);

  // optional int32 skill_level = 51;
  bool has_skill_level() const;
  void clear_skill_level();
  static const int kSkillLevelFieldNumber = 51;
  ::google::protobuf::int32 skill_level() const;
  void set_skill_level(::google::protobuf::int32 value);

  // optional int32 re_pre = 52;
  bool has_re_pre() const;
  void clear_re_pre();
  static const int kRePreFieldNumber = 52;
  ::google::protobuf::int32 re_pre() const;
  void set_re_pre(::google::protobuf::int32 value);

  // optional int32 re_pre_zhen = 53;
  bool has_re_pre_zhen() const;
  void clear_re_pre_zhen();
  static const int kRePreZhenFieldNumber = 53;
  ::google::protobuf::int32 re_pre_zhen() const;
  void set_re_pre_zhen(::google::protobuf::int32 value);

  // optional int32 re_pre_zhen1 = 54;
  bool has_re_pre_zhen1() const;
  void clear_re_pre_zhen1();
  static const int kRePreZhen1FieldNumber = 54;
  ::google::protobuf::int32 re_pre_zhen1() const;
  void set_re_pre_zhen1(::google::protobuf::int32 value);

  // optional int32 xueren_zhen = 55;
  bool has_xueren_zhen() const;
  void clear_xueren_zhen();
  static const int kXuerenZhenFieldNumber = 55;
  ::google::protobuf::int32 xueren_zhen() const;
  void set_xueren_zhen(::google::protobuf::int32 value);

  // optional bool is_xueren = 56;
  bool has_is_xueren() const;
  void clear_is_xueren();
  static const int kIsXuerenFieldNumber = 56;
  bool is_xueren() const;
  void set_is_xueren(bool value);

  // optional int32 cost = 57;
  bool has_cost() const;
  void clear_cost();
  static const int kCostFieldNumber = 57;
  ::google::protobuf::int32 cost() const;
  void set_cost(::google::protobuf::int32 value);

  // optional int32 attack_state = 100;
  bool has_attack_state() const;
  void clear_attack_state();
  static const int kAttackStateFieldNumber = 100;
  ::google::protobuf::int32 attack_state() const;
  void set_attack_state(::google::protobuf::int32 value);

  // optional int32 attackZhen = 101;
  bool has_attackzhen() const;
  void clear_attackzhen();
  static const int kAttackZhenFieldNumber = 101;
  ::google::protobuf::int32 attackzhen() const;
  void set_attackzhen(::google::protobuf::int32 value);

  // optional int32 birth_x = 102;
  bool has_birth_x() const;
  void clear_birth_x();
  static const int kBirthXFieldNumber = 102;
  ::google::protobuf::int32 birth_x() const;
  void set_birth_x(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_player)
 private:
  void set_has_unit();
  void clear_has_unit();
  void set_has_name();
  void clear_has_name();
  void set_has_sex();
  void clear_has_sex();
  void set_has_role_level();
  void clear_has_role_level();
  void set_has_camp();
  void clear_has_camp();
  void set_has_avatar();
  void clear_has_avatar();
  void set_has_cup();
  void clear_has_cup();
  void set_has_toukuang();
  void clear_has_toukuang();
  void set_has_region_id();
  void clear_has_region_id();
  void set_has_name_color();
  void clear_has_name_color();
  void set_has_level();
  void clear_has_level();
  void set_has_exp();
  void clear_has_exp();
  void set_has_score();
  void clear_has_score();
  void set_has_score_level();
  void clear_has_score_level();
  void set_has_talent_point();
  void clear_has_talent_point();
  void set_has_die();
  void clear_has_die();
  void set_has_sha();
  void clear_has_sha();
  void set_has_lsha();
  void clear_has_lsha();
  void set_has_max_lsha();
  void clear_has_max_lsha();
  void set_has_skill_id();
  void clear_has_skill_id();
  void set_has_skill_level();
  void clear_has_skill_level();
  void set_has_re_pre();
  void clear_has_re_pre();
  void set_has_re_pre_zhen();
  void clear_has_re_pre_zhen();
  void set_has_re_pre_zhen1();
  void clear_has_re_pre_zhen1();
  void set_has_xueren_zhen();
  void clear_has_xueren_zhen();
  void set_has_is_xueren();
  void clear_has_is_xueren();
  void set_has_cost();
  void clear_has_cost();
  void set_has_attack_state();
  void clear_has_attack_state();
  void set_has_attackzhen();
  void clear_has_attackzhen();
  void set_has_birth_x();
  void clear_has_birth_x();
  void set_has_birth_y();
  void clear_has_birth_y();
  void set_has_attack_guid();
  void clear_has_attack_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attr_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attr_param1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attr_param2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attr_param3_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fashion_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lattr_value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > talent_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > talent_level_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr attack_guid_;
  ::protocol::game::msg_battle_unit* unit_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 role_level_;
  ::google::protobuf::int32 camp_;
  ::google::protobuf::int32 avatar_;
  ::google::protobuf::int32 cup_;
  ::google::protobuf::int32 toukuang_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 name_color_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 score_level_;
  ::google::protobuf::int32 talent_point_;
  ::google::protobuf::int32 die_;
  ::google::protobuf::int32 sha_;
  ::google::protobuf::int32 lsha_;
  ::google::protobuf::int32 birth_y_;
  ::google::protobuf::int32 max_lsha_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;
  ::google::protobuf::int32 re_pre_;
  ::google::protobuf::int32 re_pre_zhen_;
  ::google::protobuf::int32 re_pre_zhen1_;
  ::google::protobuf::int32 xueren_zhen_;
  bool is_xueren_;
  ::google::protobuf::int32 cost_;
  ::google::protobuf::int32 attack_state_;
  ::google::protobuf::int32 attackzhen_;
  ::google::protobuf::int32 birth_x_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_battle_effect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_effect) */ {
 public:
  msg_battle_effect();
  virtual ~msg_battle_effect();

  msg_battle_effect(const msg_battle_effect& from);

  inline msg_battle_effect& operator=(const msg_battle_effect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_effect(msg_battle_effect&& from) noexcept
    : msg_battle_effect() {
    *this = ::std::move(from);
  }

  inline msg_battle_effect& operator=(msg_battle_effect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_effect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_effect* internal_default_instance() {
    return reinterpret_cast<const msg_battle_effect*>(
               &_msg_battle_effect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(msg_battle_effect* other);
  friend void swap(msg_battle_effect& a, msg_battle_effect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_effect* New() const final {
    return CreateMaybeMessage<msg_battle_effect>(NULL);
  }

  msg_battle_effect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_effect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_effect& from);
  void MergeFrom(const msg_battle_effect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_effect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string hit_guids = 14;
  int hit_guids_size() const;
  void clear_hit_guids();
  static const int kHitGuidsFieldNumber = 14;
  const ::std::string& hit_guids(int index) const;
  ::std::string* mutable_hit_guids(int index);
  void set_hit_guids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_hit_guids(int index, ::std::string&& value);
  #endif
  void set_hit_guids(int index, const char* value);
  void set_hit_guids(int index, const char* value, size_t size);
  ::std::string* add_hit_guids();
  void add_hit_guids(const ::std::string& value);
  #if LANG_CXX11
  void add_hit_guids(::std::string&& value);
  #endif
  void add_hit_guids(const char* value);
  void add_hit_guids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& hit_guids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_hit_guids();

  // optional string re_guid = 12;
  bool has_re_guid() const;
  void clear_re_guid();
  static const int kReGuidFieldNumber = 12;
  const ::std::string& re_guid() const;
  void set_re_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_re_guid(::std::string&& value);
  #endif
  void set_re_guid(const char* value);
  void set_re_guid(const char* value, size_t size);
  ::std::string* mutable_re_guid();
  ::std::string* release_re_guid();
  void set_allocated_re_guid(::std::string* re_guid);

  // optional string follow_guid = 21;
  bool has_follow_guid() const;
  void clear_follow_guid();
  static const int kFollowGuidFieldNumber = 21;
  const ::std::string& follow_guid() const;
  void set_follow_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_follow_guid(::std::string&& value);
  #endif
  void set_follow_guid(const char* value);
  void set_follow_guid(const char* value, size_t size);
  ::std::string* mutable_follow_guid();
  ::std::string* release_follow_guid();
  void set_allocated_follow_guid(::std::string* follow_guid);

  // required int32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // optional int32 re_tid = 2;
  bool has_re_tid() const;
  void clear_re_tid();
  static const int kReTidFieldNumber = 2;
  ::google::protobuf::int32 re_tid() const;
  void set_re_tid(::google::protobuf::int32 value);

  // optional int32 id = 3;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 sx = 4;
  bool has_sx() const;
  void clear_sx();
  static const int kSxFieldNumber = 4;
  ::google::protobuf::int32 sx() const;
  void set_sx(::google::protobuf::int32 value);

  // optional int32 sy = 5;
  bool has_sy() const;
  void clear_sy();
  static const int kSyFieldNumber = 5;
  ::google::protobuf::int32 sy() const;
  void set_sy(::google::protobuf::int32 value);

  // optional int32 x = 6;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 6;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 7;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 7;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // optional int32 xx = 8;
  bool has_xx() const;
  void clear_xx();
  static const int kXxFieldNumber = 8;
  ::google::protobuf::int32 xx() const;
  void set_xx(::google::protobuf::int32 value);

  // optional int32 yy = 9;
  bool has_yy() const;
  void clear_yy();
  static const int kYyFieldNumber = 9;
  ::google::protobuf::int32 yy() const;
  void set_yy(::google::protobuf::int32 value);

  // optional int32 r = 10;
  bool has_r() const;
  void clear_r();
  static const int kRFieldNumber = 10;
  ::google::protobuf::int32 r() const;
  void set_r(::google::protobuf::int32 value);

  // optional int32 re_ur = 13;
  bool has_re_ur() const;
  void clear_re_ur();
  static const int kReUrFieldNumber = 13;
  ::google::protobuf::int32 re_ur() const;
  void set_re_ur(::google::protobuf::int32 value);

  // optional int32 time = 15;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 15;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 dd_time = 16;
  bool has_dd_time() const;
  void clear_dd_time();
  static const int kDdTimeFieldNumber = 16;
  ::google::protobuf::int32 dd_time() const;
  void set_dd_time(::google::protobuf::int32 value);

  // optional int32 state = 17;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 17;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // optional int32 len = 18;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 18;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // optional int32 pre_zhen = 19;
  bool has_pre_zhen() const;
  void clear_pre_zhen();
  static const int kPreZhenFieldNumber = 19;
  ::google::protobuf::int32 pre_zhen() const;
  void set_pre_zhen(::google::protobuf::int32 value);

  // optional int32 camp = 20;
  bool has_camp() const;
  void clear_camp();
  static const int kCampFieldNumber = 20;
  ::google::protobuf::int32 camp() const;
  void set_camp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_effect)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_re_tid();
  void clear_has_re_tid();
  void set_has_id();
  void clear_has_id();
  void set_has_sx();
  void clear_has_sx();
  void set_has_sy();
  void clear_has_sy();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_xx();
  void clear_has_xx();
  void set_has_yy();
  void clear_has_yy();
  void set_has_r();
  void clear_has_r();
  void set_has_re_guid();
  void clear_has_re_guid();
  void set_has_re_ur();
  void clear_has_re_ur();
  void set_has_time();
  void clear_has_time();
  void set_has_dd_time();
  void clear_has_dd_time();
  void set_has_state();
  void clear_has_state();
  void set_has_len();
  void clear_has_len();
  void set_has_pre_zhen();
  void clear_has_pre_zhen();
  void set_has_camp();
  void clear_has_camp();
  void set_has_follow_guid();
  void clear_has_follow_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> hit_guids_;
  ::google::protobuf::internal::ArenaStringPtr re_guid_;
  ::google::protobuf::internal::ArenaStringPtr follow_guid_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 re_tid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 sx_;
  ::google::protobuf::int32 sy_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 xx_;
  ::google::protobuf::int32 yy_;
  ::google::protobuf::int32 r_;
  ::google::protobuf::int32 re_ur_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 dd_time_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 len_;
  ::google::protobuf::int32 pre_zhen_;
  ::google::protobuf::int32 camp_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_battle_item_base : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_item_base) */ {
 public:
  msg_battle_item_base();
  virtual ~msg_battle_item_base();

  msg_battle_item_base(const msg_battle_item_base& from);

  inline msg_battle_item_base& operator=(const msg_battle_item_base& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_item_base(msg_battle_item_base&& from) noexcept
    : msg_battle_item_base() {
    *this = ::std::move(from);
  }

  inline msg_battle_item_base& operator=(msg_battle_item_base&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_item_base& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_item_base* internal_default_instance() {
    return reinterpret_cast<const msg_battle_item_base*>(
               &_msg_battle_item_base_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(msg_battle_item_base* other);
  friend void swap(msg_battle_item_base& a, msg_battle_item_base& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_item_base* New() const final {
    return CreateMaybeMessage<msg_battle_item_base>(NULL);
  }

  msg_battle_item_base* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_item_base>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_item_base& from);
  void MergeFrom(const msg_battle_item_base& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_item_base* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // optional int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // optional int32 param = 5;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 5;
  ::google::protobuf::int32 param() const;
  void set_param(::google::protobuf::int32 value);

  // optional int32 zhen = 6;
  bool has_zhen() const;
  void clear_zhen();
  static const int kZhenFieldNumber = 6;
  ::google::protobuf::int32 zhen() const;
  void set_zhen(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_item_base)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_param();
  void clear_has_param();
  void set_has_zhen();
  void clear_has_zhen();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 param_;
  ::google::protobuf::int32 zhen_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_battle_item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_item) */ {
 public:
  msg_battle_item();
  virtual ~msg_battle_item();

  msg_battle_item(const msg_battle_item& from);

  inline msg_battle_item& operator=(const msg_battle_item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_item(msg_battle_item&& from) noexcept
    : msg_battle_item() {
    *this = ::std::move(from);
  }

  inline msg_battle_item& operator=(msg_battle_item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_item* internal_default_instance() {
    return reinterpret_cast<const msg_battle_item*>(
               &_msg_battle_item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(msg_battle_item* other);
  friend void swap(msg_battle_item& a, msg_battle_item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_item* New() const final {
    return CreateMaybeMessage<msg_battle_item>(NULL);
  }

  msg_battle_item* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_item>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_item& from);
  void MergeFrom(const msg_battle_item& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protocol.game.msg_battle_item_base item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  private:
  const ::protocol::game::msg_battle_item_base& _internal_item() const;
  public:
  const ::protocol::game::msg_battle_item_base& item() const;
  ::protocol::game::msg_battle_item_base* release_item();
  ::protocol::game::msg_battle_item_base* mutable_item();
  void set_allocated_item(::protocol::game::msg_battle_item_base* item);

  // optional int32 birth_pos = 2;
  bool has_birth_pos() const;
  void clear_birth_pos();
  static const int kBirthPosFieldNumber = 2;
  ::google::protobuf::int32 birth_pos() const;
  void set_birth_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_item)
 private:
  void set_has_item();
  void clear_has_item();
  void set_has_birth_pos();
  void clear_has_birth_pos();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::protocol::game::msg_battle_item_base* item_;
  ::google::protobuf::int32 birth_pos_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_battle_op : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_op) */ {
 public:
  msg_battle_op();
  virtual ~msg_battle_op();

  msg_battle_op(const msg_battle_op& from);

  inline msg_battle_op& operator=(const msg_battle_op& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_op(msg_battle_op&& from) noexcept
    : msg_battle_op() {
    *this = ::std::move(from);
  }

  inline msg_battle_op& operator=(msg_battle_op&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_op& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_op* internal_default_instance() {
    return reinterpret_cast<const msg_battle_op*>(
               &_msg_battle_op_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(msg_battle_op* other);
  friend void swap(msg_battle_op& a, msg_battle_op& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_op* New() const final {
    return CreateMaybeMessage<msg_battle_op>(NULL);
  }

  msg_battle_op* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_op>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_op& from);
  void MergeFrom(const msg_battle_op& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_op* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 param_ints = 4;
  int param_ints_size() const;
  void clear_param_ints();
  static const int kParamIntsFieldNumber = 4;
  ::google::protobuf::int32 param_ints(int index) const;
  void set_param_ints(int index, ::google::protobuf::int32 value);
  void add_param_ints(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      param_ints() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_param_ints();

  // repeated string param_strings = 5;
  int param_strings_size() const;
  void clear_param_strings();
  static const int kParamStringsFieldNumber = 5;
  const ::std::string& param_strings(int index) const;
  ::std::string* mutable_param_strings(int index);
  void set_param_strings(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_param_strings(int index, ::std::string&& value);
  #endif
  void set_param_strings(int index, const char* value);
  void set_param_strings(int index, const char* value, size_t size);
  ::std::string* add_param_strings();
  void add_param_strings(const ::std::string& value);
  #if LANG_CXX11
  void add_param_strings(::std::string&& value);
  #endif
  void add_param_strings(const char* value);
  void add_param_strings(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& param_strings() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param_strings();

  // optional int32 zhen = 1;
  bool has_zhen() const;
  void clear_zhen();
  static const int kZhenFieldNumber = 1;
  ::google::protobuf::int32 zhen() const;
  void set_zhen(::google::protobuf::int32 value);

  // required int32 opcode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 2;
  ::google::protobuf::int32 opcode() const;
  void set_opcode(::google::protobuf::int32 value);

  // required uint64 guid = 3;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_op)
 private:
  void set_has_zhen();
  void clear_has_zhen();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_guid();
  void clear_has_guid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > param_ints_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param_strings_;
  ::google::protobuf::int32 zhen_;
  ::google::protobuf::int32 opcode_;
  ::google::protobuf::uint64 guid_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_battle_state : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_state) */ {
 public:
  msg_battle_state();
  virtual ~msg_battle_state();

  msg_battle_state(const msg_battle_state& from);

  inline msg_battle_state& operator=(const msg_battle_state& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_state(msg_battle_state&& from) noexcept
    : msg_battle_state() {
    *this = ::std::move(from);
  }

  inline msg_battle_state& operator=(msg_battle_state&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_state& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_state* internal_default_instance() {
    return reinterpret_cast<const msg_battle_state*>(
               &_msg_battle_state_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(msg_battle_state* other);
  friend void swap(msg_battle_state& a, msg_battle_state& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_state* New() const final {
    return CreateMaybeMessage<msg_battle_state>(NULL);
  }

  msg_battle_state* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_state>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_state& from);
  void MergeFrom(const msg_battle_state& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_state* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_battle_boss boss = 2;
  int boss_size() const;
  void clear_boss();
  static const int kBossFieldNumber = 2;
  ::protocol::game::msg_battle_boss* mutable_boss(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_boss >*
      mutable_boss();
  const ::protocol::game::msg_battle_boss& boss(int index) const;
  ::protocol::game::msg_battle_boss* add_boss();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_boss >&
      boss() const;

  // repeated .protocol.game.msg_battle_monster monsters = 3;
  int monsters_size() const;
  void clear_monsters();
  static const int kMonstersFieldNumber = 3;
  ::protocol::game::msg_battle_monster* mutable_monsters(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_monster >*
      mutable_monsters();
  const ::protocol::game::msg_battle_monster& monsters(int index) const;
  ::protocol::game::msg_battle_monster* add_monsters();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_monster >&
      monsters() const;

  // repeated .protocol.game.msg_battle_player players = 4;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 4;
  ::protocol::game::msg_battle_player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_player >*
      mutable_players();
  const ::protocol::game::msg_battle_player& players(int index) const;
  ::protocol::game::msg_battle_player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_player >&
      players() const;

  // repeated .protocol.game.msg_battle_effect effects = 5;
  int effects_size() const;
  void clear_effects();
  static const int kEffectsFieldNumber = 5;
  ::protocol::game::msg_battle_effect* mutable_effects(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_effect >*
      mutable_effects();
  const ::protocol::game::msg_battle_effect& effects(int index) const;
  ::protocol::game::msg_battle_effect* add_effects();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_effect >&
      effects() const;

  // repeated .protocol.game.msg_battle_item_base bases = 6;
  int bases_size() const;
  void clear_bases();
  static const int kBasesFieldNumber = 6;
  ::protocol::game::msg_battle_item_base* mutable_bases(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item_base >*
      mutable_bases();
  const ::protocol::game::msg_battle_item_base& bases(int index) const;
  ::protocol::game::msg_battle_item_base* add_bases();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item_base >&
      bases() const;

  // repeated .protocol.game.msg_battle_item items = 7;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 7;
  ::protocol::game::msg_battle_item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item >*
      mutable_items();
  const ::protocol::game::msg_battle_item& items(int index) const;
  ::protocol::game::msg_battle_item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item >&
      items() const;

  // required int32 zhen = 1;
  bool has_zhen() const;
  void clear_zhen();
  static const int kZhenFieldNumber = 1;
  ::google::protobuf::int32 zhen() const;
  void set_zhen(::google::protobuf::int32 value);

  // required int32 tid = 8;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 8;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // required bool init_item = 9;
  bool has_init_item() const;
  void clear_init_item();
  static const int kInitItemFieldNumber = 9;
  bool init_item() const;
  void set_init_item(bool value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_state)
 private:
  void set_has_zhen();
  void clear_has_zhen();
  void set_has_tid();
  void clear_has_tid();
  void set_has_init_item();
  void clear_has_init_item();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_boss > boss_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_monster > monsters_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_player > players_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_effect > effects_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item_base > bases_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item > items_;
  ::google::protobuf::int32 zhen_;
  ::google::protobuf::int32 tid_;
  bool init_item_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_battle_state : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_battle_state) */ {
 public:
  cmsg_battle_state();
  virtual ~cmsg_battle_state();

  cmsg_battle_state(const cmsg_battle_state& from);

  inline cmsg_battle_state& operator=(const cmsg_battle_state& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_battle_state(cmsg_battle_state&& from) noexcept
    : cmsg_battle_state() {
    *this = ::std::move(from);
  }

  inline cmsg_battle_state& operator=(cmsg_battle_state&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_battle_state& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_battle_state* internal_default_instance() {
    return reinterpret_cast<const cmsg_battle_state*>(
               &_cmsg_battle_state_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(cmsg_battle_state* other);
  friend void swap(cmsg_battle_state& a, cmsg_battle_state& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_battle_state* New() const final {
    return CreateMaybeMessage<cmsg_battle_state>(NULL);
  }

  cmsg_battle_state* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_battle_state>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_battle_state& from);
  void MergeFrom(const cmsg_battle_state& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_battle_state* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protocol.game.msg_battle_state state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  private:
  const ::protocol::game::msg_battle_state& _internal_state() const;
  public:
  const ::protocol::game::msg_battle_state& state() const;
  ::protocol::game::msg_battle_state* release_state();
  ::protocol::game::msg_battle_state* mutable_state();
  void set_allocated_state(::protocol::game::msg_battle_state* state);

  // required uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_battle_state)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_state();
  void clear_has_state();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::protocol::game::msg_battle_state* state_;
  ::google::protobuf::uint64 guid_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_battle_code : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_battle_code) */ {
 public:
  msg_battle_code();
  virtual ~msg_battle_code();

  msg_battle_code(const msg_battle_code& from);

  inline msg_battle_code& operator=(const msg_battle_code& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_battle_code(msg_battle_code&& from) noexcept
    : msg_battle_code() {
    *this = ::std::move(from);
  }

  inline msg_battle_code& operator=(msg_battle_code&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_battle_code& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_battle_code* internal_default_instance() {
    return reinterpret_cast<const msg_battle_code*>(
               &_msg_battle_code_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(msg_battle_code* other);
  friend void swap(msg_battle_code& a, msg_battle_code& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_battle_code* New() const final {
    return CreateMaybeMessage<msg_battle_code>(NULL);
  }

  msg_battle_code* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_battle_code>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_battle_code& from);
  void MergeFrom(const msg_battle_code& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_battle_code* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 zhen = 1;
  bool has_zhen() const;
  void clear_zhen();
  static const int kZhenFieldNumber = 1;
  ::google::protobuf::int32 zhen() const;
  void set_zhen(::google::protobuf::int32 value);

  // required int32 code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_battle_code)
 private:
  void set_has_zhen();
  void clear_has_zhen();
  void set_has_code();
  void clear_has_code();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 zhen_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_battle_link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_battle_link) */ {
 public:
  cmsg_battle_link();
  virtual ~cmsg_battle_link();

  cmsg_battle_link(const cmsg_battle_link& from);

  inline cmsg_battle_link& operator=(const cmsg_battle_link& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_battle_link(cmsg_battle_link&& from) noexcept
    : cmsg_battle_link() {
    *this = ::std::move(from);
  }

  inline cmsg_battle_link& operator=(cmsg_battle_link&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_battle_link& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_battle_link* internal_default_instance() {
    return reinterpret_cast<const cmsg_battle_link*>(
               &_cmsg_battle_link_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(cmsg_battle_link* other);
  friend void swap(cmsg_battle_link& a, cmsg_battle_link& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_battle_link* New() const final {
    return CreateMaybeMessage<cmsg_battle_link>(NULL);
  }

  cmsg_battle_link* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_battle_link>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_battle_link& from);
  void MergeFrom(const cmsg_battle_link& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_battle_link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // required uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_battle_link)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_code();
  void clear_has_code();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::uint64 guid_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_battle_link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_battle_link) */ {
 public:
  smsg_battle_link();
  virtual ~smsg_battle_link();

  smsg_battle_link(const smsg_battle_link& from);

  inline smsg_battle_link& operator=(const smsg_battle_link& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_battle_link(smsg_battle_link&& from) noexcept
    : smsg_battle_link() {
    *this = ::std::move(from);
  }

  inline smsg_battle_link& operator=(smsg_battle_link&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_battle_link& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_battle_link* internal_default_instance() {
    return reinterpret_cast<const smsg_battle_link*>(
               &_smsg_battle_link_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(smsg_battle_link* other);
  friend void swap(smsg_battle_link& a, smsg_battle_link& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_battle_link* New() const final {
    return CreateMaybeMessage<smsg_battle_link>(NULL);
  }

  smsg_battle_link* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_battle_link>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_battle_link& from);
  void MergeFrom(const smsg_battle_link& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_battle_link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_battle_op ops = 10;
  int ops_size() const;
  void clear_ops();
  static const int kOpsFieldNumber = 10;
  ::protocol::game::msg_battle_op* mutable_ops(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_op >*
      mutable_ops();
  const ::protocol::game::msg_battle_op& ops(int index) const;
  ::protocol::game::msg_battle_op* add_ops();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_op >&
      ops() const;

  // optional .protocol.game.msg_battle_state state = 9;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 9;
  private:
  const ::protocol::game::msg_battle_state& _internal_state() const;
  public:
  const ::protocol::game::msg_battle_state& state() const;
  ::protocol::game::msg_battle_state* release_state();
  ::protocol::game::msg_battle_state* mutable_state();
  void set_allocated_state(::protocol::game::msg_battle_state* state);

  // required uint64 battle_guid = 1;
  bool has_battle_guid() const;
  void clear_battle_guid();
  static const int kBattleGuidFieldNumber = 1;
  ::google::protobuf::uint64 battle_guid() const;
  void set_battle_guid(::google::protobuf::uint64 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 team_num = 3;
  bool has_team_num() const;
  void clear_team_num();
  static const int kTeamNumFieldNumber = 3;
  ::google::protobuf::int32 team_num() const;
  void set_team_num(::google::protobuf::int32 value);

  // required int32 member_num = 4;
  bool has_member_num() const;
  void clear_member_num();
  static const int kMemberNumFieldNumber = 4;
  ::google::protobuf::int32 member_num() const;
  void set_member_num(::google::protobuf::int32 value);

  // required int32 zhen = 5;
  bool has_zhen() const;
  void clear_zhen();
  static const int kZhenFieldNumber = 5;
  ::google::protobuf::int32 zhen() const;
  void set_zhen(::google::protobuf::int32 value);

  // required int32 seed = 6;
  bool has_seed() const;
  void clear_seed();
  static const int kSeedFieldNumber = 6;
  ::google::protobuf::int32 seed() const;
  void set_seed(::google::protobuf::int32 value);

  // required int32 seed_add = 7;
  bool has_seed_add() const;
  void clear_seed_add();
  static const int kSeedAddFieldNumber = 7;
  ::google::protobuf::int32 seed_add() const;
  void set_seed_add(::google::protobuf::int32 value);

  // optional int32 is_state = 8;
  bool has_is_state() const;
  void clear_is_state();
  static const int kIsStateFieldNumber = 8;
  ::google::protobuf::int32 is_state() const;
  void set_is_state(::google::protobuf::int32 value);

  // required int32 self_camp = 11;
  bool has_self_camp() const;
  void clear_self_camp();
  static const int kSelfCampFieldNumber = 11;
  ::google::protobuf::int32 self_camp() const;
  void set_self_camp(::google::protobuf::int32 value);

  // required int32 is_new = 12;
  bool has_is_new() const;
  void clear_is_new();
  static const int kIsNewFieldNumber = 12;
  ::google::protobuf::int32 is_new() const;
  void set_is_new(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_battle_link)
 private:
  void set_has_battle_guid();
  void clear_has_battle_guid();
  void set_has_type();
  void clear_has_type();
  void set_has_team_num();
  void clear_has_team_num();
  void set_has_member_num();
  void clear_has_member_num();
  void set_has_zhen();
  void clear_has_zhen();
  void set_has_seed();
  void clear_has_seed();
  void set_has_seed_add();
  void clear_has_seed_add();
  void set_has_is_state();
  void clear_has_is_state();
  void set_has_state();
  void clear_has_state();
  void set_has_self_camp();
  void clear_has_self_camp();
  void set_has_is_new();
  void clear_has_is_new();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_op > ops_;
  ::protocol::game::msg_battle_state* state_;
  ::google::protobuf::uint64 battle_guid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 team_num_;
  ::google::protobuf::int32 member_num_;
  ::google::protobuf::int32 zhen_;
  ::google::protobuf::int32 seed_;
  ::google::protobuf::int32 seed_add_;
  ::google::protobuf::int32 is_state_;
  ::google::protobuf::int32 self_camp_;
  ::google::protobuf::int32 is_new_;
  friend struct ::protobuf_msg_5fbattle1_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// msg_battle_unit

// required uint64 guid = 1;
inline bool msg_battle_unit::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_unit::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_unit::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_unit::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 msg_battle_unit::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.guid)
  return guid_;
}
inline void msg_battle_unit::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.guid)
}

// optional int32 role_id = 2;
inline bool msg_battle_unit::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_unit::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_unit::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_unit::clear_role_id() {
  set_changed();
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 msg_battle_unit::role_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.role_id)
  return role_id_;
}
inline void msg_battle_unit::set_role_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.role_id)
}

// optional int32 x = 10;
inline bool msg_battle_unit::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_battle_unit::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_battle_unit::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_battle_unit::clear_x() {
  set_changed();
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 msg_battle_unit::x() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.x)
  return x_;
}
inline void msg_battle_unit::set_x(::google::protobuf::int32 value) {
  set_changed();
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.x)
}

// optional int32 y = 11;
inline bool msg_battle_unit::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_battle_unit::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_battle_unit::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_battle_unit::clear_y() {
  set_changed();
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 msg_battle_unit::y() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.y)
  return y_;
}
inline void msg_battle_unit::set_y(::google::protobuf::int32 value) {
  set_changed();
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.y)
}

// optional int32 r = 12;
inline bool msg_battle_unit::has_r() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_battle_unit::set_has_r() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_battle_unit::clear_has_r() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_battle_unit::clear_r() {
  set_changed();
  r_ = 0;
  clear_has_r();
}
inline ::google::protobuf::int32 msg_battle_unit::r() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.r)
  return r_;
}
inline void msg_battle_unit::set_r(::google::protobuf::int32 value) {
  set_changed();
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.r)
}

// optional int32 r_py = 13;
inline bool msg_battle_unit::has_r_py() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_battle_unit::set_has_r_py() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_battle_unit::clear_has_r_py() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_battle_unit::clear_r_py() {
  set_changed();
  r_py_ = 0;
  clear_has_r_py();
}
inline ::google::protobuf::int32 msg_battle_unit::r_py() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.r_py)
  return r_py_;
}
inline void msg_battle_unit::set_r_py(::google::protobuf::int32 value) {
  set_changed();
  set_has_r_py();
  r_py_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.r_py)
}

// optional bool is_move = 14;
inline bool msg_battle_unit::has_is_move() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void msg_battle_unit::set_has_is_move() {
  _has_bits_[0] |= 0x00000800u;
}
inline void msg_battle_unit::clear_has_is_move() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void msg_battle_unit::clear_is_move() {
  set_changed();
  is_move_ = false;
  clear_has_is_move();
}
inline bool msg_battle_unit::is_move() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.is_move)
  return is_move_;
}
inline void msg_battle_unit::set_is_move(bool value) {
  set_changed();
  set_has_is_move();
  is_move_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.is_move)
}

// optional int32 re_tid = 15;
inline bool msg_battle_unit::has_re_tid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void msg_battle_unit::set_has_re_tid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void msg_battle_unit::clear_has_re_tid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void msg_battle_unit::clear_re_tid() {
  set_changed();
  re_tid_ = 0;
  clear_has_re_tid();
}
inline ::google::protobuf::int32 msg_battle_unit::re_tid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.re_tid)
  return re_tid_;
}
inline void msg_battle_unit::set_re_tid(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_tid();
  re_tid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.re_tid)
}

// optional int32 re_state = 16;
inline bool msg_battle_unit::has_re_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void msg_battle_unit::set_has_re_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void msg_battle_unit::clear_has_re_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void msg_battle_unit::clear_re_state() {
  set_changed();
  re_state_ = 0;
  clear_has_re_state();
}
inline ::google::protobuf::int32 msg_battle_unit::re_state() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.re_state)
  return re_state_;
}
inline void msg_battle_unit::set_re_state(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_state();
  re_state_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.re_state)
}

// optional int32 re_id = 17;
inline bool msg_battle_unit::has_re_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void msg_battle_unit::set_has_re_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void msg_battle_unit::clear_has_re_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void msg_battle_unit::clear_re_id() {
  set_changed();
  re_id_ = 0;
  clear_has_re_id();
}
inline ::google::protobuf::int32 msg_battle_unit::re_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.re_id)
  return re_id_;
}
inline void msg_battle_unit::set_re_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_id();
  re_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.re_id)
}

// optional int32 re_level = 18;
inline bool msg_battle_unit::has_re_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void msg_battle_unit::set_has_re_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void msg_battle_unit::clear_has_re_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void msg_battle_unit::clear_re_level() {
  set_changed();
  re_level_ = 0;
  clear_has_re_level();
}
inline ::google::protobuf::int32 msg_battle_unit::re_level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.re_level)
  return re_level_;
}
inline void msg_battle_unit::set_re_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_level();
  re_level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.re_level)
}

// optional int32 re_time = 19;
inline bool msg_battle_unit::has_re_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void msg_battle_unit::set_has_re_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void msg_battle_unit::clear_has_re_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void msg_battle_unit::clear_re_time() {
  set_changed();
  re_time_ = 0;
  clear_has_re_time();
}
inline ::google::protobuf::int32 msg_battle_unit::re_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.re_time)
  return re_time_;
}
inline void msg_battle_unit::set_re_time(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_time();
  re_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.re_time)
}

// optional int32 re_x = 20;
inline bool msg_battle_unit::has_re_x() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void msg_battle_unit::set_has_re_x() {
  _has_bits_[0] |= 0x00002000u;
}
inline void msg_battle_unit::clear_has_re_x() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void msg_battle_unit::clear_re_x() {
  set_changed();
  re_x_ = 0;
  clear_has_re_x();
}
inline ::google::protobuf::int32 msg_battle_unit::re_x() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.re_x)
  return re_x_;
}
inline void msg_battle_unit::set_re_x(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_x();
  re_x_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.re_x)
}

// optional int32 re_y = 21;
inline bool msg_battle_unit::has_re_y() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void msg_battle_unit::set_has_re_y() {
  _has_bits_[0] |= 0x00004000u;
}
inline void msg_battle_unit::clear_has_re_y() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void msg_battle_unit::clear_re_y() {
  set_changed();
  re_y_ = 0;
  clear_has_re_y();
}
inline ::google::protobuf::int32 msg_battle_unit::re_y() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.re_y)
  return re_y_;
}
inline void msg_battle_unit::set_re_y(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_y();
  re_y_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.re_y)
}

// optional int32 re_r = 22;
inline bool msg_battle_unit::has_re_r() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void msg_battle_unit::set_has_re_r() {
  _has_bits_[0] |= 0x00008000u;
}
inline void msg_battle_unit::clear_has_re_r() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void msg_battle_unit::clear_re_r() {
  set_changed();
  re_r_ = 0;
  clear_has_re_r();
}
inline ::google::protobuf::int32 msg_battle_unit::re_r() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.re_r)
  return re_r_;
}
inline void msg_battle_unit::set_re_r(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_r();
  re_r_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.re_r)
}

// repeated int32 save_re_id = 23;
inline int msg_battle_unit::save_re_id_size() const {
  return save_re_id_.size();
}
inline void msg_battle_unit::clear_save_re_id() {
  set_changed();
  save_re_id_.Clear();
}
inline ::google::protobuf::int32 msg_battle_unit::save_re_id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.save_re_id)
  return save_re_id_.Get(index);
}
inline void msg_battle_unit::set_save_re_id(int index, ::google::protobuf::int32 value) {
  set_changed();
  save_re_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.save_re_id)
}
inline void msg_battle_unit::add_save_re_id(::google::protobuf::int32 value) {
  set_changed();
  save_re_id_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_unit.save_re_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_unit::save_re_id() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_unit.save_re_id)
  return save_re_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_unit::mutable_save_re_id() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_unit.save_re_id)
  return &save_re_id_;
}

// repeated int32 save_re_zhen = 24;
inline int msg_battle_unit::save_re_zhen_size() const {
  return save_re_zhen_.size();
}
inline void msg_battle_unit::clear_save_re_zhen() {
  set_changed();
  save_re_zhen_.Clear();
}
inline ::google::protobuf::int32 msg_battle_unit::save_re_zhen(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.save_re_zhen)
  return save_re_zhen_.Get(index);
}
inline void msg_battle_unit::set_save_re_zhen(int index, ::google::protobuf::int32 value) {
  set_changed();
  save_re_zhen_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.save_re_zhen)
}
inline void msg_battle_unit::add_save_re_zhen(::google::protobuf::int32 value) {
  set_changed();
  save_re_zhen_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_unit.save_re_zhen)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_unit::save_re_zhen() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_unit.save_re_zhen)
  return save_re_zhen_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_unit::mutable_save_re_zhen() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_unit.save_re_zhen)
  return &save_re_zhen_;
}

// optional bool is_jf = 25;
inline bool msg_battle_unit::has_is_jf() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void msg_battle_unit::set_has_is_jf() {
  _has_bits_[0] |= 0x00001000u;
}
inline void msg_battle_unit::clear_has_is_jf() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void msg_battle_unit::clear_is_jf() {
  set_changed();
  is_jf_ = false;
  clear_has_is_jf();
}
inline bool msg_battle_unit::is_jf() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.is_jf)
  return is_jf_;
}
inline void msg_battle_unit::set_is_jf(bool value) {
  set_changed();
  set_has_is_jf();
  is_jf_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.is_jf)
}

// optional int32 jf_sx = 26;
inline bool msg_battle_unit::has_jf_sx() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void msg_battle_unit::set_has_jf_sx() {
  _has_bits_[0] |= 0x00010000u;
}
inline void msg_battle_unit::clear_has_jf_sx() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void msg_battle_unit::clear_jf_sx() {
  set_changed();
  jf_sx_ = 0;
  clear_has_jf_sx();
}
inline ::google::protobuf::int32 msg_battle_unit::jf_sx() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.jf_sx)
  return jf_sx_;
}
inline void msg_battle_unit::set_jf_sx(::google::protobuf::int32 value) {
  set_changed();
  set_has_jf_sx();
  jf_sx_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.jf_sx)
}

// optional int32 jf_sy = 27;
inline bool msg_battle_unit::has_jf_sy() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void msg_battle_unit::set_has_jf_sy() {
  _has_bits_[0] |= 0x00020000u;
}
inline void msg_battle_unit::clear_has_jf_sy() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void msg_battle_unit::clear_jf_sy() {
  set_changed();
  jf_sy_ = 0;
  clear_has_jf_sy();
}
inline ::google::protobuf::int32 msg_battle_unit::jf_sy() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.jf_sy)
  return jf_sy_;
}
inline void msg_battle_unit::set_jf_sy(::google::protobuf::int32 value) {
  set_changed();
  set_has_jf_sy();
  jf_sy_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.jf_sy)
}

// optional int32 jf_xx = 28;
inline bool msg_battle_unit::has_jf_xx() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void msg_battle_unit::set_has_jf_xx() {
  _has_bits_[0] |= 0x00040000u;
}
inline void msg_battle_unit::clear_has_jf_xx() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void msg_battle_unit::clear_jf_xx() {
  set_changed();
  jf_xx_ = 0;
  clear_has_jf_xx();
}
inline ::google::protobuf::int32 msg_battle_unit::jf_xx() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.jf_xx)
  return jf_xx_;
}
inline void msg_battle_unit::set_jf_xx(::google::protobuf::int32 value) {
  set_changed();
  set_has_jf_xx();
  jf_xx_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.jf_xx)
}

// optional int32 jf_yy = 29;
inline bool msg_battle_unit::has_jf_yy() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void msg_battle_unit::set_has_jf_yy() {
  _has_bits_[0] |= 0x00080000u;
}
inline void msg_battle_unit::clear_has_jf_yy() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void msg_battle_unit::clear_jf_yy() {
  set_changed();
  jf_yy_ = 0;
  clear_has_jf_yy();
}
inline ::google::protobuf::int32 msg_battle_unit::jf_yy() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.jf_yy)
  return jf_yy_;
}
inline void msg_battle_unit::set_jf_yy(::google::protobuf::int32 value) {
  set_changed();
  set_has_jf_yy();
  jf_yy_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.jf_yy)
}

// optional int32 jf_speed = 30;
inline bool msg_battle_unit::has_jf_speed() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void msg_battle_unit::set_has_jf_speed() {
  _has_bits_[0] |= 0x00100000u;
}
inline void msg_battle_unit::clear_has_jf_speed() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void msg_battle_unit::clear_jf_speed() {
  set_changed();
  jf_speed_ = 0;
  clear_has_jf_speed();
}
inline ::google::protobuf::int32 msg_battle_unit::jf_speed() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.jf_speed)
  return jf_speed_;
}
inline void msg_battle_unit::set_jf_speed(::google::protobuf::int32 value) {
  set_changed();
  set_has_jf_speed();
  jf_speed_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.jf_speed)
}

// optional int32 jf_r = 31;
inline bool msg_battle_unit::has_jf_r() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void msg_battle_unit::set_has_jf_r() {
  _has_bits_[0] |= 0x00200000u;
}
inline void msg_battle_unit::clear_has_jf_r() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void msg_battle_unit::clear_jf_r() {
  set_changed();
  jf_r_ = 0;
  clear_has_jf_r();
}
inline ::google::protobuf::int32 msg_battle_unit::jf_r() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.jf_r)
  return jf_r_;
}
inline void msg_battle_unit::set_jf_r(::google::protobuf::int32 value) {
  set_changed();
  set_has_jf_r();
  jf_r_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.jf_r)
}

// repeated int32 bhit_tids = 32;
inline int msg_battle_unit::bhit_tids_size() const {
  return bhit_tids_.size();
}
inline void msg_battle_unit::clear_bhit_tids() {
  set_changed();
  bhit_tids_.Clear();
}
inline ::google::protobuf::int32 msg_battle_unit::bhit_tids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.bhit_tids)
  return bhit_tids_.Get(index);
}
inline void msg_battle_unit::set_bhit_tids(int index, ::google::protobuf::int32 value) {
  set_changed();
  bhit_tids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.bhit_tids)
}
inline void msg_battle_unit::add_bhit_tids(::google::protobuf::int32 value) {
  set_changed();
  bhit_tids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_unit.bhit_tids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_unit::bhit_tids() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_unit.bhit_tids)
  return bhit_tids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_unit::mutable_bhit_tids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_unit.bhit_tids)
  return &bhit_tids_;
}

// optional int32 death_time = 33;
inline bool msg_battle_unit::has_death_time() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void msg_battle_unit::set_has_death_time() {
  _has_bits_[0] |= 0x00400000u;
}
inline void msg_battle_unit::clear_has_death_time() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void msg_battle_unit::clear_death_time() {
  set_changed();
  death_time_ = 0;
  clear_has_death_time();
}
inline ::google::protobuf::int32 msg_battle_unit::death_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.death_time)
  return death_time_;
}
inline void msg_battle_unit::set_death_time(::google::protobuf::int32 value) {
  set_changed();
  set_has_death_time();
  death_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.death_time)
}

// optional int32 rtime = 34;
inline bool msg_battle_unit::has_rtime() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void msg_battle_unit::set_has_rtime() {
  _has_bits_[0] |= 0x00800000u;
}
inline void msg_battle_unit::clear_has_rtime() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void msg_battle_unit::clear_rtime() {
  set_changed();
  rtime_ = 0;
  clear_has_rtime();
}
inline ::google::protobuf::int32 msg_battle_unit::rtime() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.rtime)
  return rtime_;
}
inline void msg_battle_unit::set_rtime(::google::protobuf::int32 value) {
  set_changed();
  set_has_rtime();
  rtime_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.rtime)
}

// optional int32 attackr = 35;
inline bool msg_battle_unit::has_attackr() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void msg_battle_unit::set_has_attackr() {
  _has_bits_[0] |= 0x01000000u;
}
inline void msg_battle_unit::clear_has_attackr() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void msg_battle_unit::clear_attackr() {
  set_changed();
  attackr_ = 0;
  clear_has_attackr();
}
inline ::google::protobuf::int32 msg_battle_unit::attackr() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.attackr)
  return attackr_;
}
inline void msg_battle_unit::set_attackr(::google::protobuf::int32 value) {
  set_changed();
  set_has_attackr();
  attackr_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.attackr)
}

// optional int32 hp = 36;
inline bool msg_battle_unit::has_hp() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void msg_battle_unit::set_has_hp() {
  _has_bits_[0] |= 0x02000000u;
}
inline void msg_battle_unit::clear_has_hp() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void msg_battle_unit::clear_hp() {
  set_changed();
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 msg_battle_unit::hp() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.hp)
  return hp_;
}
inline void msg_battle_unit::set_hp(::google::protobuf::int32 value) {
  set_changed();
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.hp)
}

// repeated int32 buffs = 37;
inline int msg_battle_unit::buffs_size() const {
  return buffs_.size();
}
inline void msg_battle_unit::clear_buffs() {
  set_changed();
  buffs_.Clear();
}
inline ::google::protobuf::int32 msg_battle_unit::buffs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.buffs)
  return buffs_.Get(index);
}
inline void msg_battle_unit::set_buffs(int index, ::google::protobuf::int32 value) {
  set_changed();
  buffs_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.buffs)
}
inline void msg_battle_unit::add_buffs(::google::protobuf::int32 value) {
  set_changed();
  buffs_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_unit.buffs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_unit::buffs() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_unit.buffs)
  return buffs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_unit::mutable_buffs() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_unit.buffs)
  return &buffs_;
}

// repeated int32 buffs_time = 38;
inline int msg_battle_unit::buffs_time_size() const {
  return buffs_time_.size();
}
inline void msg_battle_unit::clear_buffs_time() {
  set_changed();
  buffs_time_.Clear();
}
inline ::google::protobuf::int32 msg_battle_unit::buffs_time(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.buffs_time)
  return buffs_time_.Get(index);
}
inline void msg_battle_unit::set_buffs_time(int index, ::google::protobuf::int32 value) {
  set_changed();
  buffs_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.buffs_time)
}
inline void msg_battle_unit::add_buffs_time(::google::protobuf::int32 value) {
  set_changed();
  buffs_time_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_unit.buffs_time)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_unit::buffs_time() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_unit.buffs_time)
  return buffs_time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_unit::mutable_buffs_time() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_unit.buffs_time)
  return &buffs_time_;
}

// optional int32 is_ai = 200;
inline bool msg_battle_unit::has_is_ai() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void msg_battle_unit::set_has_is_ai() {
  _has_bits_[0] |= 0x04000000u;
}
inline void msg_battle_unit::clear_has_is_ai() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void msg_battle_unit::clear_is_ai() {
  set_changed();
  is_ai_ = 0;
  clear_has_is_ai();
}
inline ::google::protobuf::int32 msg_battle_unit::is_ai() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.is_ai)
  return is_ai_;
}
inline void msg_battle_unit::set_is_ai(::google::protobuf::int32 value) {
  set_changed();
  set_has_is_ai();
  is_ai_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.is_ai)
}

// optional int32 eyeRange = 201;
inline bool msg_battle_unit::has_eyerange() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void msg_battle_unit::set_has_eyerange() {
  _has_bits_[0] |= 0x08000000u;
}
inline void msg_battle_unit::clear_has_eyerange() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void msg_battle_unit::clear_eyerange() {
  set_changed();
  eyerange_ = 0;
  clear_has_eyerange();
}
inline ::google::protobuf::int32 msg_battle_unit::eyerange() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.eyeRange)
  return eyerange_;
}
inline void msg_battle_unit::set_eyerange(::google::protobuf::int32 value) {
  set_changed();
  set_has_eyerange();
  eyerange_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.eyeRange)
}

// optional int32 ai_state = 202;
inline bool msg_battle_unit::has_ai_state() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void msg_battle_unit::set_has_ai_state() {
  _has_bits_[0] |= 0x10000000u;
}
inline void msg_battle_unit::clear_has_ai_state() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void msg_battle_unit::clear_ai_state() {
  set_changed();
  ai_state_ = 0;
  clear_has_ai_state();
}
inline ::google::protobuf::int32 msg_battle_unit::ai_state() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.ai_state)
  return ai_state_;
}
inline void msg_battle_unit::set_ai_state(::google::protobuf::int32 value) {
  set_changed();
  set_has_ai_state();
  ai_state_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.ai_state)
}

// optional int32 nextPoint_x = 203;
inline bool msg_battle_unit::has_nextpoint_x() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void msg_battle_unit::set_has_nextpoint_x() {
  _has_bits_[0] |= 0x20000000u;
}
inline void msg_battle_unit::clear_has_nextpoint_x() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void msg_battle_unit::clear_nextpoint_x() {
  set_changed();
  nextpoint_x_ = 0;
  clear_has_nextpoint_x();
}
inline ::google::protobuf::int32 msg_battle_unit::nextpoint_x() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.nextPoint_x)
  return nextpoint_x_;
}
inline void msg_battle_unit::set_nextpoint_x(::google::protobuf::int32 value) {
  set_changed();
  set_has_nextpoint_x();
  nextpoint_x_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.nextPoint_x)
}

// optional int32 nextPoint_y = 204;
inline bool msg_battle_unit::has_nextpoint_y() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void msg_battle_unit::set_has_nextpoint_y() {
  _has_bits_[0] |= 0x40000000u;
}
inline void msg_battle_unit::clear_has_nextpoint_y() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void msg_battle_unit::clear_nextpoint_y() {
  set_changed();
  nextpoint_y_ = 0;
  clear_has_nextpoint_y();
}
inline ::google::protobuf::int32 msg_battle_unit::nextpoint_y() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.nextPoint_y)
  return nextpoint_y_;
}
inline void msg_battle_unit::set_nextpoint_y(::google::protobuf::int32 value) {
  set_changed();
  set_has_nextpoint_y();
  nextpoint_y_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.nextPoint_y)
}

// optional int32 totalZhen = 205;
inline bool msg_battle_unit::has_totalzhen() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void msg_battle_unit::set_has_totalzhen() {
  _has_bits_[0] |= 0x80000000u;
}
inline void msg_battle_unit::clear_has_totalzhen() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void msg_battle_unit::clear_totalzhen() {
  set_changed();
  totalzhen_ = 0;
  clear_has_totalzhen();
}
inline ::google::protobuf::int32 msg_battle_unit::totalzhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_unit.totalZhen)
  return totalzhen_;
}
inline void msg_battle_unit::set_totalzhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_totalzhen();
  totalzhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_unit.totalZhen)
}

// -------------------------------------------------------------------

// msg_battle_boss

// required .protocol.game.msg_battle_unit unit = 1;
inline bool msg_battle_boss::has_unit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_boss::set_has_unit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_boss::clear_has_unit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_boss::clear_unit() {
  if (unit_ != NULL) unit_->Clear();
  clear_has_unit();
}
inline const ::protocol::game::msg_battle_unit& msg_battle_boss::_internal_unit() const {
  return *unit_;
}
inline const ::protocol::game::msg_battle_unit& msg_battle_boss::unit() const {
  const ::protocol::game::msg_battle_unit* p = unit_;
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_boss.unit)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_battle_unit*>(
      &::protocol::game::_msg_battle_unit_default_instance_);
}
inline ::protocol::game::msg_battle_unit* msg_battle_boss::release_unit() {
  // @@protoc_insertion_point(field_release:protocol.game.msg_battle_boss.unit)
  clear_has_unit();
  ::protocol::game::msg_battle_unit* temp = unit_;
  unit_ = NULL;
  return temp;
}
inline ::protocol::game::msg_battle_unit* msg_battle_boss::mutable_unit() {
  set_has_unit();
  if (unit_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_battle_unit>(GetArenaNoVirtual());
    unit_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_boss.unit)
  return unit_;
}
inline void msg_battle_boss::set_allocated_unit(::protocol::game::msg_battle_unit* unit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete unit_;
  }
  if (unit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unit, submessage_arena);
    }
    set_has_unit();
  } else {
    clear_has_unit();
  }
  unit_ = unit;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_battle_boss.unit)
}

// optional int32 attack_state = 2;
inline bool msg_battle_boss::has_attack_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_boss::set_has_attack_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_boss::clear_has_attack_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_boss::clear_attack_state() {
  set_changed();
  attack_state_ = 0;
  clear_has_attack_state();
}
inline ::google::protobuf::int32 msg_battle_boss::attack_state() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_boss.attack_state)
  return attack_state_;
}
inline void msg_battle_boss::set_attack_state(::google::protobuf::int32 value) {
  set_changed();
  set_has_attack_state();
  attack_state_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_boss.attack_state)
}

// optional int32 attackZhen = 3;
inline bool msg_battle_boss::has_attackzhen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_battle_boss::set_has_attackzhen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_battle_boss::clear_has_attackzhen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_battle_boss::clear_attackzhen() {
  set_changed();
  attackzhen_ = 0;
  clear_has_attackzhen();
}
inline ::google::protobuf::int32 msg_battle_boss::attackzhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_boss.attackZhen)
  return attackzhen_;
}
inline void msg_battle_boss::set_attackzhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_attackzhen();
  attackzhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_boss.attackZhen)
}

// optional int32 boss_birth_time = 4;
inline bool msg_battle_boss::has_boss_birth_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_battle_boss::set_has_boss_birth_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_battle_boss::clear_has_boss_birth_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_battle_boss::clear_boss_birth_time() {
  set_changed();
  boss_birth_time_ = 0;
  clear_has_boss_birth_time();
}
inline ::google::protobuf::int32 msg_battle_boss::boss_birth_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_boss.boss_birth_time)
  return boss_birth_time_;
}
inline void msg_battle_boss::set_boss_birth_time(::google::protobuf::int32 value) {
  set_changed();
  set_has_boss_birth_time();
  boss_birth_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_boss.boss_birth_time)
}

// -------------------------------------------------------------------

// msg_battle_monster

// required .protocol.game.msg_battle_unit unit = 1;
inline bool msg_battle_monster::has_unit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_monster::set_has_unit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_monster::clear_has_unit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_monster::clear_unit() {
  if (unit_ != NULL) unit_->Clear();
  clear_has_unit();
}
inline const ::protocol::game::msg_battle_unit& msg_battle_monster::_internal_unit() const {
  return *unit_;
}
inline const ::protocol::game::msg_battle_unit& msg_battle_monster::unit() const {
  const ::protocol::game::msg_battle_unit* p = unit_;
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_monster.unit)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_battle_unit*>(
      &::protocol::game::_msg_battle_unit_default_instance_);
}
inline ::protocol::game::msg_battle_unit* msg_battle_monster::release_unit() {
  // @@protoc_insertion_point(field_release:protocol.game.msg_battle_monster.unit)
  clear_has_unit();
  ::protocol::game::msg_battle_unit* temp = unit_;
  unit_ = NULL;
  return temp;
}
inline ::protocol::game::msg_battle_unit* msg_battle_monster::mutable_unit() {
  set_has_unit();
  if (unit_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_battle_unit>(GetArenaNoVirtual());
    unit_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_monster.unit)
  return unit_;
}
inline void msg_battle_monster::set_allocated_unit(::protocol::game::msg_battle_unit* unit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete unit_;
  }
  if (unit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unit, submessage_arena);
    }
    set_has_unit();
  } else {
    clear_has_unit();
  }
  unit_ = unit;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_battle_monster.unit)
}

// optional int32 birth_x = 2;
inline bool msg_battle_monster::has_birth_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_battle_monster::set_has_birth_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_battle_monster::clear_has_birth_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_battle_monster::clear_birth_x() {
  set_changed();
  birth_x_ = 0;
  clear_has_birth_x();
}
inline ::google::protobuf::int32 msg_battle_monster::birth_x() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_monster.birth_x)
  return birth_x_;
}
inline void msg_battle_monster::set_birth_x(::google::protobuf::int32 value) {
  set_changed();
  set_has_birth_x();
  birth_x_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_monster.birth_x)
}

// optional int32 birth_y = 3;
inline bool msg_battle_monster::has_birth_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_battle_monster::set_has_birth_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_battle_monster::clear_has_birth_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_battle_monster::clear_birth_y() {
  set_changed();
  birth_y_ = 0;
  clear_has_birth_y();
}
inline ::google::protobuf::int32 msg_battle_monster::birth_y() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_monster.birth_y)
  return birth_y_;
}
inline void msg_battle_monster::set_birth_y(::google::protobuf::int32 value) {
  set_changed();
  set_has_birth_y();
  birth_y_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_monster.birth_y)
}

// optional string attack_guid = 4;
inline bool msg_battle_monster::has_attack_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_monster::set_has_attack_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_monster::clear_has_attack_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_monster::clear_attack_guid() {
  set_changed();
  attack_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attack_guid();
}
inline const ::std::string& msg_battle_monster::attack_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_monster.attack_guid)
  return attack_guid_.GetNoArena();
}
inline void msg_battle_monster::set_attack_guid(const ::std::string& value) {
  set_changed();
  set_has_attack_guid();
  attack_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_monster.attack_guid)
}
#if LANG_CXX11
inline void msg_battle_monster::set_attack_guid(::std::string&& value) {
  set_changed();
  set_has_attack_guid();
  attack_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_battle_monster.attack_guid)
}
#endif
inline void msg_battle_monster::set_attack_guid(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_attack_guid();
  attack_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_battle_monster.attack_guid)
}
inline void msg_battle_monster::set_attack_guid(const char* value, size_t size) {
  set_changed();
  set_has_attack_guid();
  attack_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_battle_monster.attack_guid)
}
inline ::std::string* msg_battle_monster::mutable_attack_guid() {
  set_changed();
  set_has_attack_guid();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_monster.attack_guid)
  return attack_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_battle_monster::release_attack_guid() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_battle_monster.attack_guid)
  if (!has_attack_guid()) {
    return NULL;
  }
  clear_has_attack_guid();
  return attack_guid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_battle_monster::set_allocated_attack_guid(::std::string* attack_guid) {
  set_changed();
  if (attack_guid != NULL) {
    set_has_attack_guid();
  } else {
    clear_has_attack_guid();
  }
  attack_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attack_guid);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_battle_monster.attack_guid)
}

// -------------------------------------------------------------------

// msg_battle_player

// required .protocol.game.msg_battle_unit unit = 1;
inline bool msg_battle_player::has_unit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_battle_player::set_has_unit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_battle_player::clear_has_unit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_battle_player::clear_unit() {
  if (unit_ != NULL) unit_->Clear();
  clear_has_unit();
}
inline const ::protocol::game::msg_battle_unit& msg_battle_player::_internal_unit() const {
  return *unit_;
}
inline const ::protocol::game::msg_battle_unit& msg_battle_player::unit() const {
  const ::protocol::game::msg_battle_unit* p = unit_;
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.unit)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_battle_unit*>(
      &::protocol::game::_msg_battle_unit_default_instance_);
}
inline ::protocol::game::msg_battle_unit* msg_battle_player::release_unit() {
  // @@protoc_insertion_point(field_release:protocol.game.msg_battle_player.unit)
  clear_has_unit();
  ::protocol::game::msg_battle_unit* temp = unit_;
  unit_ = NULL;
  return temp;
}
inline ::protocol::game::msg_battle_unit* msg_battle_player::mutable_unit() {
  set_has_unit();
  if (unit_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_battle_unit>(GetArenaNoVirtual());
    unit_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_player.unit)
  return unit_;
}
inline void msg_battle_player::set_allocated_unit(::protocol::game::msg_battle_unit* unit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete unit_;
  }
  if (unit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unit, submessage_arena);
    }
    set_has_unit();
  } else {
    clear_has_unit();
  }
  unit_ = unit;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_battle_player.unit)
}

// optional string name = 2;
inline bool msg_battle_player::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_player::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_player::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_player::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& msg_battle_player::name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.name)
  return name_.GetNoArena();
}
inline void msg_battle_player::set_name(const ::std::string& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.name)
}
#if LANG_CXX11
inline void msg_battle_player::set_name(::std::string&& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_battle_player.name)
}
#endif
inline void msg_battle_player::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_battle_player.name)
}
inline void msg_battle_player::set_name(const char* value, size_t size) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_battle_player.name)
}
inline ::std::string* msg_battle_player::mutable_name() {
  set_changed();
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_player.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_battle_player::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_battle_player.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_battle_player::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_battle_player.name)
}

// optional int32 sex = 3;
inline bool msg_battle_player::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_battle_player::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_battle_player::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_battle_player::clear_sex() {
  set_changed();
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 msg_battle_player::sex() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.sex)
  return sex_;
}
inline void msg_battle_player::set_sex(::google::protobuf::int32 value) {
  set_changed();
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.sex)
}

// optional int32 role_level = 4;
inline bool msg_battle_player::has_role_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_battle_player::set_has_role_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_battle_player::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_battle_player::clear_role_level() {
  set_changed();
  role_level_ = 0;
  clear_has_role_level();
}
inline ::google::protobuf::int32 msg_battle_player::role_level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.role_level)
  return role_level_;
}
inline void msg_battle_player::set_role_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_role_level();
  role_level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.role_level)
}

// optional int32 camp = 5;
inline bool msg_battle_player::has_camp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_battle_player::set_has_camp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_battle_player::clear_has_camp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_battle_player::clear_camp() {
  set_changed();
  camp_ = 0;
  clear_has_camp();
}
inline ::google::protobuf::int32 msg_battle_player::camp() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.camp)
  return camp_;
}
inline void msg_battle_player::set_camp(::google::protobuf::int32 value) {
  set_changed();
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.camp)
}

// repeated int32 attr_type = 6;
inline int msg_battle_player::attr_type_size() const {
  return attr_type_.size();
}
inline void msg_battle_player::clear_attr_type() {
  set_changed();
  attr_type_.Clear();
}
inline ::google::protobuf::int32 msg_battle_player::attr_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.attr_type)
  return attr_type_.Get(index);
}
inline void msg_battle_player::set_attr_type(int index, ::google::protobuf::int32 value) {
  set_changed();
  attr_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.attr_type)
}
inline void msg_battle_player::add_attr_type(::google::protobuf::int32 value) {
  set_changed();
  attr_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_player.attr_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_player::attr_type() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_player.attr_type)
  return attr_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_player::mutable_attr_type() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_player.attr_type)
  return &attr_type_;
}

// repeated int32 attr_param1 = 7;
inline int msg_battle_player::attr_param1_size() const {
  return attr_param1_.size();
}
inline void msg_battle_player::clear_attr_param1() {
  set_changed();
  attr_param1_.Clear();
}
inline ::google::protobuf::int32 msg_battle_player::attr_param1(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.attr_param1)
  return attr_param1_.Get(index);
}
inline void msg_battle_player::set_attr_param1(int index, ::google::protobuf::int32 value) {
  set_changed();
  attr_param1_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.attr_param1)
}
inline void msg_battle_player::add_attr_param1(::google::protobuf::int32 value) {
  set_changed();
  attr_param1_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_player.attr_param1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_player::attr_param1() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_player.attr_param1)
  return attr_param1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_player::mutable_attr_param1() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_player.attr_param1)
  return &attr_param1_;
}

// repeated int32 attr_param2 = 8;
inline int msg_battle_player::attr_param2_size() const {
  return attr_param2_.size();
}
inline void msg_battle_player::clear_attr_param2() {
  set_changed();
  attr_param2_.Clear();
}
inline ::google::protobuf::int32 msg_battle_player::attr_param2(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.attr_param2)
  return attr_param2_.Get(index);
}
inline void msg_battle_player::set_attr_param2(int index, ::google::protobuf::int32 value) {
  set_changed();
  attr_param2_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.attr_param2)
}
inline void msg_battle_player::add_attr_param2(::google::protobuf::int32 value) {
  set_changed();
  attr_param2_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_player.attr_param2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_player::attr_param2() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_player.attr_param2)
  return attr_param2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_player::mutable_attr_param2() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_player.attr_param2)
  return &attr_param2_;
}

// repeated int32 attr_param3 = 9;
inline int msg_battle_player::attr_param3_size() const {
  return attr_param3_.size();
}
inline void msg_battle_player::clear_attr_param3() {
  set_changed();
  attr_param3_.Clear();
}
inline ::google::protobuf::int32 msg_battle_player::attr_param3(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.attr_param3)
  return attr_param3_.Get(index);
}
inline void msg_battle_player::set_attr_param3(int index, ::google::protobuf::int32 value) {
  set_changed();
  attr_param3_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.attr_param3)
}
inline void msg_battle_player::add_attr_param3(::google::protobuf::int32 value) {
  set_changed();
  attr_param3_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_player.attr_param3)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_player::attr_param3() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_player.attr_param3)
  return attr_param3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_player::mutable_attr_param3() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_player.attr_param3)
  return &attr_param3_;
}

// optional int32 avatar = 10;
inline bool msg_battle_player::has_avatar() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void msg_battle_player::set_has_avatar() {
  _has_bits_[0] |= 0x00000040u;
}
inline void msg_battle_player::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void msg_battle_player::clear_avatar() {
  set_changed();
  avatar_ = 0;
  clear_has_avatar();
}
inline ::google::protobuf::int32 msg_battle_player::avatar() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.avatar)
  return avatar_;
}
inline void msg_battle_player::set_avatar(::google::protobuf::int32 value) {
  set_changed();
  set_has_avatar();
  avatar_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.avatar)
}

// optional int32 cup = 12;
inline bool msg_battle_player::has_cup() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void msg_battle_player::set_has_cup() {
  _has_bits_[0] |= 0x00000080u;
}
inline void msg_battle_player::clear_has_cup() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void msg_battle_player::clear_cup() {
  set_changed();
  cup_ = 0;
  clear_has_cup();
}
inline ::google::protobuf::int32 msg_battle_player::cup() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.cup)
  return cup_;
}
inline void msg_battle_player::set_cup(::google::protobuf::int32 value) {
  set_changed();
  set_has_cup();
  cup_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.cup)
}

// optional int32 toukuang = 13;
inline bool msg_battle_player::has_toukuang() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void msg_battle_player::set_has_toukuang() {
  _has_bits_[0] |= 0x00000100u;
}
inline void msg_battle_player::clear_has_toukuang() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void msg_battle_player::clear_toukuang() {
  set_changed();
  toukuang_ = 0;
  clear_has_toukuang();
}
inline ::google::protobuf::int32 msg_battle_player::toukuang() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.toukuang)
  return toukuang_;
}
inline void msg_battle_player::set_toukuang(::google::protobuf::int32 value) {
  set_changed();
  set_has_toukuang();
  toukuang_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.toukuang)
}

// repeated int32 fashion = 14;
inline int msg_battle_player::fashion_size() const {
  return fashion_.size();
}
inline void msg_battle_player::clear_fashion() {
  set_changed();
  fashion_.Clear();
}
inline ::google::protobuf::int32 msg_battle_player::fashion(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.fashion)
  return fashion_.Get(index);
}
inline void msg_battle_player::set_fashion(int index, ::google::protobuf::int32 value) {
  set_changed();
  fashion_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.fashion)
}
inline void msg_battle_player::add_fashion(::google::protobuf::int32 value) {
  set_changed();
  fashion_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_player.fashion)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_player::fashion() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_player.fashion)
  return fashion_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_player::mutable_fashion() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_player.fashion)
  return &fashion_;
}

// optional int32 region_id = 15;
inline bool msg_battle_player::has_region_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void msg_battle_player::set_has_region_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void msg_battle_player::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void msg_battle_player::clear_region_id() {
  set_changed();
  region_id_ = 0;
  clear_has_region_id();
}
inline ::google::protobuf::int32 msg_battle_player::region_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.region_id)
  return region_id_;
}
inline void msg_battle_player::set_region_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_region_id();
  region_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.region_id)
}

// optional int32 name_color = 16;
inline bool msg_battle_player::has_name_color() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void msg_battle_player::set_has_name_color() {
  _has_bits_[0] |= 0x00000400u;
}
inline void msg_battle_player::clear_has_name_color() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void msg_battle_player::clear_name_color() {
  set_changed();
  name_color_ = 0;
  clear_has_name_color();
}
inline ::google::protobuf::int32 msg_battle_player::name_color() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.name_color)
  return name_color_;
}
inline void msg_battle_player::set_name_color(::google::protobuf::int32 value) {
  set_changed();
  set_has_name_color();
  name_color_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.name_color)
}

// optional int32 level = 30;
inline bool msg_battle_player::has_level() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void msg_battle_player::set_has_level() {
  _has_bits_[0] |= 0x00000800u;
}
inline void msg_battle_player::clear_has_level() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void msg_battle_player::clear_level() {
  set_changed();
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 msg_battle_player::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.level)
  return level_;
}
inline void msg_battle_player::set_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.level)
}

// optional int32 exp = 31;
inline bool msg_battle_player::has_exp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void msg_battle_player::set_has_exp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void msg_battle_player::clear_has_exp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void msg_battle_player::clear_exp() {
  set_changed();
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 msg_battle_player::exp() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.exp)
  return exp_;
}
inline void msg_battle_player::set_exp(::google::protobuf::int32 value) {
  set_changed();
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.exp)
}

// optional int32 score = 32;
inline bool msg_battle_player::has_score() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void msg_battle_player::set_has_score() {
  _has_bits_[0] |= 0x00002000u;
}
inline void msg_battle_player::clear_has_score() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void msg_battle_player::clear_score() {
  set_changed();
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 msg_battle_player::score() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.score)
  return score_;
}
inline void msg_battle_player::set_score(::google::protobuf::int32 value) {
  set_changed();
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.score)
}

// optional int32 score_level = 33;
inline bool msg_battle_player::has_score_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void msg_battle_player::set_has_score_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void msg_battle_player::clear_has_score_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void msg_battle_player::clear_score_level() {
  set_changed();
  score_level_ = 0;
  clear_has_score_level();
}
inline ::google::protobuf::int32 msg_battle_player::score_level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.score_level)
  return score_level_;
}
inline void msg_battle_player::set_score_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_score_level();
  score_level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.score_level)
}

// repeated int32 lattr_value = 34;
inline int msg_battle_player::lattr_value_size() const {
  return lattr_value_.size();
}
inline void msg_battle_player::clear_lattr_value() {
  set_changed();
  lattr_value_.Clear();
}
inline ::google::protobuf::int32 msg_battle_player::lattr_value(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.lattr_value)
  return lattr_value_.Get(index);
}
inline void msg_battle_player::set_lattr_value(int index, ::google::protobuf::int32 value) {
  set_changed();
  lattr_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.lattr_value)
}
inline void msg_battle_player::add_lattr_value(::google::protobuf::int32 value) {
  set_changed();
  lattr_value_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_player.lattr_value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_player::lattr_value() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_player.lattr_value)
  return lattr_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_player::mutable_lattr_value() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_player.lattr_value)
  return &lattr_value_;
}

// repeated int32 talent_id = 35;
inline int msg_battle_player::talent_id_size() const {
  return talent_id_.size();
}
inline void msg_battle_player::clear_talent_id() {
  set_changed();
  talent_id_.Clear();
}
inline ::google::protobuf::int32 msg_battle_player::talent_id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.talent_id)
  return talent_id_.Get(index);
}
inline void msg_battle_player::set_talent_id(int index, ::google::protobuf::int32 value) {
  set_changed();
  talent_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.talent_id)
}
inline void msg_battle_player::add_talent_id(::google::protobuf::int32 value) {
  set_changed();
  talent_id_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_player.talent_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_player::talent_id() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_player.talent_id)
  return talent_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_player::mutable_talent_id() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_player.talent_id)
  return &talent_id_;
}

// repeated int32 talent_level = 36;
inline int msg_battle_player::talent_level_size() const {
  return talent_level_.size();
}
inline void msg_battle_player::clear_talent_level() {
  set_changed();
  talent_level_.Clear();
}
inline ::google::protobuf::int32 msg_battle_player::talent_level(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.talent_level)
  return talent_level_.Get(index);
}
inline void msg_battle_player::set_talent_level(int index, ::google::protobuf::int32 value) {
  set_changed();
  talent_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.talent_level)
}
inline void msg_battle_player::add_talent_level(::google::protobuf::int32 value) {
  set_changed();
  talent_level_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_player.talent_level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_player::talent_level() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_player.talent_level)
  return talent_level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_player::mutable_talent_level() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_player.talent_level)
  return &talent_level_;
}

// optional int32 talent_point = 37;
inline bool msg_battle_player::has_talent_point() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void msg_battle_player::set_has_talent_point() {
  _has_bits_[0] |= 0x00008000u;
}
inline void msg_battle_player::clear_has_talent_point() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void msg_battle_player::clear_talent_point() {
  set_changed();
  talent_point_ = 0;
  clear_has_talent_point();
}
inline ::google::protobuf::int32 msg_battle_player::talent_point() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.talent_point)
  return talent_point_;
}
inline void msg_battle_player::set_talent_point(::google::protobuf::int32 value) {
  set_changed();
  set_has_talent_point();
  talent_point_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.talent_point)
}

// optional int32 die = 38;
inline bool msg_battle_player::has_die() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void msg_battle_player::set_has_die() {
  _has_bits_[0] |= 0x00010000u;
}
inline void msg_battle_player::clear_has_die() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void msg_battle_player::clear_die() {
  set_changed();
  die_ = 0;
  clear_has_die();
}
inline ::google::protobuf::int32 msg_battle_player::die() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.die)
  return die_;
}
inline void msg_battle_player::set_die(::google::protobuf::int32 value) {
  set_changed();
  set_has_die();
  die_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.die)
}

// optional int32 sha = 39;
inline bool msg_battle_player::has_sha() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void msg_battle_player::set_has_sha() {
  _has_bits_[0] |= 0x00020000u;
}
inline void msg_battle_player::clear_has_sha() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void msg_battle_player::clear_sha() {
  set_changed();
  sha_ = 0;
  clear_has_sha();
}
inline ::google::protobuf::int32 msg_battle_player::sha() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.sha)
  return sha_;
}
inline void msg_battle_player::set_sha(::google::protobuf::int32 value) {
  set_changed();
  set_has_sha();
  sha_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.sha)
}

// optional int32 lsha = 40;
inline bool msg_battle_player::has_lsha() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void msg_battle_player::set_has_lsha() {
  _has_bits_[0] |= 0x00040000u;
}
inline void msg_battle_player::clear_has_lsha() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void msg_battle_player::clear_lsha() {
  set_changed();
  lsha_ = 0;
  clear_has_lsha();
}
inline ::google::protobuf::int32 msg_battle_player::lsha() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.lsha)
  return lsha_;
}
inline void msg_battle_player::set_lsha(::google::protobuf::int32 value) {
  set_changed();
  set_has_lsha();
  lsha_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.lsha)
}

// optional int32 max_lsha = 41;
inline bool msg_battle_player::has_max_lsha() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void msg_battle_player::set_has_max_lsha() {
  _has_bits_[0] |= 0x00100000u;
}
inline void msg_battle_player::clear_has_max_lsha() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void msg_battle_player::clear_max_lsha() {
  set_changed();
  max_lsha_ = 0;
  clear_has_max_lsha();
}
inline ::google::protobuf::int32 msg_battle_player::max_lsha() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.max_lsha)
  return max_lsha_;
}
inline void msg_battle_player::set_max_lsha(::google::protobuf::int32 value) {
  set_changed();
  set_has_max_lsha();
  max_lsha_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.max_lsha)
}

// optional int32 skill_id = 50;
inline bool msg_battle_player::has_skill_id() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void msg_battle_player::set_has_skill_id() {
  _has_bits_[0] |= 0x00200000u;
}
inline void msg_battle_player::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void msg_battle_player::clear_skill_id() {
  set_changed();
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 msg_battle_player::skill_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.skill_id)
  return skill_id_;
}
inline void msg_battle_player::set_skill_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.skill_id)
}

// optional int32 skill_level = 51;
inline bool msg_battle_player::has_skill_level() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void msg_battle_player::set_has_skill_level() {
  _has_bits_[0] |= 0x00400000u;
}
inline void msg_battle_player::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void msg_battle_player::clear_skill_level() {
  set_changed();
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 msg_battle_player::skill_level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.skill_level)
  return skill_level_;
}
inline void msg_battle_player::set_skill_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.skill_level)
}

// optional int32 re_pre = 52;
inline bool msg_battle_player::has_re_pre() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void msg_battle_player::set_has_re_pre() {
  _has_bits_[0] |= 0x00800000u;
}
inline void msg_battle_player::clear_has_re_pre() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void msg_battle_player::clear_re_pre() {
  set_changed();
  re_pre_ = 0;
  clear_has_re_pre();
}
inline ::google::protobuf::int32 msg_battle_player::re_pre() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.re_pre)
  return re_pre_;
}
inline void msg_battle_player::set_re_pre(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_pre();
  re_pre_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.re_pre)
}

// optional int32 re_pre_zhen = 53;
inline bool msg_battle_player::has_re_pre_zhen() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void msg_battle_player::set_has_re_pre_zhen() {
  _has_bits_[0] |= 0x01000000u;
}
inline void msg_battle_player::clear_has_re_pre_zhen() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void msg_battle_player::clear_re_pre_zhen() {
  set_changed();
  re_pre_zhen_ = 0;
  clear_has_re_pre_zhen();
}
inline ::google::protobuf::int32 msg_battle_player::re_pre_zhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.re_pre_zhen)
  return re_pre_zhen_;
}
inline void msg_battle_player::set_re_pre_zhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_pre_zhen();
  re_pre_zhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.re_pre_zhen)
}

// optional int32 re_pre_zhen1 = 54;
inline bool msg_battle_player::has_re_pre_zhen1() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void msg_battle_player::set_has_re_pre_zhen1() {
  _has_bits_[0] |= 0x02000000u;
}
inline void msg_battle_player::clear_has_re_pre_zhen1() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void msg_battle_player::clear_re_pre_zhen1() {
  set_changed();
  re_pre_zhen1_ = 0;
  clear_has_re_pre_zhen1();
}
inline ::google::protobuf::int32 msg_battle_player::re_pre_zhen1() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.re_pre_zhen1)
  return re_pre_zhen1_;
}
inline void msg_battle_player::set_re_pre_zhen1(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_pre_zhen1();
  re_pre_zhen1_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.re_pre_zhen1)
}

// optional int32 xueren_zhen = 55;
inline bool msg_battle_player::has_xueren_zhen() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void msg_battle_player::set_has_xueren_zhen() {
  _has_bits_[0] |= 0x04000000u;
}
inline void msg_battle_player::clear_has_xueren_zhen() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void msg_battle_player::clear_xueren_zhen() {
  set_changed();
  xueren_zhen_ = 0;
  clear_has_xueren_zhen();
}
inline ::google::protobuf::int32 msg_battle_player::xueren_zhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.xueren_zhen)
  return xueren_zhen_;
}
inline void msg_battle_player::set_xueren_zhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_xueren_zhen();
  xueren_zhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.xueren_zhen)
}

// optional bool is_xueren = 56;
inline bool msg_battle_player::has_is_xueren() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void msg_battle_player::set_has_is_xueren() {
  _has_bits_[0] |= 0x08000000u;
}
inline void msg_battle_player::clear_has_is_xueren() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void msg_battle_player::clear_is_xueren() {
  set_changed();
  is_xueren_ = false;
  clear_has_is_xueren();
}
inline bool msg_battle_player::is_xueren() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.is_xueren)
  return is_xueren_;
}
inline void msg_battle_player::set_is_xueren(bool value) {
  set_changed();
  set_has_is_xueren();
  is_xueren_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.is_xueren)
}

// optional int32 cost = 57;
inline bool msg_battle_player::has_cost() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void msg_battle_player::set_has_cost() {
  _has_bits_[0] |= 0x10000000u;
}
inline void msg_battle_player::clear_has_cost() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void msg_battle_player::clear_cost() {
  set_changed();
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 msg_battle_player::cost() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.cost)
  return cost_;
}
inline void msg_battle_player::set_cost(::google::protobuf::int32 value) {
  set_changed();
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.cost)
}

// optional int32 attack_state = 100;
inline bool msg_battle_player::has_attack_state() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void msg_battle_player::set_has_attack_state() {
  _has_bits_[0] |= 0x20000000u;
}
inline void msg_battle_player::clear_has_attack_state() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void msg_battle_player::clear_attack_state() {
  set_changed();
  attack_state_ = 0;
  clear_has_attack_state();
}
inline ::google::protobuf::int32 msg_battle_player::attack_state() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.attack_state)
  return attack_state_;
}
inline void msg_battle_player::set_attack_state(::google::protobuf::int32 value) {
  set_changed();
  set_has_attack_state();
  attack_state_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.attack_state)
}

// optional int32 attackZhen = 101;
inline bool msg_battle_player::has_attackzhen() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void msg_battle_player::set_has_attackzhen() {
  _has_bits_[0] |= 0x40000000u;
}
inline void msg_battle_player::clear_has_attackzhen() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void msg_battle_player::clear_attackzhen() {
  set_changed();
  attackzhen_ = 0;
  clear_has_attackzhen();
}
inline ::google::protobuf::int32 msg_battle_player::attackzhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.attackZhen)
  return attackzhen_;
}
inline void msg_battle_player::set_attackzhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_attackzhen();
  attackzhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.attackZhen)
}

// optional int32 birth_x = 102;
inline bool msg_battle_player::has_birth_x() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void msg_battle_player::set_has_birth_x() {
  _has_bits_[0] |= 0x80000000u;
}
inline void msg_battle_player::clear_has_birth_x() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void msg_battle_player::clear_birth_x() {
  set_changed();
  birth_x_ = 0;
  clear_has_birth_x();
}
inline ::google::protobuf::int32 msg_battle_player::birth_x() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.birth_x)
  return birth_x_;
}
inline void msg_battle_player::set_birth_x(::google::protobuf::int32 value) {
  set_changed();
  set_has_birth_x();
  birth_x_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.birth_x)
}

// optional int32 birth_y = 103;
inline bool msg_battle_player::has_birth_y() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void msg_battle_player::set_has_birth_y() {
  _has_bits_[0] |= 0x00080000u;
}
inline void msg_battle_player::clear_has_birth_y() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void msg_battle_player::clear_birth_y() {
  set_changed();
  birth_y_ = 0;
  clear_has_birth_y();
}
inline ::google::protobuf::int32 msg_battle_player::birth_y() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.birth_y)
  return birth_y_;
}
inline void msg_battle_player::set_birth_y(::google::protobuf::int32 value) {
  set_changed();
  set_has_birth_y();
  birth_y_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.birth_y)
}

// optional string attack_guid = 104;
inline bool msg_battle_player::has_attack_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_player::set_has_attack_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_player::clear_has_attack_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_player::clear_attack_guid() {
  set_changed();
  attack_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attack_guid();
}
inline const ::std::string& msg_battle_player::attack_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_player.attack_guid)
  return attack_guid_.GetNoArena();
}
inline void msg_battle_player::set_attack_guid(const ::std::string& value) {
  set_changed();
  set_has_attack_guid();
  attack_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_player.attack_guid)
}
#if LANG_CXX11
inline void msg_battle_player::set_attack_guid(::std::string&& value) {
  set_changed();
  set_has_attack_guid();
  attack_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_battle_player.attack_guid)
}
#endif
inline void msg_battle_player::set_attack_guid(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_attack_guid();
  attack_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_battle_player.attack_guid)
}
inline void msg_battle_player::set_attack_guid(const char* value, size_t size) {
  set_changed();
  set_has_attack_guid();
  attack_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_battle_player.attack_guid)
}
inline ::std::string* msg_battle_player::mutable_attack_guid() {
  set_changed();
  set_has_attack_guid();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_player.attack_guid)
  return attack_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_battle_player::release_attack_guid() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_battle_player.attack_guid)
  if (!has_attack_guid()) {
    return NULL;
  }
  clear_has_attack_guid();
  return attack_guid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_battle_player::set_allocated_attack_guid(::std::string* attack_guid) {
  set_changed();
  if (attack_guid != NULL) {
    set_has_attack_guid();
  } else {
    clear_has_attack_guid();
  }
  attack_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attack_guid);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_battle_player.attack_guid)
}

// -------------------------------------------------------------------

// msg_battle_effect

// required int32 tid = 1;
inline bool msg_battle_effect::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_battle_effect::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_battle_effect::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_battle_effect::clear_tid() {
  set_changed();
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 msg_battle_effect::tid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.tid)
  return tid_;
}
inline void msg_battle_effect::set_tid(::google::protobuf::int32 value) {
  set_changed();
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.tid)
}

// optional int32 re_tid = 2;
inline bool msg_battle_effect::has_re_tid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_battle_effect::set_has_re_tid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_battle_effect::clear_has_re_tid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_battle_effect::clear_re_tid() {
  set_changed();
  re_tid_ = 0;
  clear_has_re_tid();
}
inline ::google::protobuf::int32 msg_battle_effect::re_tid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.re_tid)
  return re_tid_;
}
inline void msg_battle_effect::set_re_tid(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_tid();
  re_tid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.re_tid)
}

// optional int32 id = 3;
inline bool msg_battle_effect::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_battle_effect::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_battle_effect::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_battle_effect::clear_id() {
  set_changed();
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 msg_battle_effect::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.id)
  return id_;
}
inline void msg_battle_effect::set_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.id)
}

// optional int32 sx = 4;
inline bool msg_battle_effect::has_sx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_battle_effect::set_has_sx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_battle_effect::clear_has_sx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_battle_effect::clear_sx() {
  set_changed();
  sx_ = 0;
  clear_has_sx();
}
inline ::google::protobuf::int32 msg_battle_effect::sx() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.sx)
  return sx_;
}
inline void msg_battle_effect::set_sx(::google::protobuf::int32 value) {
  set_changed();
  set_has_sx();
  sx_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.sx)
}

// optional int32 sy = 5;
inline bool msg_battle_effect::has_sy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void msg_battle_effect::set_has_sy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void msg_battle_effect::clear_has_sy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void msg_battle_effect::clear_sy() {
  set_changed();
  sy_ = 0;
  clear_has_sy();
}
inline ::google::protobuf::int32 msg_battle_effect::sy() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.sy)
  return sy_;
}
inline void msg_battle_effect::set_sy(::google::protobuf::int32 value) {
  set_changed();
  set_has_sy();
  sy_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.sy)
}

// optional int32 x = 6;
inline bool msg_battle_effect::has_x() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void msg_battle_effect::set_has_x() {
  _has_bits_[0] |= 0x00000080u;
}
inline void msg_battle_effect::clear_has_x() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void msg_battle_effect::clear_x() {
  set_changed();
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 msg_battle_effect::x() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.x)
  return x_;
}
inline void msg_battle_effect::set_x(::google::protobuf::int32 value) {
  set_changed();
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.x)
}

// optional int32 y = 7;
inline bool msg_battle_effect::has_y() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void msg_battle_effect::set_has_y() {
  _has_bits_[0] |= 0x00000100u;
}
inline void msg_battle_effect::clear_has_y() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void msg_battle_effect::clear_y() {
  set_changed();
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 msg_battle_effect::y() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.y)
  return y_;
}
inline void msg_battle_effect::set_y(::google::protobuf::int32 value) {
  set_changed();
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.y)
}

// optional int32 xx = 8;
inline bool msg_battle_effect::has_xx() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void msg_battle_effect::set_has_xx() {
  _has_bits_[0] |= 0x00000200u;
}
inline void msg_battle_effect::clear_has_xx() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void msg_battle_effect::clear_xx() {
  set_changed();
  xx_ = 0;
  clear_has_xx();
}
inline ::google::protobuf::int32 msg_battle_effect::xx() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.xx)
  return xx_;
}
inline void msg_battle_effect::set_xx(::google::protobuf::int32 value) {
  set_changed();
  set_has_xx();
  xx_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.xx)
}

// optional int32 yy = 9;
inline bool msg_battle_effect::has_yy() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void msg_battle_effect::set_has_yy() {
  _has_bits_[0] |= 0x00000400u;
}
inline void msg_battle_effect::clear_has_yy() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void msg_battle_effect::clear_yy() {
  set_changed();
  yy_ = 0;
  clear_has_yy();
}
inline ::google::protobuf::int32 msg_battle_effect::yy() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.yy)
  return yy_;
}
inline void msg_battle_effect::set_yy(::google::protobuf::int32 value) {
  set_changed();
  set_has_yy();
  yy_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.yy)
}

// optional int32 r = 10;
inline bool msg_battle_effect::has_r() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void msg_battle_effect::set_has_r() {
  _has_bits_[0] |= 0x00000800u;
}
inline void msg_battle_effect::clear_has_r() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void msg_battle_effect::clear_r() {
  set_changed();
  r_ = 0;
  clear_has_r();
}
inline ::google::protobuf::int32 msg_battle_effect::r() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.r)
  return r_;
}
inline void msg_battle_effect::set_r(::google::protobuf::int32 value) {
  set_changed();
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.r)
}

// optional string re_guid = 12;
inline bool msg_battle_effect::has_re_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_effect::set_has_re_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_effect::clear_has_re_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_effect::clear_re_guid() {
  set_changed();
  re_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_re_guid();
}
inline const ::std::string& msg_battle_effect::re_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.re_guid)
  return re_guid_.GetNoArena();
}
inline void msg_battle_effect::set_re_guid(const ::std::string& value) {
  set_changed();
  set_has_re_guid();
  re_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.re_guid)
}
#if LANG_CXX11
inline void msg_battle_effect::set_re_guid(::std::string&& value) {
  set_changed();
  set_has_re_guid();
  re_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_battle_effect.re_guid)
}
#endif
inline void msg_battle_effect::set_re_guid(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_re_guid();
  re_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_battle_effect.re_guid)
}
inline void msg_battle_effect::set_re_guid(const char* value, size_t size) {
  set_changed();
  set_has_re_guid();
  re_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_battle_effect.re_guid)
}
inline ::std::string* msg_battle_effect::mutable_re_guid() {
  set_changed();
  set_has_re_guid();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_effect.re_guid)
  return re_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_battle_effect::release_re_guid() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_battle_effect.re_guid)
  if (!has_re_guid()) {
    return NULL;
  }
  clear_has_re_guid();
  return re_guid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_battle_effect::set_allocated_re_guid(::std::string* re_guid) {
  set_changed();
  if (re_guid != NULL) {
    set_has_re_guid();
  } else {
    clear_has_re_guid();
  }
  re_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), re_guid);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_battle_effect.re_guid)
}

// optional int32 re_ur = 13;
inline bool msg_battle_effect::has_re_ur() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void msg_battle_effect::set_has_re_ur() {
  _has_bits_[0] |= 0x00001000u;
}
inline void msg_battle_effect::clear_has_re_ur() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void msg_battle_effect::clear_re_ur() {
  set_changed();
  re_ur_ = 0;
  clear_has_re_ur();
}
inline ::google::protobuf::int32 msg_battle_effect::re_ur() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.re_ur)
  return re_ur_;
}
inline void msg_battle_effect::set_re_ur(::google::protobuf::int32 value) {
  set_changed();
  set_has_re_ur();
  re_ur_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.re_ur)
}

// repeated string hit_guids = 14;
inline int msg_battle_effect::hit_guids_size() const {
  return hit_guids_.size();
}
inline void msg_battle_effect::clear_hit_guids() {
  set_changed();
  hit_guids_.Clear();
}
inline const ::std::string& msg_battle_effect::hit_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.hit_guids)
  return hit_guids_.Get(index);
}
inline ::std::string* msg_battle_effect::mutable_hit_guids(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_effect.hit_guids)
  return hit_guids_.Mutable(index);
}
inline void msg_battle_effect::set_hit_guids(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.hit_guids)
  hit_guids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void msg_battle_effect::set_hit_guids(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.hit_guids)
  hit_guids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void msg_battle_effect::set_hit_guids(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  hit_guids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_battle_effect.hit_guids)
}
inline void msg_battle_effect::set_hit_guids(int index, const char* value, size_t size) {
  set_changed();
  hit_guids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_battle_effect.hit_guids)
}
inline ::std::string* msg_battle_effect::add_hit_guids() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.msg_battle_effect.hit_guids)
  return hit_guids_.Add();
}
inline void msg_battle_effect::add_hit_guids(const ::std::string& value) {
  set_changed();
  hit_guids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_effect.hit_guids)
}
#if LANG_CXX11
inline void msg_battle_effect::add_hit_guids(::std::string&& value) {
  set_changed();
  hit_guids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_effect.hit_guids)
}
#endif
inline void msg_battle_effect::add_hit_guids(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  hit_guids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.msg_battle_effect.hit_guids)
}
inline void msg_battle_effect::add_hit_guids(const char* value, size_t size) {
  set_changed();
  hit_guids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.msg_battle_effect.hit_guids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
msg_battle_effect::hit_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_effect.hit_guids)
  return hit_guids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
msg_battle_effect::mutable_hit_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_effect.hit_guids)
  return &hit_guids_;
}

// optional int32 time = 15;
inline bool msg_battle_effect::has_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void msg_battle_effect::set_has_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void msg_battle_effect::clear_has_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void msg_battle_effect::clear_time() {
  set_changed();
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 msg_battle_effect::time() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.time)
  return time_;
}
inline void msg_battle_effect::set_time(::google::protobuf::int32 value) {
  set_changed();
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.time)
}

// optional int32 dd_time = 16;
inline bool msg_battle_effect::has_dd_time() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void msg_battle_effect::set_has_dd_time() {
  _has_bits_[0] |= 0x00004000u;
}
inline void msg_battle_effect::clear_has_dd_time() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void msg_battle_effect::clear_dd_time() {
  set_changed();
  dd_time_ = 0;
  clear_has_dd_time();
}
inline ::google::protobuf::int32 msg_battle_effect::dd_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.dd_time)
  return dd_time_;
}
inline void msg_battle_effect::set_dd_time(::google::protobuf::int32 value) {
  set_changed();
  set_has_dd_time();
  dd_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.dd_time)
}

// optional int32 state = 17;
inline bool msg_battle_effect::has_state() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void msg_battle_effect::set_has_state() {
  _has_bits_[0] |= 0x00008000u;
}
inline void msg_battle_effect::clear_has_state() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void msg_battle_effect::clear_state() {
  set_changed();
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 msg_battle_effect::state() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.state)
  return state_;
}
inline void msg_battle_effect::set_state(::google::protobuf::int32 value) {
  set_changed();
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.state)
}

// optional int32 len = 18;
inline bool msg_battle_effect::has_len() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void msg_battle_effect::set_has_len() {
  _has_bits_[0] |= 0x00010000u;
}
inline void msg_battle_effect::clear_has_len() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void msg_battle_effect::clear_len() {
  set_changed();
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 msg_battle_effect::len() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.len)
  return len_;
}
inline void msg_battle_effect::set_len(::google::protobuf::int32 value) {
  set_changed();
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.len)
}

// optional int32 pre_zhen = 19;
inline bool msg_battle_effect::has_pre_zhen() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void msg_battle_effect::set_has_pre_zhen() {
  _has_bits_[0] |= 0x00020000u;
}
inline void msg_battle_effect::clear_has_pre_zhen() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void msg_battle_effect::clear_pre_zhen() {
  set_changed();
  pre_zhen_ = 0;
  clear_has_pre_zhen();
}
inline ::google::protobuf::int32 msg_battle_effect::pre_zhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.pre_zhen)
  return pre_zhen_;
}
inline void msg_battle_effect::set_pre_zhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_pre_zhen();
  pre_zhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.pre_zhen)
}

// optional int32 camp = 20;
inline bool msg_battle_effect::has_camp() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void msg_battle_effect::set_has_camp() {
  _has_bits_[0] |= 0x00040000u;
}
inline void msg_battle_effect::clear_has_camp() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void msg_battle_effect::clear_camp() {
  set_changed();
  camp_ = 0;
  clear_has_camp();
}
inline ::google::protobuf::int32 msg_battle_effect::camp() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.camp)
  return camp_;
}
inline void msg_battle_effect::set_camp(::google::protobuf::int32 value) {
  set_changed();
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.camp)
}

// optional string follow_guid = 21;
inline bool msg_battle_effect::has_follow_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_effect::set_has_follow_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_effect::clear_has_follow_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_effect::clear_follow_guid() {
  set_changed();
  follow_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_follow_guid();
}
inline const ::std::string& msg_battle_effect::follow_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_effect.follow_guid)
  return follow_guid_.GetNoArena();
}
inline void msg_battle_effect::set_follow_guid(const ::std::string& value) {
  set_changed();
  set_has_follow_guid();
  follow_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_effect.follow_guid)
}
#if LANG_CXX11
inline void msg_battle_effect::set_follow_guid(::std::string&& value) {
  set_changed();
  set_has_follow_guid();
  follow_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_battle_effect.follow_guid)
}
#endif
inline void msg_battle_effect::set_follow_guid(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_follow_guid();
  follow_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_battle_effect.follow_guid)
}
inline void msg_battle_effect::set_follow_guid(const char* value, size_t size) {
  set_changed();
  set_has_follow_guid();
  follow_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_battle_effect.follow_guid)
}
inline ::std::string* msg_battle_effect::mutable_follow_guid() {
  set_changed();
  set_has_follow_guid();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_effect.follow_guid)
  return follow_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_battle_effect::release_follow_guid() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_battle_effect.follow_guid)
  if (!has_follow_guid()) {
    return NULL;
  }
  clear_has_follow_guid();
  return follow_guid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_battle_effect::set_allocated_follow_guid(::std::string* follow_guid) {
  set_changed();
  if (follow_guid != NULL) {
    set_has_follow_guid();
  } else {
    clear_has_follow_guid();
  }
  follow_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), follow_guid);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_battle_effect.follow_guid)
}

// -------------------------------------------------------------------

// msg_battle_item_base

// required int32 tid = 1;
inline bool msg_battle_item_base::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_item_base::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_item_base::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_item_base::clear_tid() {
  set_changed();
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 msg_battle_item_base::tid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_item_base.tid)
  return tid_;
}
inline void msg_battle_item_base::set_tid(::google::protobuf::int32 value) {
  set_changed();
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_item_base.tid)
}

// optional int32 id = 2;
inline bool msg_battle_item_base::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_item_base::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_item_base::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_item_base::clear_id() {
  set_changed();
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 msg_battle_item_base::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_item_base.id)
  return id_;
}
inline void msg_battle_item_base::set_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_item_base.id)
}

// optional int32 x = 3;
inline bool msg_battle_item_base::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_battle_item_base::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_battle_item_base::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_battle_item_base::clear_x() {
  set_changed();
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 msg_battle_item_base::x() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_item_base.x)
  return x_;
}
inline void msg_battle_item_base::set_x(::google::protobuf::int32 value) {
  set_changed();
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_item_base.x)
}

// optional int32 y = 4;
inline bool msg_battle_item_base::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_battle_item_base::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_battle_item_base::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_battle_item_base::clear_y() {
  set_changed();
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 msg_battle_item_base::y() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_item_base.y)
  return y_;
}
inline void msg_battle_item_base::set_y(::google::protobuf::int32 value) {
  set_changed();
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_item_base.y)
}

// optional int32 param = 5;
inline bool msg_battle_item_base::has_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_battle_item_base::set_has_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_battle_item_base::clear_has_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_battle_item_base::clear_param() {
  set_changed();
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 msg_battle_item_base::param() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_item_base.param)
  return param_;
}
inline void msg_battle_item_base::set_param(::google::protobuf::int32 value) {
  set_changed();
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_item_base.param)
}

// optional int32 zhen = 6;
inline bool msg_battle_item_base::has_zhen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_battle_item_base::set_has_zhen() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_battle_item_base::clear_has_zhen() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_battle_item_base::clear_zhen() {
  set_changed();
  zhen_ = 0;
  clear_has_zhen();
}
inline ::google::protobuf::int32 msg_battle_item_base::zhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_item_base.zhen)
  return zhen_;
}
inline void msg_battle_item_base::set_zhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_zhen();
  zhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_item_base.zhen)
}

// -------------------------------------------------------------------

// msg_battle_item

// required .protocol.game.msg_battle_item_base item = 1;
inline bool msg_battle_item::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_item::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_item::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_item::clear_item() {
  if (item_ != NULL) item_->Clear();
  clear_has_item();
}
inline const ::protocol::game::msg_battle_item_base& msg_battle_item::_internal_item() const {
  return *item_;
}
inline const ::protocol::game::msg_battle_item_base& msg_battle_item::item() const {
  const ::protocol::game::msg_battle_item_base* p = item_;
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_item.item)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_battle_item_base*>(
      &::protocol::game::_msg_battle_item_base_default_instance_);
}
inline ::protocol::game::msg_battle_item_base* msg_battle_item::release_item() {
  // @@protoc_insertion_point(field_release:protocol.game.msg_battle_item.item)
  clear_has_item();
  ::protocol::game::msg_battle_item_base* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::protocol::game::msg_battle_item_base* msg_battle_item::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_battle_item_base>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_item.item)
  return item_;
}
inline void msg_battle_item::set_allocated_item(::protocol::game::msg_battle_item_base* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    set_has_item();
  } else {
    clear_has_item();
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_battle_item.item)
}

// optional int32 birth_pos = 2;
inline bool msg_battle_item::has_birth_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_item::set_has_birth_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_item::clear_has_birth_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_item::clear_birth_pos() {
  set_changed();
  birth_pos_ = 0;
  clear_has_birth_pos();
}
inline ::google::protobuf::int32 msg_battle_item::birth_pos() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_item.birth_pos)
  return birth_pos_;
}
inline void msg_battle_item::set_birth_pos(::google::protobuf::int32 value) {
  set_changed();
  set_has_birth_pos();
  birth_pos_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_item.birth_pos)
}

// -------------------------------------------------------------------

// msg_battle_op

// optional int32 zhen = 1;
inline bool msg_battle_op::has_zhen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_op::set_has_zhen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_op::clear_has_zhen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_op::clear_zhen() {
  set_changed();
  zhen_ = 0;
  clear_has_zhen();
}
inline ::google::protobuf::int32 msg_battle_op::zhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_op.zhen)
  return zhen_;
}
inline void msg_battle_op::set_zhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_zhen();
  zhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_op.zhen)
}

// required int32 opcode = 2;
inline bool msg_battle_op::has_opcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_op::set_has_opcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_op::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_op::clear_opcode() {
  set_changed();
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 msg_battle_op::opcode() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_op.opcode)
  return opcode_;
}
inline void msg_battle_op::set_opcode(::google::protobuf::int32 value) {
  set_changed();
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_op.opcode)
}

// required uint64 guid = 3;
inline bool msg_battle_op::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_battle_op::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_battle_op::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_battle_op::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 msg_battle_op::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_op.guid)
  return guid_;
}
inline void msg_battle_op::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_op.guid)
}

// repeated int32 param_ints = 4;
inline int msg_battle_op::param_ints_size() const {
  return param_ints_.size();
}
inline void msg_battle_op::clear_param_ints() {
  set_changed();
  param_ints_.Clear();
}
inline ::google::protobuf::int32 msg_battle_op::param_ints(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_op.param_ints)
  return param_ints_.Get(index);
}
inline void msg_battle_op::set_param_ints(int index, ::google::protobuf::int32 value) {
  set_changed();
  param_ints_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_op.param_ints)
}
inline void msg_battle_op::add_param_ints(::google::protobuf::int32 value) {
  set_changed();
  param_ints_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_op.param_ints)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_battle_op::param_ints() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_op.param_ints)
  return param_ints_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_battle_op::mutable_param_ints() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_op.param_ints)
  return &param_ints_;
}

// repeated string param_strings = 5;
inline int msg_battle_op::param_strings_size() const {
  return param_strings_.size();
}
inline void msg_battle_op::clear_param_strings() {
  set_changed();
  param_strings_.Clear();
}
inline const ::std::string& msg_battle_op::param_strings(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_op.param_strings)
  return param_strings_.Get(index);
}
inline ::std::string* msg_battle_op::mutable_param_strings(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_op.param_strings)
  return param_strings_.Mutable(index);
}
inline void msg_battle_op::set_param_strings(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_op.param_strings)
  param_strings_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void msg_battle_op::set_param_strings(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_op.param_strings)
  param_strings_.Mutable(index)->assign(std::move(value));
}
#endif
inline void msg_battle_op::set_param_strings(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  param_strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_battle_op.param_strings)
}
inline void msg_battle_op::set_param_strings(int index, const char* value, size_t size) {
  set_changed();
  param_strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_battle_op.param_strings)
}
inline ::std::string* msg_battle_op::add_param_strings() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.msg_battle_op.param_strings)
  return param_strings_.Add();
}
inline void msg_battle_op::add_param_strings(const ::std::string& value) {
  set_changed();
  param_strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_op.param_strings)
}
#if LANG_CXX11
inline void msg_battle_op::add_param_strings(::std::string&& value) {
  set_changed();
  param_strings_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_op.param_strings)
}
#endif
inline void msg_battle_op::add_param_strings(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  param_strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.msg_battle_op.param_strings)
}
inline void msg_battle_op::add_param_strings(const char* value, size_t size) {
  set_changed();
  param_strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.msg_battle_op.param_strings)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
msg_battle_op::param_strings() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_op.param_strings)
  return param_strings_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
msg_battle_op::mutable_param_strings() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_op.param_strings)
  return &param_strings_;
}

// -------------------------------------------------------------------

// msg_battle_state

// required int32 zhen = 1;
inline bool msg_battle_state::has_zhen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_state::set_has_zhen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_state::clear_has_zhen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_state::clear_zhen() {
  set_changed();
  zhen_ = 0;
  clear_has_zhen();
}
inline ::google::protobuf::int32 msg_battle_state::zhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_state.zhen)
  return zhen_;
}
inline void msg_battle_state::set_zhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_zhen();
  zhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_state.zhen)
}

// repeated .protocol.game.msg_battle_boss boss = 2;
inline int msg_battle_state::boss_size() const {
  return boss_.size();
}
inline void msg_battle_state::clear_boss() {
  boss_.Clear();
}
inline ::protocol::game::msg_battle_boss* msg_battle_state::mutable_boss(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_state.boss)
  return boss_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_boss >*
msg_battle_state::mutable_boss() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_state.boss)
  return &boss_;
}
inline const ::protocol::game::msg_battle_boss& msg_battle_state::boss(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_state.boss)
  return boss_.Get(index);
}
inline ::protocol::game::msg_battle_boss* msg_battle_state::add_boss() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_state.boss)
  return boss_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_boss >&
msg_battle_state::boss() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_state.boss)
  return boss_;
}

// repeated .protocol.game.msg_battle_monster monsters = 3;
inline int msg_battle_state::monsters_size() const {
  return monsters_.size();
}
inline void msg_battle_state::clear_monsters() {
  monsters_.Clear();
}
inline ::protocol::game::msg_battle_monster* msg_battle_state::mutable_monsters(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_state.monsters)
  return monsters_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_monster >*
msg_battle_state::mutable_monsters() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_state.monsters)
  return &monsters_;
}
inline const ::protocol::game::msg_battle_monster& msg_battle_state::monsters(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_state.monsters)
  return monsters_.Get(index);
}
inline ::protocol::game::msg_battle_monster* msg_battle_state::add_monsters() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_state.monsters)
  return monsters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_monster >&
msg_battle_state::monsters() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_state.monsters)
  return monsters_;
}

// repeated .protocol.game.msg_battle_player players = 4;
inline int msg_battle_state::players_size() const {
  return players_.size();
}
inline void msg_battle_state::clear_players() {
  players_.Clear();
}
inline ::protocol::game::msg_battle_player* msg_battle_state::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_state.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_player >*
msg_battle_state::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_state.players)
  return &players_;
}
inline const ::protocol::game::msg_battle_player& msg_battle_state::players(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_state.players)
  return players_.Get(index);
}
inline ::protocol::game::msg_battle_player* msg_battle_state::add_players() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_state.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_player >&
msg_battle_state::players() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_state.players)
  return players_;
}

// repeated .protocol.game.msg_battle_effect effects = 5;
inline int msg_battle_state::effects_size() const {
  return effects_.size();
}
inline void msg_battle_state::clear_effects() {
  effects_.Clear();
}
inline ::protocol::game::msg_battle_effect* msg_battle_state::mutable_effects(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_state.effects)
  return effects_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_effect >*
msg_battle_state::mutable_effects() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_state.effects)
  return &effects_;
}
inline const ::protocol::game::msg_battle_effect& msg_battle_state::effects(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_state.effects)
  return effects_.Get(index);
}
inline ::protocol::game::msg_battle_effect* msg_battle_state::add_effects() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_state.effects)
  return effects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_effect >&
msg_battle_state::effects() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_state.effects)
  return effects_;
}

// repeated .protocol.game.msg_battle_item_base bases = 6;
inline int msg_battle_state::bases_size() const {
  return bases_.size();
}
inline void msg_battle_state::clear_bases() {
  bases_.Clear();
}
inline ::protocol::game::msg_battle_item_base* msg_battle_state::mutable_bases(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_state.bases)
  return bases_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item_base >*
msg_battle_state::mutable_bases() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_state.bases)
  return &bases_;
}
inline const ::protocol::game::msg_battle_item_base& msg_battle_state::bases(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_state.bases)
  return bases_.Get(index);
}
inline ::protocol::game::msg_battle_item_base* msg_battle_state::add_bases() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_state.bases)
  return bases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item_base >&
msg_battle_state::bases() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_state.bases)
  return bases_;
}

// repeated .protocol.game.msg_battle_item items = 7;
inline int msg_battle_state::items_size() const {
  return items_.size();
}
inline void msg_battle_state::clear_items() {
  items_.Clear();
}
inline ::protocol::game::msg_battle_item* msg_battle_state::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_battle_state.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item >*
msg_battle_state::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_battle_state.items)
  return &items_;
}
inline const ::protocol::game::msg_battle_item& msg_battle_state::items(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_state.items)
  return items_.Get(index);
}
inline ::protocol::game::msg_battle_item* msg_battle_state::add_items() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_battle_state.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_item >&
msg_battle_state::items() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_battle_state.items)
  return items_;
}

// required int32 tid = 8;
inline bool msg_battle_state::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_state::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_state::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_state::clear_tid() {
  set_changed();
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 msg_battle_state::tid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_state.tid)
  return tid_;
}
inline void msg_battle_state::set_tid(::google::protobuf::int32 value) {
  set_changed();
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_state.tid)
}

// required bool init_item = 9;
inline bool msg_battle_state::has_init_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_battle_state::set_has_init_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_battle_state::clear_has_init_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_battle_state::clear_init_item() {
  set_changed();
  init_item_ = false;
  clear_has_init_item();
}
inline bool msg_battle_state::init_item() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_state.init_item)
  return init_item_;
}
inline void msg_battle_state::set_init_item(bool value) {
  set_changed();
  set_has_init_item();
  init_item_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_state.init_item)
}

// -------------------------------------------------------------------

// cmsg_battle_state

// required uint64 guid = 1;
inline bool cmsg_battle_state::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cmsg_battle_state::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cmsg_battle_state::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cmsg_battle_state::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 cmsg_battle_state::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_battle_state.guid)
  return guid_;
}
inline void cmsg_battle_state::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_battle_state.guid)
}

// required .protocol.game.msg_battle_state state = 2;
inline bool cmsg_battle_state::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cmsg_battle_state::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cmsg_battle_state::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cmsg_battle_state::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::protocol::game::msg_battle_state& cmsg_battle_state::_internal_state() const {
  return *state_;
}
inline const ::protocol::game::msg_battle_state& cmsg_battle_state::state() const {
  const ::protocol::game::msg_battle_state* p = state_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_battle_state.state)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_battle_state*>(
      &::protocol::game::_msg_battle_state_default_instance_);
}
inline ::protocol::game::msg_battle_state* cmsg_battle_state::release_state() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_battle_state.state)
  clear_has_state();
  ::protocol::game::msg_battle_state* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::protocol::game::msg_battle_state* cmsg_battle_state::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_battle_state>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_battle_state.state)
  return state_;
}
inline void cmsg_battle_state::set_allocated_state(::protocol::game::msg_battle_state* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_battle_state.state)
}

// -------------------------------------------------------------------

// msg_battle_code

// required int32 zhen = 1;
inline bool msg_battle_code::has_zhen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_battle_code::set_has_zhen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_battle_code::clear_has_zhen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_battle_code::clear_zhen() {
  set_changed();
  zhen_ = 0;
  clear_has_zhen();
}
inline ::google::protobuf::int32 msg_battle_code::zhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_code.zhen)
  return zhen_;
}
inline void msg_battle_code::set_zhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_zhen();
  zhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_code.zhen)
}

// required int32 code = 2;
inline bool msg_battle_code::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_battle_code::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_battle_code::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_battle_code::clear_code() {
  set_changed();
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 msg_battle_code::code() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_battle_code.code)
  return code_;
}
inline void msg_battle_code::set_code(::google::protobuf::int32 value) {
  set_changed();
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_battle_code.code)
}

// -------------------------------------------------------------------

// cmsg_battle_link

// required uint64 guid = 1;
inline bool cmsg_battle_link::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cmsg_battle_link::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cmsg_battle_link::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cmsg_battle_link::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 cmsg_battle_link::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_battle_link.guid)
  return guid_;
}
inline void cmsg_battle_link::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_battle_link.guid)
}

// required string code = 2;
inline bool cmsg_battle_link::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cmsg_battle_link::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cmsg_battle_link::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cmsg_battle_link::clear_code() {
  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
inline const ::std::string& cmsg_battle_link::code() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_battle_link.code)
  return code_.GetNoArena();
}
inline void cmsg_battle_link::set_code(const ::std::string& value) {
  set_changed();
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_battle_link.code)
}
#if LANG_CXX11
inline void cmsg_battle_link::set_code(::std::string&& value) {
  set_changed();
  set_has_code();
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_battle_link.code)
}
#endif
inline void cmsg_battle_link::set_code(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_battle_link.code)
}
inline void cmsg_battle_link::set_code(const char* value, size_t size) {
  set_changed();
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_battle_link.code)
}
inline ::std::string* cmsg_battle_link::mutable_code() {
  set_changed();
  set_has_code();
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_battle_link.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_battle_link::release_code() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_battle_link.code)
  if (!has_code()) {
    return NULL;
  }
  clear_has_code();
  return code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_battle_link::set_allocated_code(::std::string* code) {
  set_changed();
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_battle_link.code)
}

// -------------------------------------------------------------------

// smsg_battle_link

// required uint64 battle_guid = 1;
inline bool smsg_battle_link::has_battle_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void smsg_battle_link::set_has_battle_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void smsg_battle_link::clear_has_battle_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void smsg_battle_link::clear_battle_guid() {
  set_changed();
  battle_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_battle_guid();
}
inline ::google::protobuf::uint64 smsg_battle_link::battle_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.battle_guid)
  return battle_guid_;
}
inline void smsg_battle_link::set_battle_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_battle_guid();
  battle_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.battle_guid)
}

// required int32 type = 2;
inline bool smsg_battle_link::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void smsg_battle_link::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void smsg_battle_link::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void smsg_battle_link::clear_type() {
  set_changed();
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 smsg_battle_link::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.type)
  return type_;
}
inline void smsg_battle_link::set_type(::google::protobuf::int32 value) {
  set_changed();
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.type)
}

// required int32 team_num = 3;
inline bool smsg_battle_link::has_team_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void smsg_battle_link::set_has_team_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void smsg_battle_link::clear_has_team_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void smsg_battle_link::clear_team_num() {
  set_changed();
  team_num_ = 0;
  clear_has_team_num();
}
inline ::google::protobuf::int32 smsg_battle_link::team_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.team_num)
  return team_num_;
}
inline void smsg_battle_link::set_team_num(::google::protobuf::int32 value) {
  set_changed();
  set_has_team_num();
  team_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.team_num)
}

// required int32 member_num = 4;
inline bool smsg_battle_link::has_member_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void smsg_battle_link::set_has_member_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void smsg_battle_link::clear_has_member_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void smsg_battle_link::clear_member_num() {
  set_changed();
  member_num_ = 0;
  clear_has_member_num();
}
inline ::google::protobuf::int32 smsg_battle_link::member_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.member_num)
  return member_num_;
}
inline void smsg_battle_link::set_member_num(::google::protobuf::int32 value) {
  set_changed();
  set_has_member_num();
  member_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.member_num)
}

// required int32 zhen = 5;
inline bool smsg_battle_link::has_zhen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void smsg_battle_link::set_has_zhen() {
  _has_bits_[0] |= 0x00000020u;
}
inline void smsg_battle_link::clear_has_zhen() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void smsg_battle_link::clear_zhen() {
  set_changed();
  zhen_ = 0;
  clear_has_zhen();
}
inline ::google::protobuf::int32 smsg_battle_link::zhen() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.zhen)
  return zhen_;
}
inline void smsg_battle_link::set_zhen(::google::protobuf::int32 value) {
  set_changed();
  set_has_zhen();
  zhen_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.zhen)
}

// required int32 seed = 6;
inline bool smsg_battle_link::has_seed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void smsg_battle_link::set_has_seed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void smsg_battle_link::clear_has_seed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void smsg_battle_link::clear_seed() {
  set_changed();
  seed_ = 0;
  clear_has_seed();
}
inline ::google::protobuf::int32 smsg_battle_link::seed() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.seed)
  return seed_;
}
inline void smsg_battle_link::set_seed(::google::protobuf::int32 value) {
  set_changed();
  set_has_seed();
  seed_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.seed)
}

// required int32 seed_add = 7;
inline bool smsg_battle_link::has_seed_add() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void smsg_battle_link::set_has_seed_add() {
  _has_bits_[0] |= 0x00000080u;
}
inline void smsg_battle_link::clear_has_seed_add() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void smsg_battle_link::clear_seed_add() {
  set_changed();
  seed_add_ = 0;
  clear_has_seed_add();
}
inline ::google::protobuf::int32 smsg_battle_link::seed_add() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.seed_add)
  return seed_add_;
}
inline void smsg_battle_link::set_seed_add(::google::protobuf::int32 value) {
  set_changed();
  set_has_seed_add();
  seed_add_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.seed_add)
}

// optional int32 is_state = 8;
inline bool smsg_battle_link::has_is_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void smsg_battle_link::set_has_is_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void smsg_battle_link::clear_has_is_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void smsg_battle_link::clear_is_state() {
  set_changed();
  is_state_ = 0;
  clear_has_is_state();
}
inline ::google::protobuf::int32 smsg_battle_link::is_state() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.is_state)
  return is_state_;
}
inline void smsg_battle_link::set_is_state(::google::protobuf::int32 value) {
  set_changed();
  set_has_is_state();
  is_state_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.is_state)
}

// optional .protocol.game.msg_battle_state state = 9;
inline bool smsg_battle_link::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void smsg_battle_link::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void smsg_battle_link::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void smsg_battle_link::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::protocol::game::msg_battle_state& smsg_battle_link::_internal_state() const {
  return *state_;
}
inline const ::protocol::game::msg_battle_state& smsg_battle_link::state() const {
  const ::protocol::game::msg_battle_state* p = state_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.state)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_battle_state*>(
      &::protocol::game::_msg_battle_state_default_instance_);
}
inline ::protocol::game::msg_battle_state* smsg_battle_link::release_state() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_battle_link.state)
  clear_has_state();
  ::protocol::game::msg_battle_state* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::protocol::game::msg_battle_state* smsg_battle_link::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_battle_state>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_battle_link.state)
  return state_;
}
inline void smsg_battle_link::set_allocated_state(::protocol::game::msg_battle_state* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_battle_link.state)
}

// repeated .protocol.game.msg_battle_op ops = 10;
inline int smsg_battle_link::ops_size() const {
  return ops_.size();
}
inline void smsg_battle_link::clear_ops() {
  ops_.Clear();
}
inline ::protocol::game::msg_battle_op* smsg_battle_link::mutable_ops(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_battle_link.ops)
  return ops_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_op >*
smsg_battle_link::mutable_ops() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_battle_link.ops)
  return &ops_;
}
inline const ::protocol::game::msg_battle_op& smsg_battle_link::ops(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.ops)
  return ops_.Get(index);
}
inline ::protocol::game::msg_battle_op* smsg_battle_link::add_ops() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_battle_link.ops)
  return ops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_battle_op >&
smsg_battle_link::ops() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_battle_link.ops)
  return ops_;
}

// required int32 self_camp = 11;
inline bool smsg_battle_link::has_self_camp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void smsg_battle_link::set_has_self_camp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void smsg_battle_link::clear_has_self_camp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void smsg_battle_link::clear_self_camp() {
  set_changed();
  self_camp_ = 0;
  clear_has_self_camp();
}
inline ::google::protobuf::int32 smsg_battle_link::self_camp() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.self_camp)
  return self_camp_;
}
inline void smsg_battle_link::set_self_camp(::google::protobuf::int32 value) {
  set_changed();
  set_has_self_camp();
  self_camp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.self_camp)
}

// required int32 is_new = 12;
inline bool smsg_battle_link::has_is_new() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void smsg_battle_link::set_has_is_new() {
  _has_bits_[0] |= 0x00000400u;
}
inline void smsg_battle_link::clear_has_is_new() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void smsg_battle_link::clear_is_new() {
  set_changed();
  is_new_ = 0;
  clear_has_is_new();
}
inline ::google::protobuf::int32 smsg_battle_link::is_new() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_battle_link.is_new)
  return is_new_;
}
inline void smsg_battle_link::set_is_new(::google::protobuf::int32 value) {
  set_changed();
  set_has_is_new();
  is_new_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_battle_link.is_new)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace game
}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5fbattle1_2eproto
