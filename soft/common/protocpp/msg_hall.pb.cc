// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_hall.proto

#include "msg_hall.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_acc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_acc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_acc_t;
}  // namespace protobuf_acc_2eproto
namespace protobuf_battle_5fhis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_battle_5fhis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_battle_his_t;
}  // namespace protobuf_battle_5fhis_2eproto
namespace protobuf_player_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_player_t;
}  // namespace protobuf_player_2eproto
namespace protobuf_post_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_post_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_post_t;
}  // namespace protobuf_post_2eproto
namespace protobuf_post_5fnew_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_post_5fnew_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_post_new_t;
}  // namespace protobuf_post_5fnew_2eproto
namespace protobuf_role_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_role_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_role_t;
}  // namespace protobuf_role_2eproto
namespace protocol {
namespace game {
class smsg_errorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_error>
      _instance;
} _smsg_error_default_instance_;
class cmsg_login_playerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_login_player>
      _instance;
} _cmsg_login_player_default_instance_;
class smsg_login_playerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_login_player>
      _instance;
} _smsg_login_player_default_instance_;
class smsg_checkdataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_checkdata>
      _instance;
} _smsg_checkdata_default_instance_;
class smsg_post_numDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_post_num>
      _instance;
} _smsg_post_num_default_instance_;
class cmsg_player_lookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_player_look>
      _instance;
} _cmsg_player_look_default_instance_;
class smsg_player_lookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_player_look>
      _instance;
} _smsg_player_look_default_instance_;
class cmsg_role_onDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_role_on>
      _instance;
} _cmsg_role_on_default_instance_;
class cmsg_role_hechengDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_role_hecheng>
      _instance;
} _cmsg_role_hecheng_default_instance_;
class smsg_role_hechengDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_role_hecheng>
      _instance;
} _smsg_role_hecheng_default_instance_;
class cmsg_role_levelupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_role_levelup>
      _instance;
} _cmsg_role_levelup_default_instance_;
class cmsg_avatar_onDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_avatar_on>
      _instance;
} _cmsg_avatar_on_default_instance_;
class cmsg_toukuang_onDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_toukuang_on>
      _instance;
} _cmsg_toukuang_on_default_instance_;
class cmsg_chatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_chat>
      _instance;
} _cmsg_chat_default_instance_;
class smsg_chatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_chat>
      _instance;
} _smsg_chat_default_instance_;
class smsg_gonggaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_gonggao>
      _instance;
} _smsg_gonggao_default_instance_;
class cmsg_gm_commandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_gm_command>
      _instance;
} _cmsg_gm_command_default_instance_;
class smsg_gm_commandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_gm_command>
      _instance;
} _smsg_gm_command_default_instance_;
class cmsg_player_nameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_player_name>
      _instance;
} _cmsg_player_name_default_instance_;
class cmsg_player_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_player_info>
      _instance;
} _cmsg_player_info_default_instance_;
class cmsg_player_dataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_player_data>
      _instance;
} _cmsg_player_data_default_instance_;
class cmsg_start_open_boxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_start_open_box>
      _instance;
} _cmsg_start_open_box_default_instance_;
class cmsg_end_open_boxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_end_open_box>
      _instance;
} _cmsg_end_open_box_default_instance_;
class smsg_end_open_boxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_end_open_box>
      _instance;
} _smsg_end_open_box_default_instance_;
class cmsg_battle_item_onDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_battle_item_on>
      _instance;
} _cmsg_battle_item_on_default_instance_;
class cmsg_item_buyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_item_buy>
      _instance;
} _cmsg_item_buy_default_instance_;
class smsg_item_buyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_item_buy>
      _instance;
} _smsg_item_buy_default_instance_;
class cmsg_item_sellDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_item_sell>
      _instance;
} _cmsg_item_sell_default_instance_;
class cmsg_item_direct_buyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_item_direct_buy>
      _instance;
} _cmsg_item_direct_buy_default_instance_;
class msg_post_new_listDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msg_post_new_list>
      _instance;
} _msg_post_new_list_default_instance_;
class msg_post_new_deleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msg_post_new_delete>
      _instance;
} _msg_post_new_delete_default_instance_;
class smsg_post_lookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_post_look>
      _instance;
} _smsg_post_look_default_instance_;
class cmsg_post_readDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_post_read>
      _instance;
} _cmsg_post_read_default_instance_;
class cmsg_post_getDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_post_get>
      _instance;
} _cmsg_post_get_default_instance_;
class smsg_post_getDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_post_get>
      _instance;
} _smsg_post_get_default_instance_;
class cmsg_post_deleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_post_delete>
      _instance;
} _cmsg_post_delete_default_instance_;
class smsg_post_get_allDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_post_get_all>
      _instance;
} _smsg_post_get_all_default_instance_;
class smsg_post_delete_allDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_post_delete_all>
      _instance;
} _smsg_post_delete_all_default_instance_;
class smsg_fenxiang_numDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_fenxiang_num>
      _instance;
} _smsg_fenxiang_num_default_instance_;
class cmsg_libaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_libao>
      _instance;
} _cmsg_libao_default_instance_;
class smsg_libaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_libao>
      _instance;
} _smsg_libao_default_instance_;
class cmsg_rechargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_recharge>
      _instance;
} _cmsg_recharge_default_instance_;
class smsg_rechargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_recharge>
      _instance;
} _smsg_recharge_default_instance_;
class cmsg_infomationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_infomation>
      _instance;
} _cmsg_infomation_default_instance_;
class cmsg_item_applyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_item_apply>
      _instance;
} _cmsg_item_apply_default_instance_;
class smsg_item_applyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_item_apply>
      _instance;
} _smsg_item_apply_default_instance_;
class cmsg_battle_achieveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_battle_achieve>
      _instance;
} _cmsg_battle_achieve_default_instance_;
class cmsg_achieveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_achieve>
      _instance;
} _cmsg_achieve_default_instance_;
class smsg_level_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_level_reward>
      _instance;
} _smsg_level_reward_default_instance_;
class cmsg_battle_taskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_battle_task>
      _instance;
} _cmsg_battle_task_default_instance_;
class cmsg_taskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_task>
      _instance;
} _cmsg_task_default_instance_;
class cmsg_fashion_onDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_fashion_on>
      _instance;
} _cmsg_fashion_on_default_instance_;
class cmsg_battle_dailyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_battle_daily>
      _instance;
} _cmsg_battle_daily_default_instance_;
class cmsg_dailyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_daily>
      _instance;
} _cmsg_daily_default_instance_;
class cmsg_daily_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_daily_reward>
      _instance;
} _cmsg_daily_reward_default_instance_;
class cmsg_level_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_level_reward>
      _instance;
} _cmsg_level_reward_default_instance_;
class cmsg_vip_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_vip_reward>
      _instance;
} _cmsg_vip_reward_default_instance_;
class smsg_vip_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_vip_reward>
      _instance;
} _smsg_vip_reward_default_instance_;
class smsg_duobaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_duobao>
      _instance;
} _smsg_duobao_default_instance_;
class smsg_sys_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_sys_info>
      _instance;
} _smsg_sys_info_default_instance_;
}  // namespace game
}  // namespace protocol
namespace protobuf_msg_5fhall_2eproto {
static void InitDefaultssmsg_error() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_error_default_instance_;
    new (ptr) ::protocol::game::smsg_error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_error =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_error}, {}};

static void InitDefaultscmsg_login_player() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_login_player_default_instance_;
    new (ptr) ::protocol::game::cmsg_login_player();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_login_player::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_cmsg_login_player =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultscmsg_login_player}, {
      &protobuf_acc_2eproto::scc_info_acc_t.base,}};

static void InitDefaultssmsg_login_player() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_login_player_default_instance_;
    new (ptr) ::protocol::game::smsg_login_player();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_login_player::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_smsg_login_player =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultssmsg_login_player}, {
      &protobuf_player_2eproto::scc_info_player_t.base,
      &protobuf_role_2eproto::scc_info_role_t.base,
      &protobuf_battle_5fhis_2eproto::scc_info_battle_his_t.base,}};

static void InitDefaultssmsg_checkdata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_checkdata_default_instance_;
    new (ptr) ::protocol::game::smsg_checkdata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_checkdata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_smsg_checkdata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultssmsg_checkdata}, {
      &protobuf_player_2eproto::scc_info_player_t.base,
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultssmsg_post_num() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_post_num_default_instance_;
    new (ptr) ::protocol::game::smsg_post_num();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_post_num::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_post_num =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_post_num}, {}};

static void InitDefaultscmsg_player_look() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_player_look_default_instance_;
    new (ptr) ::protocol::game::cmsg_player_look();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_player_look::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_player_look =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_player_look}, {}};

static void InitDefaultssmsg_player_look() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_player_look_default_instance_;
    new (ptr) ::protocol::game::smsg_player_look();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_player_look::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_smsg_player_look =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultssmsg_player_look}, {
      &protobuf_player_2eproto::scc_info_player_t.base,
      &protobuf_battle_5fhis_2eproto::scc_info_battle_his_t.base,}};

static void InitDefaultscmsg_role_on() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_role_on_default_instance_;
    new (ptr) ::protocol::game::cmsg_role_on();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_role_on::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_role_on =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_role_on}, {}};

static void InitDefaultscmsg_role_hecheng() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_role_hecheng_default_instance_;
    new (ptr) ::protocol::game::cmsg_role_hecheng();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_role_hecheng::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_role_hecheng =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_role_hecheng}, {}};

static void InitDefaultssmsg_role_hecheng() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_role_hecheng_default_instance_;
    new (ptr) ::protocol::game::smsg_role_hecheng();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_role_hecheng::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_role_hecheng =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_role_hecheng}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultscmsg_role_levelup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_role_levelup_default_instance_;
    new (ptr) ::protocol::game::cmsg_role_levelup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_role_levelup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_role_levelup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_role_levelup}, {}};

static void InitDefaultscmsg_avatar_on() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_avatar_on_default_instance_;
    new (ptr) ::protocol::game::cmsg_avatar_on();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_avatar_on::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_avatar_on =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_avatar_on}, {}};

static void InitDefaultscmsg_toukuang_on() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_toukuang_on_default_instance_;
    new (ptr) ::protocol::game::cmsg_toukuang_on();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_toukuang_on::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_toukuang_on =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_toukuang_on}, {}};

static void InitDefaultscmsg_chat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_chat_default_instance_;
    new (ptr) ::protocol::game::cmsg_chat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_chat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_chat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_chat}, {}};

static void InitDefaultssmsg_chat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_chat_default_instance_;
    new (ptr) ::protocol::game::smsg_chat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_chat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_chat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_chat}, {}};

static void InitDefaultssmsg_gonggao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_gonggao_default_instance_;
    new (ptr) ::protocol::game::smsg_gonggao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_gonggao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_gonggao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_gonggao}, {}};

static void InitDefaultscmsg_gm_command() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_gm_command_default_instance_;
    new (ptr) ::protocol::game::cmsg_gm_command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_gm_command::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_gm_command =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_gm_command}, {}};

static void InitDefaultssmsg_gm_command() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_gm_command_default_instance_;
    new (ptr) ::protocol::game::smsg_gm_command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_gm_command::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_gm_command =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_gm_command}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultscmsg_player_name() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_player_name_default_instance_;
    new (ptr) ::protocol::game::cmsg_player_name();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_player_name::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_player_name =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_player_name}, {}};

static void InitDefaultscmsg_player_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_player_info_default_instance_;
    new (ptr) ::protocol::game::cmsg_player_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_player_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_player_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_player_info}, {}};

static void InitDefaultscmsg_player_data() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_player_data_default_instance_;
    new (ptr) ::protocol::game::cmsg_player_data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_player_data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_player_data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_player_data}, {}};

static void InitDefaultscmsg_start_open_box() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_start_open_box_default_instance_;
    new (ptr) ::protocol::game::cmsg_start_open_box();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_start_open_box::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_start_open_box =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_start_open_box}, {}};

static void InitDefaultscmsg_end_open_box() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_end_open_box_default_instance_;
    new (ptr) ::protocol::game::cmsg_end_open_box();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_end_open_box::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_end_open_box =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_end_open_box}, {}};

static void InitDefaultssmsg_end_open_box() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_end_open_box_default_instance_;
    new (ptr) ::protocol::game::smsg_end_open_box();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_end_open_box::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_end_open_box =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_end_open_box}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultscmsg_battle_item_on() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_battle_item_on_default_instance_;
    new (ptr) ::protocol::game::cmsg_battle_item_on();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_battle_item_on::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_battle_item_on =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_battle_item_on}, {}};

static void InitDefaultscmsg_item_buy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_item_buy_default_instance_;
    new (ptr) ::protocol::game::cmsg_item_buy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_item_buy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_item_buy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_item_buy}, {}};

static void InitDefaultssmsg_item_buy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_item_buy_default_instance_;
    new (ptr) ::protocol::game::smsg_item_buy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_item_buy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_item_buy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_item_buy}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultscmsg_item_sell() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_item_sell_default_instance_;
    new (ptr) ::protocol::game::cmsg_item_sell();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_item_sell::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_item_sell =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_item_sell}, {}};

static void InitDefaultscmsg_item_direct_buy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_item_direct_buy_default_instance_;
    new (ptr) ::protocol::game::cmsg_item_direct_buy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_item_direct_buy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_item_direct_buy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_item_direct_buy}, {}};

static void InitDefaultsmsg_post_new_list() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_msg_post_new_list_default_instance_;
    new (ptr) ::protocol::game::msg_post_new_list();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::msg_post_new_list::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_msg_post_new_list =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmsg_post_new_list}, {
      &protobuf_post_5fnew_2eproto::scc_info_post_new_t.base,}};

static void InitDefaultsmsg_post_new_delete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_msg_post_new_delete_default_instance_;
    new (ptr) ::protocol::game::msg_post_new_delete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::msg_post_new_delete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_msg_post_new_delete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmsg_post_new_delete}, {}};

static void InitDefaultssmsg_post_look() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_post_look_default_instance_;
    new (ptr) ::protocol::game::smsg_post_look();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_post_look::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_post_look =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_post_look}, {
      &protobuf_post_2eproto::scc_info_post_t.base,}};

static void InitDefaultscmsg_post_read() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_post_read_default_instance_;
    new (ptr) ::protocol::game::cmsg_post_read();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_post_read::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_post_read =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_post_read}, {}};

static void InitDefaultscmsg_post_get() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_post_get_default_instance_;
    new (ptr) ::protocol::game::cmsg_post_get();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_post_get::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_post_get =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_post_get}, {}};

static void InitDefaultssmsg_post_get() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_post_get_default_instance_;
    new (ptr) ::protocol::game::smsg_post_get();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_post_get::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_post_get =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_post_get}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultscmsg_post_delete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_post_delete_default_instance_;
    new (ptr) ::protocol::game::cmsg_post_delete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_post_delete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_post_delete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_post_delete}, {}};

static void InitDefaultssmsg_post_get_all() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_post_get_all_default_instance_;
    new (ptr) ::protocol::game::smsg_post_get_all();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_post_get_all::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_post_get_all =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_post_get_all}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultssmsg_post_delete_all() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_post_delete_all_default_instance_;
    new (ptr) ::protocol::game::smsg_post_delete_all();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_post_delete_all::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_post_delete_all =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_post_delete_all}, {}};

static void InitDefaultssmsg_fenxiang_num() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_fenxiang_num_default_instance_;
    new (ptr) ::protocol::game::smsg_fenxiang_num();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_fenxiang_num::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_fenxiang_num =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_fenxiang_num}, {}};

static void InitDefaultscmsg_libao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_libao_default_instance_;
    new (ptr) ::protocol::game::cmsg_libao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_libao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_libao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_libao}, {}};

static void InitDefaultssmsg_libao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_libao_default_instance_;
    new (ptr) ::protocol::game::smsg_libao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_libao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_libao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_libao}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultscmsg_recharge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_recharge_default_instance_;
    new (ptr) ::protocol::game::cmsg_recharge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_recharge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_recharge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_recharge}, {}};

static void InitDefaultssmsg_recharge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_recharge_default_instance_;
    new (ptr) ::protocol::game::smsg_recharge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_recharge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_recharge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_recharge}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultscmsg_infomation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_infomation_default_instance_;
    new (ptr) ::protocol::game::cmsg_infomation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_infomation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_infomation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_infomation}, {}};

static void InitDefaultscmsg_item_apply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_item_apply_default_instance_;
    new (ptr) ::protocol::game::cmsg_item_apply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_item_apply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_item_apply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_item_apply}, {}};

static void InitDefaultssmsg_item_apply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_item_apply_default_instance_;
    new (ptr) ::protocol::game::smsg_item_apply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_item_apply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_item_apply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_item_apply}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultscmsg_battle_achieve() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_battle_achieve_default_instance_;
    new (ptr) ::protocol::game::cmsg_battle_achieve();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_battle_achieve::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_battle_achieve =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_battle_achieve}, {}};

static void InitDefaultscmsg_achieve() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_achieve_default_instance_;
    new (ptr) ::protocol::game::cmsg_achieve();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_achieve::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_achieve =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_achieve}, {}};

static void InitDefaultssmsg_level_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_level_reward_default_instance_;
    new (ptr) ::protocol::game::smsg_level_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_level_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_level_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_level_reward}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultscmsg_battle_task() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_battle_task_default_instance_;
    new (ptr) ::protocol::game::cmsg_battle_task();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_battle_task::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_battle_task =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_battle_task}, {}};

static void InitDefaultscmsg_task() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_task_default_instance_;
    new (ptr) ::protocol::game::cmsg_task();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_task::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_task =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_task}, {}};

static void InitDefaultscmsg_fashion_on() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_fashion_on_default_instance_;
    new (ptr) ::protocol::game::cmsg_fashion_on();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_fashion_on::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_fashion_on =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_fashion_on}, {}};

static void InitDefaultscmsg_battle_daily() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_battle_daily_default_instance_;
    new (ptr) ::protocol::game::cmsg_battle_daily();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_battle_daily::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_battle_daily =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_battle_daily}, {}};

static void InitDefaultscmsg_daily() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_daily_default_instance_;
    new (ptr) ::protocol::game::cmsg_daily();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_daily::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_daily =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_daily}, {}};

static void InitDefaultscmsg_daily_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_daily_reward_default_instance_;
    new (ptr) ::protocol::game::cmsg_daily_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_daily_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_daily_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_daily_reward}, {}};

static void InitDefaultscmsg_level_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_level_reward_default_instance_;
    new (ptr) ::protocol::game::cmsg_level_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_level_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_level_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_level_reward}, {}};

static void InitDefaultscmsg_vip_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_vip_reward_default_instance_;
    new (ptr) ::protocol::game::cmsg_vip_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_vip_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_vip_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_vip_reward}, {}};

static void InitDefaultssmsg_vip_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_vip_reward_default_instance_;
    new (ptr) ::protocol::game::smsg_vip_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_vip_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_vip_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_vip_reward}, {
      &protobuf_role_2eproto::scc_info_role_t.base,}};

static void InitDefaultssmsg_duobao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_duobao_default_instance_;
    new (ptr) ::protocol::game::smsg_duobao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_duobao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_duobao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_duobao}, {}};

static void InitDefaultssmsg_sys_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_sys_info_default_instance_;
    new (ptr) ::protocol::game::smsg_sys_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_sys_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_sys_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_sys_info}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_error.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_login_player.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_login_player.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_checkdata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_post_num.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_player_look.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_player_look.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_role_on.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_role_hecheng.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_role_hecheng.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_role_levelup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_avatar_on.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_toukuang_on.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_chat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_chat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_gonggao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_gm_command.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_gm_command.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_player_name.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_player_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_player_data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_start_open_box.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_end_open_box.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_end_open_box.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_battle_item_on.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_item_buy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_item_buy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_item_sell.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_item_direct_buy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_msg_post_new_list.base);
  ::google::protobuf::internal::InitSCC(&scc_info_msg_post_new_delete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_post_look.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_post_read.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_post_get.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_post_get.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_post_delete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_post_get_all.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_post_delete_all.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_fenxiang_num.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_libao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_libao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_recharge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_recharge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_infomation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_item_apply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_item_apply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_battle_achieve.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_achieve.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_level_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_battle_task.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_task.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_fashion_on.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_battle_daily.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_daily.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_daily_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_level_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_vip_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_vip_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_duobao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_sys_info.base);
}

::google::protobuf::Metadata file_level_metadata[60];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_error, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_error, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_error, text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_login_player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_login_player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_login_player, acc_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_login_player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_login_player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_login_player, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_login_player, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_login_player, battle_his_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_login_player, post_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_login_player, server_time_),
  0,
  ~0u,
  ~0u,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_checkdata, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_checkdata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_checkdata, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_checkdata, roles_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_num, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_num, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_num, post_num_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_look, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_look, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_look, target_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_player_look, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_player_look, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_player_look, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_player_look, battle_his_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_role_on, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_role_on, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_role_on, role_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_role_hecheng, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_role_hecheng, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_role_hecheng, role_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_role_hecheng, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_role_hecheng, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_role_hecheng, role_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_role_levelup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_role_levelup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_role_levelup, role_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_avatar_on, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_avatar_on, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_avatar_on, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_toukuang_on, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_toukuang_on, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_toukuang_on, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_chat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_chat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_chat, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_chat, text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, player_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, toukuang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_chat, name_color_),
  2,
  0,
  3,
  4,
  5,
  1,
  7,
  6,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gonggao, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gonggao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gonggao, text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_gm_command, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_gm_command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_gm_command, text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gm_command, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gm_command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gm_command, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gm_command, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gm_command, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gm_command, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_gm_command, value3s_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_name, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_name, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_name, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_info, info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_data, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_player_data, region_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_start_open_box, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_start_open_box, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_start_open_box, slot_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_end_open_box, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_end_open_box, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_end_open_box, slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_end_open_box, is_jewel_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_end_open_box, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_end_open_box, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_end_open_box, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_end_open_box, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_end_open_box, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_end_open_box, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_end_open_box, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_end_open_box, value3s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_end_open_box, jewel_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_item_on, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_item_on, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_item_on, item_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_buy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_buy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_buy, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_buy, num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_buy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_buy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_buy, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_buy, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_buy, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_buy, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_buy, value3s_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_sell, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_sell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_sell, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_sell, num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_direct_buy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_direct_buy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_direct_buy, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_direct_buy, num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_post_new_list, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_post_new_list, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_post_new_list, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_post_new_list, post_news_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_post_new_delete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_post_new_delete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::msg_post_new_delete, player_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_look, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_look, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_look, posts_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_post_read, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_post_read, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_post_read, post_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_post_get, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_post_get, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_post_get, post_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get, value3s_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_post_delete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_post_delete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_post_delete, post_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get_all, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get_all, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get_all, post_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get_all, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get_all, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get_all, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get_all, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_get_all, value3s_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_delete_all, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_delete_all, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_post_delete_all, post_guids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_fenxiang_num, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_fenxiang_num, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_fenxiang_num, fenxiang_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_fenxiang_num, fenxiang_total_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_libao, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_libao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_libao, code_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_libao, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_libao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_libao, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_libao, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_libao, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_libao, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_libao, value3s_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_recharge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_recharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_recharge, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_recharge, pt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_recharge, code_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_recharge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_recharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_recharge, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_recharge, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_recharge, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_recharge, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_recharge, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_recharge, value3s_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_infomation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_infomation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_infomation, info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_apply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_apply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_apply, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_apply, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_item_apply, item_index_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_apply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_apply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_apply, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_apply, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_apply, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_apply, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_item_apply, value3s_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_achieve, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_achieve, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_achieve, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_achieve, num_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_achieve, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_achieve, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_achieve, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_level_reward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_level_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_level_reward, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_level_reward, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_level_reward, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_level_reward, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_level_reward, value3s_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_task, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_task, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_task, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_task, num_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_task, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_task, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_task, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_fashion_on, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_fashion_on, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_fashion_on, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_fashion_on, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_daily, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_daily, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_daily, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_battle_daily, num_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_daily, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_daily, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_daily, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_daily_reward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_daily_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_daily_reward, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_level_reward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_level_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_level_reward, level_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_vip_reward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_vip_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_vip_reward, type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_vip_reward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_vip_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_vip_reward, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_vip_reward, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_vip_reward, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_vip_reward, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_vip_reward, value3s_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_duobao, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_duobao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_duobao, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_sys_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_sys_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_sys_info, text_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::protocol::game::smsg_error)},
  { 9, 15, sizeof(::protocol::game::cmsg_login_player)},
  { 16, 26, sizeof(::protocol::game::smsg_login_player)},
  { 31, 38, sizeof(::protocol::game::smsg_checkdata)},
  { 40, 46, sizeof(::protocol::game::smsg_post_num)},
  { 47, 53, sizeof(::protocol::game::cmsg_player_look)},
  { 54, 61, sizeof(::protocol::game::smsg_player_look)},
  { 63, 69, sizeof(::protocol::game::cmsg_role_on)},
  { 70, 76, sizeof(::protocol::game::cmsg_role_hecheng)},
  { 77, 83, sizeof(::protocol::game::smsg_role_hecheng)},
  { 84, 90, sizeof(::protocol::game::cmsg_role_levelup)},
  { 91, 97, sizeof(::protocol::game::cmsg_avatar_on)},
  { 98, 104, sizeof(::protocol::game::cmsg_toukuang_on)},
  { 105, 112, sizeof(::protocol::game::cmsg_chat)},
  { 114, 130, sizeof(::protocol::game::smsg_chat)},
  { 141, 147, sizeof(::protocol::game::smsg_gonggao)},
  { 148, 154, sizeof(::protocol::game::cmsg_gm_command)},
  { 155, 165, sizeof(::protocol::game::smsg_gm_command)},
  { 170, 176, sizeof(::protocol::game::cmsg_player_name)},
  { 177, 183, sizeof(::protocol::game::cmsg_player_info)},
  { 184, 191, sizeof(::protocol::game::cmsg_player_data)},
  { 193, 199, sizeof(::protocol::game::cmsg_start_open_box)},
  { 200, 207, sizeof(::protocol::game::cmsg_end_open_box)},
  { 209, 221, sizeof(::protocol::game::smsg_end_open_box)},
  { 228, 234, sizeof(::protocol::game::cmsg_battle_item_on)},
  { 235, 242, sizeof(::protocol::game::cmsg_item_buy)},
  { 244, 254, sizeof(::protocol::game::smsg_item_buy)},
  { 259, 266, sizeof(::protocol::game::cmsg_item_sell)},
  { 268, 275, sizeof(::protocol::game::cmsg_item_direct_buy)},
  { 277, 284, sizeof(::protocol::game::msg_post_new_list)},
  { 286, 292, sizeof(::protocol::game::msg_post_new_delete)},
  { 293, 299, sizeof(::protocol::game::smsg_post_look)},
  { 300, 306, sizeof(::protocol::game::cmsg_post_read)},
  { 307, 313, sizeof(::protocol::game::cmsg_post_get)},
  { 314, 324, sizeof(::protocol::game::smsg_post_get)},
  { 329, 335, sizeof(::protocol::game::cmsg_post_delete)},
  { 336, 347, sizeof(::protocol::game::smsg_post_get_all)},
  { 353, 359, sizeof(::protocol::game::smsg_post_delete_all)},
  { 360, 367, sizeof(::protocol::game::smsg_fenxiang_num)},
  { 369, 375, sizeof(::protocol::game::cmsg_libao)},
  { 376, 386, sizeof(::protocol::game::smsg_libao)},
  { 391, 399, sizeof(::protocol::game::cmsg_recharge)},
  { 402, 413, sizeof(::protocol::game::smsg_recharge)},
  { 419, 425, sizeof(::protocol::game::cmsg_infomation)},
  { 426, 434, sizeof(::protocol::game::cmsg_item_apply)},
  { 437, 447, sizeof(::protocol::game::smsg_item_apply)},
  { 452, 459, sizeof(::protocol::game::cmsg_battle_achieve)},
  { 461, 467, sizeof(::protocol::game::cmsg_achieve)},
  { 468, 478, sizeof(::protocol::game::smsg_level_reward)},
  { 483, 490, sizeof(::protocol::game::cmsg_battle_task)},
  { 492, 498, sizeof(::protocol::game::cmsg_task)},
  { 499, 506, sizeof(::protocol::game::cmsg_fashion_on)},
  { 508, 515, sizeof(::protocol::game::cmsg_battle_daily)},
  { 517, 523, sizeof(::protocol::game::cmsg_daily)},
  { 524, 530, sizeof(::protocol::game::cmsg_daily_reward)},
  { 531, 537, sizeof(::protocol::game::cmsg_level_reward)},
  { 538, 544, sizeof(::protocol::game::cmsg_vip_reward)},
  { 545, 555, sizeof(::protocol::game::smsg_vip_reward)},
  { 560, 566, sizeof(::protocol::game::smsg_duobao)},
  { 567, 573, sizeof(::protocol::game::smsg_sys_info)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_login_player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_login_player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_checkdata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_post_num_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_player_look_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_player_look_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_role_on_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_role_hecheng_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_role_hecheng_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_role_levelup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_avatar_on_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_toukuang_on_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_chat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_chat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_gonggao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_gm_command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_gm_command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_player_name_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_player_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_player_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_start_open_box_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_end_open_box_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_end_open_box_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_battle_item_on_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_item_buy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_item_buy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_item_sell_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_item_direct_buy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_msg_post_new_list_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_msg_post_new_delete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_post_look_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_post_read_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_post_get_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_post_get_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_post_delete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_post_get_all_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_post_delete_all_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_fenxiang_num_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_libao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_libao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_recharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_recharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_infomation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_item_apply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_item_apply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_battle_achieve_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_achieve_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_level_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_battle_task_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_task_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_fashion_on_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_battle_daily_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_daily_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_daily_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_level_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_vip_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_vip_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_duobao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_sys_info_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msg_hall.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 60);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016msg_hall.proto\022\rprotocol.game\032\tacc.pro"
      "to\032\014player.proto\032\nrole.proto\032\020battle_his"
      ".proto\032\npost.proto\032\016post_new.proto\"(\n\nsm"
      "sg_error\022\014\n\004code\030\001 \002(\005\022\014\n\004text\030\002 \001(\t\",\n\021"
      "cmsg_login_player\022\027\n\003acc\030\001 \001(\0132\n.dhc.acc"
      "_t\"\234\001\n\021smsg_login_player\022\035\n\006player\030\001 \002(\013"
      "2\r.dhc.player_t\022\032\n\005roles\030\002 \003(\0132\013.dhc.rol"
      "e_t\022%\n\nbattle_his\030\003 \003(\0132\021.dhc.battle_his"
      "_t\022\020\n\010post_num\030\004 \002(\005\022\023\n\013server_time\030\005 \002("
      "\004\"K\n\016smsg_checkdata\022\035\n\006player\030\001 \002(\0132\r.dh"
      "c.player_t\022\032\n\005roles\030\002 \003(\0132\013.dhc.role_t\"!"
      "\n\rsmsg_post_num\022\020\n\010post_num\030\001 \002(\005\"\'\n\020cms"
      "g_player_look\022\023\n\013target_guid\030\001 \002(\004\"X\n\020sm"
      "sg_player_look\022\035\n\006player\030\001 \002(\0132\r.dhc.pla"
      "yer_t\022%\n\nbattle_his\030\n \003(\0132\021.dhc.battle_h"
      "is_t\"!\n\014cmsg_role_on\022\021\n\trole_guid\030\001 \002(\004\""
      "$\n\021cmsg_role_hecheng\022\017\n\007role_id\030\001 \002(\005\".\n"
      "\021smsg_role_hecheng\022\031\n\004role\030\001 \002(\0132\013.dhc.r"
      "ole_t\"&\n\021cmsg_role_levelup\022\021\n\trole_guid\030"
      "\001 \002(\004\"\034\n\016cmsg_avatar_on\022\n\n\002id\030\001 \002(\005\"\036\n\020c"
      "msg_toukuang_on\022\n\n\002id\030\001 \002(\005\"\'\n\tcmsg_chat"
      "\022\014\n\004type\030\001 \002(\005\022\014\n\004text\030\002 \002(\t\"\304\001\n\tsmsg_ch"
      "at\022\023\n\013player_guid\030\001 \002(\004\022\023\n\013player_name\030\002"
      " \002(\t\022\013\n\003sex\030\003 \002(\005\022\r\n\005level\030\004 \002(\005\022\014\n\004type"
      "\030\005 \002(\005\022\014\n\004text\030\006 \002(\t\022\014\n\004time\030\007 \002(\004\022\016\n\006av"
      "atar\030\010 \001(\005\022\020\n\010toukuang\030\n \001(\005\022\021\n\tregion_i"
      "d\030\013 \001(\005\022\022\n\nname_color\030\014 \001(\005\"\034\n\014smsg_gong"
      "gao\022\014\n\004text\030\001 \002(\t\"\037\n\017cmsg_gm_command\022\014\n\004"
      "text\030\001 \002(\t\"o\n\017smsg_gm_command\022\032\n\005roles\030\001"
      " \003(\0132\013.dhc.role_t\022\r\n\005types\030\002 \003(\005\022\017\n\007valu"
      "e1s\030\003 \003(\005\022\017\n\007value2s\030\004 \003(\005\022\017\n\007value3s\030\005 "
      "\003(\005\" \n\020cmsg_player_name\022\014\n\004name\030\001 \002(\t\" \n"
      "\020cmsg_player_info\022\014\n\004info\030\001 \002(\t\"2\n\020cmsg_"
      "player_data\022\013\n\003sex\030\001 \002(\005\022\021\n\tregion_id\030\002 "
      "\002(\005\"#\n\023cmsg_start_open_box\022\014\n\004slot\030\001 \002(\005"
      "\"3\n\021cmsg_end_open_box\022\014\n\004slot\030\001 \002(\005\022\020\n\010i"
      "s_jewel\030\002 \002(\005\"\214\001\n\021smsg_end_open_box\022\n\n\002i"
      "d\030\001 \002(\005\022\032\n\005roles\030\002 \003(\0132\013.dhc.role_t\022\r\n\005t"
      "ypes\030\003 \003(\005\022\017\n\007value1s\030\004 \003(\005\022\017\n\007value2s\030\005"
      " \003(\005\022\017\n\007value3s\030\006 \003(\005\022\r\n\005jewel\030\007 \002(\005\"&\n\023"
      "cmsg_battle_item_on\022\017\n\007item_id\030\001 \002(\005\"(\n\r"
      "cmsg_item_buy\022\n\n\002id\030\001 \002(\005\022\013\n\003num\030\002 \002(\005\"m"
      "\n\rsmsg_item_buy\022\032\n\005roles\030\001 \003(\0132\013.dhc.rol"
      "e_t\022\r\n\005types\030\002 \003(\005\022\017\n\007value1s\030\003 \003(\005\022\017\n\007v"
      "alue2s\030\004 \003(\005\022\017\n\007value3s\030\005 \003(\005\")\n\016cmsg_it"
      "em_sell\022\n\n\002id\030\001 \002(\005\022\013\n\003num\030\002 \002(\005\"/\n\024cmsg"
      "_item_direct_buy\022\n\n\002id\030\001 \002(\005\022\013\n\003num\030\002 \002("
      "\005\"L\n\021msg_post_new_list\022\023\n\013player_guid\030\001 "
      "\002(\004\022\"\n\tpost_news\030\002 \003(\0132\017.dhc.post_new_t\""
      "*\n\023msg_post_new_delete\022\023\n\013player_guid\030\001 "
      "\002(\004\",\n\016smsg_post_look\022\032\n\005posts\030\001 \003(\0132\013.d"
      "hc.post_t\"#\n\016cmsg_post_read\022\021\n\tpost_guid"
      "\030\001 \002(\004\"\"\n\rcmsg_post_get\022\021\n\tpost_guid\030\001 \002"
      "(\004\"m\n\rsmsg_post_get\022\032\n\005roles\030\001 \003(\0132\013.dhc"
      ".role_t\022\r\n\005types\030\002 \003(\005\022\017\n\007value1s\030\003 \003(\005\022"
      "\017\n\007value2s\030\004 \003(\005\022\017\n\007value3s\030\005 \003(\005\"%\n\020cms"
      "g_post_delete\022\021\n\tpost_guid\030\001 \002(\004\"\205\001\n\021sms"
      "g_post_get_all\022\022\n\npost_guids\030\001 \003(\004\022\032\n\005ro"
      "les\030\002 \003(\0132\013.dhc.role_t\022\r\n\005types\030\003 \003(\005\022\017\n"
      "\007value1s\030\004 \003(\005\022\017\n\007value2s\030\005 \003(\005\022\017\n\007value"
      "3s\030\006 \003(\005\"*\n\024smsg_post_delete_all\022\022\n\npost"
      "_guids\030\001 \003(\004\"E\n\021smsg_fenxiang_num\022\024\n\014fen"
      "xiang_num\030\001 \002(\005\022\032\n\022fenxiang_total_num\030\002 "
      "\002(\005\"\032\n\ncmsg_libao\022\014\n\004code\030\001 \002(\t\"j\n\nsmsg_"
      "libao\022\032\n\005roles\030\001 \003(\0132\013.dhc.role_t\022\r\n\005typ"
      "es\030\002 \003(\005\022\017\n\007value1s\030\003 \003(\005\022\017\n\007value2s\030\004 \003"
      "(\005\022\017\n\007value3s\030\005 \003(\005\"5\n\rcmsg_recharge\022\n\n\002"
      "id\030\001 \002(\005\022\n\n\002pt\030\002 \002(\t\022\014\n\004code\030\003 \003(\t\"z\n\rsm"
      "sg_recharge\022\013\n\003rid\030\001 \002(\005\022\032\n\005roles\030\002 \003(\0132"
      "\013.dhc.role_t\022\r\n\005types\030\003 \003(\005\022\017\n\007value1s\030\004"
      " \003(\005\022\017\n\007value2s\030\005 \003(\005\022\017\n\007value3s\030\006 \003(\005\"\037"
      "\n\017cmsg_infomation\022\014\n\004info\030\001 \002(\t\"C\n\017cmsg_"
      "item_apply\022\017\n\007item_id\030\001 \002(\005\022\013\n\003num\030\002 \002(\005"
      "\022\022\n\nitem_index\030\003 \001(\005\"o\n\017smsg_item_apply\022"
      "\032\n\005roles\030\001 \003(\0132\013.dhc.role_t\022\r\n\005types\030\002 \003"
      "(\005\022\017\n\007value1s\030\003 \003(\005\022\017\n\007value2s\030\004 \003(\005\022\017\n\007"
      "value3s\030\005 \003(\005\".\n\023cmsg_battle_achieve\022\n\n\002"
      "id\030\001 \003(\005\022\013\n\003num\030\002 \003(\005\"\032\n\014cmsg_achieve\022\n\n"
      "\002id\030\001 \002(\005\"q\n\021smsg_level_reward\022\032\n\005roles\030"
      "\001 \003(\0132\013.dhc.role_t\022\r\n\005types\030\002 \003(\005\022\017\n\007val"
      "ue1s\030\003 \003(\005\022\017\n\007value2s\030\004 \003(\005\022\017\n\007value3s\030\005"
      " \003(\005\"+\n\020cmsg_battle_task\022\n\n\002id\030\001 \003(\005\022\013\n\003"
      "num\030\002 \003(\005\"\027\n\tcmsg_task\022\n\n\002id\030\001 \002(\005\"+\n\017cm"
      "sg_fashion_on\022\n\n\002id\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\""
      ",\n\021cmsg_battle_daily\022\n\n\002id\030\001 \003(\005\022\013\n\003num\030"
      "\002 \003(\005\"\030\n\ncmsg_daily\022\n\n\002id\030\001 \002(\005\"\037\n\021cmsg_"
      "daily_reward\022\n\n\002id\030\001 \002(\005\"\"\n\021cmsg_level_r"
      "eward\022\r\n\005level\030\001 \002(\005\"\037\n\017cmsg_vip_reward\022"
      "\014\n\004type\030\001 \002(\005\"o\n\017smsg_vip_reward\022\032\n\005role"
      "s\030\001 \003(\0132\013.dhc.role_t\022\r\n\005types\030\002 \003(\005\022\017\n\007v"
      "alue1s\030\003 \003(\005\022\017\n\007value2s\030\004 \003(\005\022\017\n\007value3s"
      "\030\005 \003(\005\"\031\n\013smsg_duobao\022\n\n\002id\030\001 \002(\005\"\035\n\rsms"
      "g_sys_info\022\014\n\004text\030\001 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3704);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_hall.proto", &protobuf_RegisterTypes);
  ::protobuf_acc_2eproto::AddDescriptors();
  ::protobuf_player_2eproto::AddDescriptors();
  ::protobuf_role_2eproto::AddDescriptors();
  ::protobuf_battle_5fhis_2eproto::AddDescriptors();
  ::protobuf_post_2eproto::AddDescriptors();
  ::protobuf_post_5fnew_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_5fhall_2eproto
namespace protocol {
namespace game {

// ===================================================================

void smsg_error::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_error::kCodeFieldNumber;
const int smsg_error::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_error::smsg_error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_error.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_error)
}
smsg_error::smsg_error(const smsg_error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_error)
}

void smsg_error::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

smsg_error::~smsg_error() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_error)
  SharedDtor();
}

void smsg_error::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void smsg_error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_error::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_error& smsg_error::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_error.base);
  return *internal_default_instance();
}


void smsg_error::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    text_.ClearNonDefaultToEmptyNoArena();
  }
  set_changed();
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.smsg_error.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_error)
  return false;
#undef DO_
}

void smsg_error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_error.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_error)
}

::google::protobuf::uint8* smsg_error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_error.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_error)
  return target;
}

size_t smsg_error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_error)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // optional string text = 2;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_error)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_error)
    MergeFrom(*source);
  }
}

void smsg_error::MergeFrom(const smsg_error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_error::CopyFrom(const smsg_error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_error::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void smsg_error::Swap(smsg_error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_error::InternalSwap(smsg_error* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_error::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_login_player::InitAsDefaultInstance() {
  ::protocol::game::_cmsg_login_player_default_instance_._instance.get_mutable()->acc_ = const_cast< ::dhc::acc_t*>(
      ::dhc::acc_t::internal_default_instance());
}
void cmsg_login_player::clear_acc() {
  if (acc_ != NULL) acc_->Clear();
  clear_has_acc();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_login_player::kAccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_login_player::cmsg_login_player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_login_player.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_login_player)
}
cmsg_login_player::cmsg_login_player(const cmsg_login_player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_acc()) {
    acc_ = new ::dhc::acc_t(*from.acc_);
  } else {
    acc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_login_player)
}

void cmsg_login_player::SharedCtor() {
  acc_ = NULL;
}

cmsg_login_player::~cmsg_login_player() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_login_player)
  SharedDtor();
}

void cmsg_login_player::SharedDtor() {
  if (this != internal_default_instance()) delete acc_;
}

void cmsg_login_player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_login_player::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_login_player& cmsg_login_player::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_login_player.base);
  return *internal_default_instance();
}


void cmsg_login_player::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_login_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(acc_ != NULL);
    acc_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_login_player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_login_player)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dhc.acc_t acc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_login_player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_login_player)
  return false;
#undef DO_
}

void cmsg_login_player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_login_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .dhc.acc_t acc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_acc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_login_player)
}

::google::protobuf::uint8* cmsg_login_player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_login_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .dhc.acc_t acc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_acc(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_login_player)
  return target;
}

size_t cmsg_login_player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_login_player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .dhc.acc_t acc = 1;
  if (has_acc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *acc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_login_player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_login_player)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_login_player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_login_player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_login_player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_login_player)
    MergeFrom(*source);
  }
}

void cmsg_login_player::MergeFrom(const cmsg_login_player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_login_player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_acc()) {
    mutable_acc()->::dhc::acc_t::MergeFrom(from.acc());
  }
}

void cmsg_login_player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_login_player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_login_player::CopyFrom(const cmsg_login_player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_login_player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_login_player::IsInitialized() const {
  return true;
}

void cmsg_login_player::Swap(cmsg_login_player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_login_player::InternalSwap(cmsg_login_player* other) {
  using std::swap;
  swap(acc_, other->acc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_login_player::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_login_player::InitAsDefaultInstance() {
  ::protocol::game::_smsg_login_player_default_instance_._instance.get_mutable()->player_ = const_cast< ::dhc::player_t*>(
      ::dhc::player_t::internal_default_instance());
}
void smsg_login_player::clear_player() {
  if (player_ != NULL) player_->Clear();
  clear_has_player();
}
void smsg_login_player::clear_roles() {
  roles_.Clear();
}
void smsg_login_player::clear_battle_his() {
  battle_his_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_login_player::kPlayerFieldNumber;
const int smsg_login_player::kRolesFieldNumber;
const int smsg_login_player::kBattleHisFieldNumber;
const int smsg_login_player::kPostNumFieldNumber;
const int smsg_login_player::kServerTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_login_player::smsg_login_player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_login_player.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_login_player)
}
smsg_login_player::smsg_login_player(const smsg_login_player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      battle_his_(from.battle_his_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::dhc::player_t(*from.player_);
  } else {
    player_ = NULL;
  }
  ::memcpy(&server_time_, &from.server_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&post_num_) -
    reinterpret_cast<char*>(&server_time_)) + sizeof(post_num_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_login_player)
}

void smsg_login_player::SharedCtor() {
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&post_num_) -
      reinterpret_cast<char*>(&player_)) + sizeof(post_num_));
}

smsg_login_player::~smsg_login_player() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_login_player)
  SharedDtor();
}

void smsg_login_player::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
}

void smsg_login_player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_login_player::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_login_player& smsg_login_player::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_login_player.base);
  return *internal_default_instance();
}


void smsg_login_player::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_login_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  battle_his_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(player_ != NULL);
    player_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&server_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&post_num_) -
        reinterpret_cast<char*>(&server_time_)) + sizeof(post_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_login_player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_login_player)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .dhc.player_t player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dhc.role_t roles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dhc.battle_his_t battle_his = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_battle_his()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 post_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_post_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &post_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 server_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_server_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_login_player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_login_player)
  return false;
#undef DO_
}

void smsg_login_player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_login_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .dhc.player_t player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_player(), output);
  }

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated .dhc.battle_his_t battle_his = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->battle_his_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->battle_his(static_cast<int>(i)),
      output);
  }

  // required int32 post_num = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->post_num(), output);
  }

  // required uint64 server_time = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->server_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_login_player)
}

::google::protobuf::uint8* smsg_login_player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_login_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .dhc.player_t player = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_player(), deterministic, target);
  }

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated .dhc.battle_his_t battle_his = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->battle_his_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->battle_his(static_cast<int>(i)), deterministic, target);
  }

  // required int32 post_num = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->post_num(), target);
  }

  // required uint64 server_time = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->server_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_login_player)
  return target;
}

size_t smsg_login_player::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.smsg_login_player)
  size_t total_size = 0;

  if (has_player()) {
    // required .dhc.player_t player = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);
  }

  if (has_server_time()) {
    // required uint64 server_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());
  }

  if (has_post_num()) {
    // required int32 post_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->post_num());
  }

  return total_size;
}
size_t smsg_login_player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_login_player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .dhc.player_t player = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);

    // required uint64 server_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());

    // required int32 post_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->post_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .dhc.role_t roles = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated .dhc.battle_his_t battle_his = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->battle_his_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->battle_his(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_login_player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_login_player)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_login_player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_login_player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_login_player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_login_player)
    MergeFrom(*source);
  }
}

void smsg_login_player::MergeFrom(const smsg_login_player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_login_player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  battle_his_.MergeFrom(from.battle_his_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_player()->::dhc::player_t::MergeFrom(from.player());
    }
    if (cached_has_bits & 0x00000002u) {
      server_time_ = from.server_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      post_num_ = from.post_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_login_player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_login_player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_login_player::CopyFrom(const smsg_login_player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_login_player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_login_player::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void smsg_login_player::Swap(smsg_login_player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_login_player::InternalSwap(smsg_login_player* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  CastToBase(&battle_his_)->InternalSwap(CastToBase(&other->battle_his_));
  swap(player_, other->player_);
  swap(server_time_, other->server_time_);
  swap(post_num_, other->post_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_login_player::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_checkdata::InitAsDefaultInstance() {
  ::protocol::game::_smsg_checkdata_default_instance_._instance.get_mutable()->player_ = const_cast< ::dhc::player_t*>(
      ::dhc::player_t::internal_default_instance());
}
void smsg_checkdata::clear_player() {
  if (player_ != NULL) player_->Clear();
  clear_has_player();
}
void smsg_checkdata::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_checkdata::kPlayerFieldNumber;
const int smsg_checkdata::kRolesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_checkdata::smsg_checkdata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_checkdata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_checkdata)
}
smsg_checkdata::smsg_checkdata(const smsg_checkdata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::dhc::player_t(*from.player_);
  } else {
    player_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_checkdata)
}

void smsg_checkdata::SharedCtor() {
  player_ = NULL;
}

smsg_checkdata::~smsg_checkdata() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_checkdata)
  SharedDtor();
}

void smsg_checkdata::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
}

void smsg_checkdata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_checkdata::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_checkdata& smsg_checkdata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_checkdata.base);
  return *internal_default_instance();
}


void smsg_checkdata::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_checkdata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(player_ != NULL);
    player_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_checkdata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_checkdata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .dhc.player_t player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dhc.role_t roles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_checkdata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_checkdata)
  return false;
#undef DO_
}

void smsg_checkdata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_checkdata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .dhc.player_t player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_player(), output);
  }

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->roles(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_checkdata)
}

::google::protobuf::uint8* smsg_checkdata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_checkdata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .dhc.player_t player = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_player(), deterministic, target);
  }

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->roles(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_checkdata)
  return target;
}

size_t smsg_checkdata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_checkdata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .dhc.player_t player = 1;
  if (has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);
  }
  // repeated .dhc.role_t roles = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_checkdata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_checkdata)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_checkdata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_checkdata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_checkdata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_checkdata)
    MergeFrom(*source);
  }
}

void smsg_checkdata::MergeFrom(const smsg_checkdata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_checkdata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  if (from.has_player()) {
    mutable_player()->::dhc::player_t::MergeFrom(from.player());
  }
}

void smsg_checkdata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_checkdata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_checkdata::CopyFrom(const smsg_checkdata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_checkdata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_checkdata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void smsg_checkdata::Swap(smsg_checkdata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_checkdata::InternalSwap(smsg_checkdata* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  swap(player_, other->player_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_checkdata::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_post_num::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_post_num::kPostNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_post_num::smsg_post_num()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_post_num.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_post_num)
}
smsg_post_num::smsg_post_num(const smsg_post_num& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  post_num_ = from.post_num_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_post_num)
}

void smsg_post_num::SharedCtor() {
  post_num_ = 0;
}

smsg_post_num::~smsg_post_num() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_post_num)
  SharedDtor();
}

void smsg_post_num::SharedDtor() {
}

void smsg_post_num::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_post_num::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_post_num& smsg_post_num::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_post_num.base);
  return *internal_default_instance();
}


void smsg_post_num::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_post_num)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  post_num_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_post_num::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_post_num)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 post_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_post_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &post_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_post_num)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_post_num)
  return false;
#undef DO_
}

void smsg_post_num::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_post_num)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 post_num = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->post_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_post_num)
}

::google::protobuf::uint8* smsg_post_num::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_post_num)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 post_num = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->post_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_post_num)
  return target;
}

size_t smsg_post_num::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_post_num)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 post_num = 1;
  if (has_post_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->post_num());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_post_num::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_post_num)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_post_num* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_post_num>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_post_num)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_post_num)
    MergeFrom(*source);
  }
}

void smsg_post_num::MergeFrom(const smsg_post_num& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_post_num)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_post_num()) {
    set_post_num(from.post_num());
  }
}

void smsg_post_num::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_post_num)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_post_num::CopyFrom(const smsg_post_num& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_post_num)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_post_num::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void smsg_post_num::Swap(smsg_post_num* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_post_num::InternalSwap(smsg_post_num* other) {
  using std::swap;
  swap(post_num_, other->post_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_post_num::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_player_look::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_player_look::kTargetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_player_look::cmsg_player_look()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_player_look.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_player_look)
}
cmsg_player_look::cmsg_player_look(const cmsg_player_look& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_guid_ = from.target_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_player_look)
}

void cmsg_player_look::SharedCtor() {
  target_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_player_look::~cmsg_player_look() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_player_look)
  SharedDtor();
}

void cmsg_player_look::SharedDtor() {
}

void cmsg_player_look::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_player_look::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_player_look& cmsg_player_look::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_player_look.base);
  return *internal_default_instance();
}


void cmsg_player_look::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_player_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_player_look::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_player_look)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_player_look)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_player_look)
  return false;
#undef DO_
}

void cmsg_player_look::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_player_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_player_look)
}

::google::protobuf::uint8* cmsg_player_look::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_player_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_player_look)
  return target;
}

size_t cmsg_player_look::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_player_look)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 target_guid = 1;
  if (has_target_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_guid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_player_look::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_player_look)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_player_look* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_player_look>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_player_look)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_player_look)
    MergeFrom(*source);
  }
}

void cmsg_player_look::MergeFrom(const cmsg_player_look& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_player_look)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_guid()) {
    set_target_guid(from.target_guid());
  }
}

void cmsg_player_look::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_player_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_player_look::CopyFrom(const cmsg_player_look& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_player_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_player_look::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_player_look::Swap(cmsg_player_look* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_player_look::InternalSwap(cmsg_player_look* other) {
  using std::swap;
  swap(target_guid_, other->target_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_player_look::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_player_look::InitAsDefaultInstance() {
  ::protocol::game::_smsg_player_look_default_instance_._instance.get_mutable()->player_ = const_cast< ::dhc::player_t*>(
      ::dhc::player_t::internal_default_instance());
}
void smsg_player_look::clear_player() {
  if (player_ != NULL) player_->Clear();
  clear_has_player();
}
void smsg_player_look::clear_battle_his() {
  battle_his_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_player_look::kPlayerFieldNumber;
const int smsg_player_look::kBattleHisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_player_look::smsg_player_look()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_player_look.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_player_look)
}
smsg_player_look::smsg_player_look(const smsg_player_look& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      battle_his_(from.battle_his_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::dhc::player_t(*from.player_);
  } else {
    player_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_player_look)
}

void smsg_player_look::SharedCtor() {
  player_ = NULL;
}

smsg_player_look::~smsg_player_look() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_player_look)
  SharedDtor();
}

void smsg_player_look::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
}

void smsg_player_look::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_player_look::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_player_look& smsg_player_look::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_player_look.base);
  return *internal_default_instance();
}


void smsg_player_look::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_player_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  battle_his_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(player_ != NULL);
    player_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_player_look::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_player_look)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .dhc.player_t player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dhc.battle_his_t battle_his = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_battle_his()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_player_look)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_player_look)
  return false;
#undef DO_
}

void smsg_player_look::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_player_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .dhc.player_t player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_player(), output);
  }

  // repeated .dhc.battle_his_t battle_his = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->battle_his_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->battle_his(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_player_look)
}

::google::protobuf::uint8* smsg_player_look::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_player_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .dhc.player_t player = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_player(), deterministic, target);
  }

  // repeated .dhc.battle_his_t battle_his = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->battle_his_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->battle_his(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_player_look)
  return target;
}

size_t smsg_player_look::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_player_look)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .dhc.player_t player = 1;
  if (has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);
  }
  // repeated .dhc.battle_his_t battle_his = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->battle_his_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->battle_his(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_player_look::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_player_look)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_player_look* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_player_look>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_player_look)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_player_look)
    MergeFrom(*source);
  }
}

void smsg_player_look::MergeFrom(const smsg_player_look& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_player_look)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  battle_his_.MergeFrom(from.battle_his_);
  if (from.has_player()) {
    mutable_player()->::dhc::player_t::MergeFrom(from.player());
  }
}

void smsg_player_look::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_player_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_player_look::CopyFrom(const smsg_player_look& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_player_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_player_look::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void smsg_player_look::Swap(smsg_player_look* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_player_look::InternalSwap(smsg_player_look* other) {
  using std::swap;
  CastToBase(&battle_his_)->InternalSwap(CastToBase(&other->battle_his_));
  swap(player_, other->player_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_player_look::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_role_on::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_role_on::kRoleGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_role_on::cmsg_role_on()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_role_on.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_role_on)
}
cmsg_role_on::cmsg_role_on(const cmsg_role_on& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_guid_ = from.role_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_role_on)
}

void cmsg_role_on::SharedCtor() {
  role_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_role_on::~cmsg_role_on() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_role_on)
  SharedDtor();
}

void cmsg_role_on::SharedDtor() {
}

void cmsg_role_on::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_role_on::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_role_on& cmsg_role_on::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_role_on.base);
  return *internal_default_instance();
}


void cmsg_role_on::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_role_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_role_on::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_role_on)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 role_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_role_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_role_on)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_role_on)
  return false;
#undef DO_
}

void cmsg_role_on::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_role_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 role_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->role_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_role_on)
}

::google::protobuf::uint8* cmsg_role_on::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_role_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 role_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->role_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_role_on)
  return target;
}

size_t cmsg_role_on::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_role_on)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 role_guid = 1;
  if (has_role_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->role_guid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_role_on::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_role_on)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_role_on* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_role_on>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_role_on)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_role_on)
    MergeFrom(*source);
  }
}

void cmsg_role_on::MergeFrom(const cmsg_role_on& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_role_on)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role_guid()) {
    set_role_guid(from.role_guid());
  }
}

void cmsg_role_on::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_role_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_role_on::CopyFrom(const cmsg_role_on& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_role_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_role_on::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_role_on::Swap(cmsg_role_on* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_role_on::InternalSwap(cmsg_role_on* other) {
  using std::swap;
  swap(role_guid_, other->role_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_role_on::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_role_hecheng::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_role_hecheng::kRoleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_role_hecheng::cmsg_role_hecheng()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_role_hecheng.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_role_hecheng)
}
cmsg_role_hecheng::cmsg_role_hecheng(const cmsg_role_hecheng& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_id_ = from.role_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_role_hecheng)
}

void cmsg_role_hecheng::SharedCtor() {
  role_id_ = 0;
}

cmsg_role_hecheng::~cmsg_role_hecheng() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_role_hecheng)
  SharedDtor();
}

void cmsg_role_hecheng::SharedDtor() {
}

void cmsg_role_hecheng::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_role_hecheng::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_role_hecheng& cmsg_role_hecheng::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_role_hecheng.base);
  return *internal_default_instance();
}


void cmsg_role_hecheng::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_role_hecheng)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  role_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_role_hecheng::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_role_hecheng)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 role_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_role_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_role_hecheng)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_role_hecheng)
  return false;
#undef DO_
}

void cmsg_role_hecheng::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_role_hecheng)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 role_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->role_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_role_hecheng)
}

::google::protobuf::uint8* cmsg_role_hecheng::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_role_hecheng)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 role_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->role_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_role_hecheng)
  return target;
}

size_t cmsg_role_hecheng::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_role_hecheng)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 role_id = 1;
  if (has_role_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_role_hecheng::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_role_hecheng)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_role_hecheng* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_role_hecheng>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_role_hecheng)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_role_hecheng)
    MergeFrom(*source);
  }
}

void cmsg_role_hecheng::MergeFrom(const cmsg_role_hecheng& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_role_hecheng)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role_id()) {
    set_role_id(from.role_id());
  }
}

void cmsg_role_hecheng::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_role_hecheng)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_role_hecheng::CopyFrom(const cmsg_role_hecheng& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_role_hecheng)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_role_hecheng::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_role_hecheng::Swap(cmsg_role_hecheng* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_role_hecheng::InternalSwap(cmsg_role_hecheng* other) {
  using std::swap;
  swap(role_id_, other->role_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_role_hecheng::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_role_hecheng::InitAsDefaultInstance() {
  ::protocol::game::_smsg_role_hecheng_default_instance_._instance.get_mutable()->role_ = const_cast< ::dhc::role_t*>(
      ::dhc::role_t::internal_default_instance());
}
void smsg_role_hecheng::clear_role() {
  if (role_ != NULL) role_->Clear();
  clear_has_role();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_role_hecheng::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_role_hecheng::smsg_role_hecheng()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_role_hecheng.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_role_hecheng)
}
smsg_role_hecheng::smsg_role_hecheng(const smsg_role_hecheng& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_role()) {
    role_ = new ::dhc::role_t(*from.role_);
  } else {
    role_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_role_hecheng)
}

void smsg_role_hecheng::SharedCtor() {
  role_ = NULL;
}

smsg_role_hecheng::~smsg_role_hecheng() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_role_hecheng)
  SharedDtor();
}

void smsg_role_hecheng::SharedDtor() {
  if (this != internal_default_instance()) delete role_;
}

void smsg_role_hecheng::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_role_hecheng::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_role_hecheng& smsg_role_hecheng::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_role_hecheng.base);
  return *internal_default_instance();
}


void smsg_role_hecheng::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_role_hecheng)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(role_ != NULL);
    role_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_role_hecheng::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_role_hecheng)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .dhc.role_t role = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_role_hecheng)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_role_hecheng)
  return false;
#undef DO_
}

void smsg_role_hecheng::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_role_hecheng)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .dhc.role_t role = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_role(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_role_hecheng)
}

::google::protobuf::uint8* smsg_role_hecheng::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_role_hecheng)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .dhc.role_t role = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_role(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_role_hecheng)
  return target;
}

size_t smsg_role_hecheng::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_role_hecheng)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .dhc.role_t role = 1;
  if (has_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *role_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_role_hecheng::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_role_hecheng)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_role_hecheng* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_role_hecheng>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_role_hecheng)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_role_hecheng)
    MergeFrom(*source);
  }
}

void smsg_role_hecheng::MergeFrom(const smsg_role_hecheng& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_role_hecheng)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role()) {
    mutable_role()->::dhc::role_t::MergeFrom(from.role());
  }
}

void smsg_role_hecheng::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_role_hecheng)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_role_hecheng::CopyFrom(const smsg_role_hecheng& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_role_hecheng)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_role_hecheng::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void smsg_role_hecheng::Swap(smsg_role_hecheng* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_role_hecheng::InternalSwap(smsg_role_hecheng* other) {
  using std::swap;
  swap(role_, other->role_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_role_hecheng::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_role_levelup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_role_levelup::kRoleGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_role_levelup::cmsg_role_levelup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_role_levelup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_role_levelup)
}
cmsg_role_levelup::cmsg_role_levelup(const cmsg_role_levelup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_guid_ = from.role_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_role_levelup)
}

void cmsg_role_levelup::SharedCtor() {
  role_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_role_levelup::~cmsg_role_levelup() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_role_levelup)
  SharedDtor();
}

void cmsg_role_levelup::SharedDtor() {
}

void cmsg_role_levelup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_role_levelup::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_role_levelup& cmsg_role_levelup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_role_levelup.base);
  return *internal_default_instance();
}


void cmsg_role_levelup::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_role_levelup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_role_levelup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_role_levelup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 role_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_role_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_role_levelup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_role_levelup)
  return false;
#undef DO_
}

void cmsg_role_levelup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_role_levelup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 role_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->role_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_role_levelup)
}

::google::protobuf::uint8* cmsg_role_levelup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_role_levelup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 role_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->role_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_role_levelup)
  return target;
}

size_t cmsg_role_levelup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_role_levelup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 role_guid = 1;
  if (has_role_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->role_guid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_role_levelup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_role_levelup)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_role_levelup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_role_levelup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_role_levelup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_role_levelup)
    MergeFrom(*source);
  }
}

void cmsg_role_levelup::MergeFrom(const cmsg_role_levelup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_role_levelup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role_guid()) {
    set_role_guid(from.role_guid());
  }
}

void cmsg_role_levelup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_role_levelup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_role_levelup::CopyFrom(const cmsg_role_levelup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_role_levelup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_role_levelup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_role_levelup::Swap(cmsg_role_levelup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_role_levelup::InternalSwap(cmsg_role_levelup* other) {
  using std::swap;
  swap(role_guid_, other->role_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_role_levelup::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_avatar_on::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_avatar_on::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_avatar_on::cmsg_avatar_on()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_avatar_on.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_avatar_on)
}
cmsg_avatar_on::cmsg_avatar_on(const cmsg_avatar_on& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_avatar_on)
}

void cmsg_avatar_on::SharedCtor() {
  id_ = 0;
}

cmsg_avatar_on::~cmsg_avatar_on() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_avatar_on)
  SharedDtor();
}

void cmsg_avatar_on::SharedDtor() {
}

void cmsg_avatar_on::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_avatar_on::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_avatar_on& cmsg_avatar_on::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_avatar_on.base);
  return *internal_default_instance();
}


void cmsg_avatar_on::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_avatar_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_avatar_on::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_avatar_on)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_avatar_on)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_avatar_on)
  return false;
#undef DO_
}

void cmsg_avatar_on::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_avatar_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_avatar_on)
}

::google::protobuf::uint8* cmsg_avatar_on::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_avatar_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_avatar_on)
  return target;
}

size_t cmsg_avatar_on::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_avatar_on)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_avatar_on::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_avatar_on)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_avatar_on* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_avatar_on>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_avatar_on)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_avatar_on)
    MergeFrom(*source);
  }
}

void cmsg_avatar_on::MergeFrom(const cmsg_avatar_on& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_avatar_on)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void cmsg_avatar_on::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_avatar_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_avatar_on::CopyFrom(const cmsg_avatar_on& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_avatar_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_avatar_on::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_avatar_on::Swap(cmsg_avatar_on* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_avatar_on::InternalSwap(cmsg_avatar_on* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_avatar_on::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_toukuang_on::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_toukuang_on::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_toukuang_on::cmsg_toukuang_on()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_toukuang_on.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_toukuang_on)
}
cmsg_toukuang_on::cmsg_toukuang_on(const cmsg_toukuang_on& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_toukuang_on)
}

void cmsg_toukuang_on::SharedCtor() {
  id_ = 0;
}

cmsg_toukuang_on::~cmsg_toukuang_on() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_toukuang_on)
  SharedDtor();
}

void cmsg_toukuang_on::SharedDtor() {
}

void cmsg_toukuang_on::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_toukuang_on::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_toukuang_on& cmsg_toukuang_on::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_toukuang_on.base);
  return *internal_default_instance();
}


void cmsg_toukuang_on::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_toukuang_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_toukuang_on::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_toukuang_on)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_toukuang_on)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_toukuang_on)
  return false;
#undef DO_
}

void cmsg_toukuang_on::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_toukuang_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_toukuang_on)
}

::google::protobuf::uint8* cmsg_toukuang_on::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_toukuang_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_toukuang_on)
  return target;
}

size_t cmsg_toukuang_on::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_toukuang_on)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_toukuang_on::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_toukuang_on)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_toukuang_on* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_toukuang_on>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_toukuang_on)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_toukuang_on)
    MergeFrom(*source);
  }
}

void cmsg_toukuang_on::MergeFrom(const cmsg_toukuang_on& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_toukuang_on)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void cmsg_toukuang_on::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_toukuang_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_toukuang_on::CopyFrom(const cmsg_toukuang_on& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_toukuang_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_toukuang_on::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_toukuang_on::Swap(cmsg_toukuang_on* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_toukuang_on::InternalSwap(cmsg_toukuang_on* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_toukuang_on::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_chat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_chat::kTypeFieldNumber;
const int cmsg_chat::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_chat::cmsg_chat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_chat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_chat)
}
cmsg_chat::cmsg_chat(const cmsg_chat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_chat)
}

void cmsg_chat::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

cmsg_chat::~cmsg_chat() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_chat)
  SharedDtor();
}

void cmsg_chat::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_chat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_chat::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_chat& cmsg_chat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_chat.base);
  return *internal_default_instance();
}


void cmsg_chat::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    text_.ClearNonDefaultToEmptyNoArena();
  }
  set_changed();
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_chat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_chat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_chat.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_chat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_chat)
  return false;
#undef DO_
}

void cmsg_chat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_chat.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_chat)
}

::google::protobuf::uint8* cmsg_chat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_chat.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_chat)
  return target;
}

size_t cmsg_chat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.cmsg_chat)
  size_t total_size = 0;

  if (has_text()) {
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_type()) {
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t cmsg_chat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_chat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_chat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_chat)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_chat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_chat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_chat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_chat)
    MergeFrom(*source);
  }
}

void cmsg_chat::MergeFrom(const cmsg_chat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_chat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_chat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_chat::CopyFrom(const cmsg_chat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_chat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void cmsg_chat::Swap(cmsg_chat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_chat::InternalSwap(cmsg_chat* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_chat::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_chat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_chat::kPlayerGuidFieldNumber;
const int smsg_chat::kPlayerNameFieldNumber;
const int smsg_chat::kSexFieldNumber;
const int smsg_chat::kLevelFieldNumber;
const int smsg_chat::kTypeFieldNumber;
const int smsg_chat::kTextFieldNumber;
const int smsg_chat::kTimeFieldNumber;
const int smsg_chat::kAvatarFieldNumber;
const int smsg_chat::kToukuangFieldNumber;
const int smsg_chat::kRegionIdFieldNumber;
const int smsg_chat::kNameColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_chat::smsg_chat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_chat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_chat)
}
smsg_chat::smsg_chat(const smsg_chat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_player_name()) {
    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&name_color_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(name_color_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_chat)
}

void smsg_chat::SharedCtor() {
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_color_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(name_color_));
}

smsg_chat::~smsg_chat() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_chat)
  SharedDtor();
}

void smsg_chat::SharedDtor() {
  player_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void smsg_chat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_chat::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_chat& smsg_chat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_chat.base);
  return *internal_default_instance();
}


void smsg_chat::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_changed();
      player_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      set_changed();
      text_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(time_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&toukuang_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&name_color_) -
        reinterpret_cast<char*>(&toukuang_)) + sizeof(name_color_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_chat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_chat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string player_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->player_name().data(), static_cast<int>(this->player_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.smsg_chat.player_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string text = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.smsg_chat.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 avatar = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_avatar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 toukuang = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_toukuang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toukuang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 region_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 name_color = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_name_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_chat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_chat)
  return false;
#undef DO_
}

void smsg_chat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_guid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // required string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_chat.player_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->player_name(), output);
  }

  // required int32 sex = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }

  // required int32 level = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // required int32 type = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // required string text = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_chat.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->text(), output);
  }

  // required uint64 time = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->time(), output);
  }

  // optional int32 avatar = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->avatar(), output);
  }

  // optional int32 toukuang = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->toukuang(), output);
  }

  // optional int32 region_id = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->region_id(), output);
  }

  // optional int32 name_color = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->name_color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_chat)
}

::google::protobuf::uint8* smsg_chat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_guid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // required string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_chat.player_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->player_name(), target);
  }

  // required int32 sex = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }

  // required int32 level = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // required int32 type = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // required string text = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_chat.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->text(), target);
  }

  // required uint64 time = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->time(), target);
  }

  // optional int32 avatar = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->avatar(), target);
  }

  // optional int32 toukuang = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->toukuang(), target);
  }

  // optional int32 region_id = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->region_id(), target);
  }

  // optional int32 name_color = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->name_color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_chat)
  return target;
}

size_t smsg_chat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.smsg_chat)
  size_t total_size = 0;

  if (has_player_name()) {
    // required string player_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->player_name());
  }

  if (has_text()) {
    // required string text = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_player_guid()) {
    // required uint64 player_guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  if (has_sex()) {
    // required int32 sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  if (has_level()) {
    // required int32 level = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_type()) {
    // required int32 type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_time()) {
    // required uint64 time = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  return total_size;
}
size_t smsg_chat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_chat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000bf) ^ 0x000000bf) == 0) {  // All required fields are present.
    // required string player_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->player_name());

    // required string text = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required uint64 player_guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());

    // required int32 sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());

    // required int32 level = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required uint64 time = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 avatar = 8;
  if (has_avatar()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->avatar());
  }

  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 toukuang = 10;
    if (has_toukuang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toukuang());
    }

    // optional int32 region_id = 11;
    if (has_region_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->region_id());
    }

    // optional int32 name_color = 12;
    if (has_name_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->name_color());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_chat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_chat)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_chat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_chat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_chat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_chat)
    MergeFrom(*source);
  }
}

void smsg_chat::MergeFrom(const smsg_chat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_chat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_player_name();
      player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000004u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000040u) {
      avatar_ = from.avatar_;
    }
    if (cached_has_bits & 0x00000080u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      toukuang_ = from.toukuang_;
    }
    if (cached_has_bits & 0x00000200u) {
      region_id_ = from.region_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      name_color_ = from.name_color_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_chat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_chat::CopyFrom(const smsg_chat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_chat::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000bf) != 0x000000bf) return false;
  return true;
}

void smsg_chat::Swap(smsg_chat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_chat::InternalSwap(smsg_chat* other) {
  using std::swap;
  player_name_.Swap(&other->player_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_guid_, other->player_guid_);
  swap(sex_, other->sex_);
  swap(level_, other->level_);
  swap(type_, other->type_);
  swap(avatar_, other->avatar_);
  swap(time_, other->time_);
  swap(toukuang_, other->toukuang_);
  swap(region_id_, other->region_id_);
  swap(name_color_, other->name_color_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_chat::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_gonggao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_gonggao::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_gonggao::smsg_gonggao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_gonggao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_gonggao)
}
smsg_gonggao::smsg_gonggao(const smsg_gonggao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_gonggao)
}

void smsg_gonggao::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

smsg_gonggao::~smsg_gonggao() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_gonggao)
  SharedDtor();
}

void smsg_gonggao::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void smsg_gonggao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_gonggao::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_gonggao& smsg_gonggao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_gonggao.base);
  return *internal_default_instance();
}


void smsg_gonggao::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_gonggao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_gonggao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_gonggao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.smsg_gonggao.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_gonggao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_gonggao)
  return false;
#undef DO_
}

void smsg_gonggao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_gonggao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_gonggao.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_gonggao)
}

::google::protobuf::uint8* smsg_gonggao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_gonggao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_gonggao.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_gonggao)
  return target;
}

size_t smsg_gonggao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_gonggao)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_gonggao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_gonggao)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_gonggao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_gonggao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_gonggao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_gonggao)
    MergeFrom(*source);
  }
}

void smsg_gonggao::MergeFrom(const smsg_gonggao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_gonggao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_text()) {
    set_has_text();
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void smsg_gonggao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_gonggao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_gonggao::CopyFrom(const smsg_gonggao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_gonggao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_gonggao::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void smsg_gonggao::Swap(smsg_gonggao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_gonggao::InternalSwap(smsg_gonggao* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_gonggao::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_gm_command::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_gm_command::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_gm_command::cmsg_gm_command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_gm_command.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_gm_command)
}
cmsg_gm_command::cmsg_gm_command(const cmsg_gm_command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_gm_command)
}

void cmsg_gm_command::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

cmsg_gm_command::~cmsg_gm_command() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_gm_command)
  SharedDtor();
}

void cmsg_gm_command::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_gm_command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_gm_command::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_gm_command& cmsg_gm_command::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_gm_command.base);
  return *internal_default_instance();
}


void cmsg_gm_command::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_gm_command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_gm_command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_gm_command)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_gm_command.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_gm_command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_gm_command)
  return false;
#undef DO_
}

void cmsg_gm_command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_gm_command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_gm_command.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_gm_command)
}

::google::protobuf::uint8* cmsg_gm_command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_gm_command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_gm_command.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_gm_command)
  return target;
}

size_t cmsg_gm_command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_gm_command)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_gm_command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_gm_command)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_gm_command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_gm_command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_gm_command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_gm_command)
    MergeFrom(*source);
  }
}

void cmsg_gm_command::MergeFrom(const cmsg_gm_command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_gm_command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_text()) {
    set_has_text();
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void cmsg_gm_command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_gm_command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_gm_command::CopyFrom(const cmsg_gm_command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_gm_command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_gm_command::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_gm_command::Swap(cmsg_gm_command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_gm_command::InternalSwap(cmsg_gm_command* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_gm_command::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_gm_command::InitAsDefaultInstance() {
}
void smsg_gm_command::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_gm_command::kRolesFieldNumber;
const int smsg_gm_command::kTypesFieldNumber;
const int smsg_gm_command::kValue1SFieldNumber;
const int smsg_gm_command::kValue2SFieldNumber;
const int smsg_gm_command::kValue3SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_gm_command::smsg_gm_command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_gm_command.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_gm_command)
}
smsg_gm_command::smsg_gm_command(const smsg_gm_command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_gm_command)
}

void smsg_gm_command::SharedCtor() {
}

smsg_gm_command::~smsg_gm_command() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_gm_command)
  SharedDtor();
}

void smsg_gm_command::SharedDtor() {
}

void smsg_gm_command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_gm_command::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_gm_command& smsg_gm_command::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_gm_command.base);
  return *internal_default_instance();
}


void smsg_gm_command::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_gm_command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_gm_command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_gm_command)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.role_t roles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_gm_command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_gm_command)
  return false;
#undef DO_
}

void smsg_gm_command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_gm_command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 2;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->types(i), output);
  }

  // repeated int32 value1s = 3;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->value1s(i), output);
  }

  // repeated int32 value2s = 4;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value2s(i), output);
  }

  // repeated int32 value3s = 5;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value3s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_gm_command)
}

::google::protobuf::uint8* smsg_gm_command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_gm_command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->types_, target);

  // repeated int32 value1s = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->value1s_, target);

  // repeated int32 value2s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value2s_, target);

  // repeated int32 value3s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value3s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_gm_command)
  return target;
}

size_t smsg_gm_command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_gm_command)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.role_t roles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_gm_command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_gm_command)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_gm_command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_gm_command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_gm_command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_gm_command)
    MergeFrom(*source);
  }
}

void smsg_gm_command::MergeFrom(const smsg_gm_command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_gm_command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
}

void smsg_gm_command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_gm_command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_gm_command::CopyFrom(const smsg_gm_command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_gm_command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_gm_command::IsInitialized() const {
  return true;
}

void smsg_gm_command::Swap(smsg_gm_command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_gm_command::InternalSwap(smsg_gm_command* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_gm_command::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_player_name::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_player_name::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_player_name::cmsg_player_name()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_player_name.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_player_name)
}
cmsg_player_name::cmsg_player_name(const cmsg_player_name& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_player_name)
}

void cmsg_player_name::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

cmsg_player_name::~cmsg_player_name() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_player_name)
  SharedDtor();
}

void cmsg_player_name::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_player_name::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_player_name::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_player_name& cmsg_player_name::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_player_name.base);
  return *internal_default_instance();
}


void cmsg_player_name::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_player_name)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_player_name::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_player_name)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_player_name.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_player_name)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_player_name)
  return false;
#undef DO_
}

void cmsg_player_name::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_player_name)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_player_name.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_player_name)
}

::google::protobuf::uint8* cmsg_player_name::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_player_name)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_player_name.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_player_name)
  return target;
}

size_t cmsg_player_name::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_player_name)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_player_name::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_player_name)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_player_name* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_player_name>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_player_name)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_player_name)
    MergeFrom(*source);
  }
}

void cmsg_player_name::MergeFrom(const cmsg_player_name& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_player_name)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void cmsg_player_name::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_player_name)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_player_name::CopyFrom(const cmsg_player_name& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_player_name)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_player_name::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_player_name::Swap(cmsg_player_name* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_player_name::InternalSwap(cmsg_player_name* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_player_name::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_player_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_player_info::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_player_info::cmsg_player_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_player_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_player_info)
}
cmsg_player_info::cmsg_player_info(const cmsg_player_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_info()) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_player_info)
}

void cmsg_player_info::SharedCtor() {
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

cmsg_player_info::~cmsg_player_info() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_player_info)
  SharedDtor();
}

void cmsg_player_info::SharedDtor() {
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_player_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_player_info::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_player_info& cmsg_player_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_player_info.base);
  return *internal_default_instance();
}


void cmsg_player_info::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_player_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    info_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_player_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_player_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->info().data(), static_cast<int>(this->info().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_player_info.info");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_player_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_player_info)
  return false;
#undef DO_
}

void cmsg_player_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_player_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_player_info.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_player_info)
}

::google::protobuf::uint8* cmsg_player_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_player_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_player_info.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_player_info)
  return target;
}

size_t cmsg_player_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_player_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string info = 1;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_player_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_player_info)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_player_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_player_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_player_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_player_info)
    MergeFrom(*source);
  }
}

void cmsg_player_info::MergeFrom(const cmsg_player_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_player_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    set_has_info();
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
}

void cmsg_player_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_player_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_player_info::CopyFrom(const cmsg_player_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_player_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_player_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_player_info::Swap(cmsg_player_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_player_info::InternalSwap(cmsg_player_info* other) {
  using std::swap;
  info_.Swap(&other->info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_player_info::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_player_data::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_player_data::kSexFieldNumber;
const int cmsg_player_data::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_player_data::cmsg_player_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_player_data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_player_data)
}
cmsg_player_data::cmsg_player_data(const cmsg_player_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sex_, &from.sex_,
    static_cast<size_t>(reinterpret_cast<char*>(&region_id_) -
    reinterpret_cast<char*>(&sex_)) + sizeof(region_id_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_player_data)
}

void cmsg_player_data::SharedCtor() {
  ::memset(&sex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_id_) -
      reinterpret_cast<char*>(&sex_)) + sizeof(region_id_));
}

cmsg_player_data::~cmsg_player_data() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_player_data)
  SharedDtor();
}

void cmsg_player_data::SharedDtor() {
}

void cmsg_player_data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_player_data::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_player_data& cmsg_player_data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_player_data.base);
  return *internal_default_instance();
}


void cmsg_player_data::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_player_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&sex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&region_id_) -
        reinterpret_cast<char*>(&sex_)) + sizeof(region_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_player_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_player_data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 sex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 region_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_player_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_player_data)
  return false;
#undef DO_
}

void cmsg_player_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_player_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 sex = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sex(), output);
  }

  // required int32 region_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->region_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_player_data)
}

::google::protobuf::uint8* cmsg_player_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_player_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 sex = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sex(), target);
  }

  // required int32 region_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->region_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_player_data)
  return target;
}

size_t cmsg_player_data::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.cmsg_player_data)
  size_t total_size = 0;

  if (has_sex()) {
    // required int32 sex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  if (has_region_id()) {
    // required int32 region_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->region_id());
  }

  return total_size;
}
size_t cmsg_player_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_player_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 sex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());

    // required int32 region_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->region_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_player_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_player_data)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_player_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_player_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_player_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_player_data)
    MergeFrom(*source);
  }
}

void cmsg_player_data::MergeFrom(const cmsg_player_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_player_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000002u) {
      region_id_ = from.region_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_player_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_player_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_player_data::CopyFrom(const cmsg_player_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_player_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_player_data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void cmsg_player_data::Swap(cmsg_player_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_player_data::InternalSwap(cmsg_player_data* other) {
  using std::swap;
  swap(sex_, other->sex_);
  swap(region_id_, other->region_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_player_data::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_start_open_box::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_start_open_box::kSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_start_open_box::cmsg_start_open_box()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_start_open_box.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_start_open_box)
}
cmsg_start_open_box::cmsg_start_open_box(const cmsg_start_open_box& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slot_ = from.slot_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_start_open_box)
}

void cmsg_start_open_box::SharedCtor() {
  slot_ = 0;
}

cmsg_start_open_box::~cmsg_start_open_box() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_start_open_box)
  SharedDtor();
}

void cmsg_start_open_box::SharedDtor() {
}

void cmsg_start_open_box::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_start_open_box::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_start_open_box& cmsg_start_open_box::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_start_open_box.base);
  return *internal_default_instance();
}


void cmsg_start_open_box::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_start_open_box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  slot_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_start_open_box::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_start_open_box)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_start_open_box)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_start_open_box)
  return false;
#undef DO_
}

void cmsg_start_open_box::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_start_open_box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_start_open_box)
}

::google::protobuf::uint8* cmsg_start_open_box::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_start_open_box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_start_open_box)
  return target;
}

size_t cmsg_start_open_box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_start_open_box)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 slot = 1;
  if (has_slot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_start_open_box::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_start_open_box)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_start_open_box* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_start_open_box>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_start_open_box)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_start_open_box)
    MergeFrom(*source);
  }
}

void cmsg_start_open_box::MergeFrom(const cmsg_start_open_box& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_start_open_box)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slot()) {
    set_slot(from.slot());
  }
}

void cmsg_start_open_box::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_start_open_box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_start_open_box::CopyFrom(const cmsg_start_open_box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_start_open_box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_start_open_box::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_start_open_box::Swap(cmsg_start_open_box* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_start_open_box::InternalSwap(cmsg_start_open_box* other) {
  using std::swap;
  swap(slot_, other->slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_start_open_box::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_end_open_box::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_end_open_box::kSlotFieldNumber;
const int cmsg_end_open_box::kIsJewelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_end_open_box::cmsg_end_open_box()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_end_open_box.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_end_open_box)
}
cmsg_end_open_box::cmsg_end_open_box(const cmsg_end_open_box& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slot_, &from.slot_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_jewel_) -
    reinterpret_cast<char*>(&slot_)) + sizeof(is_jewel_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_end_open_box)
}

void cmsg_end_open_box::SharedCtor() {
  ::memset(&slot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_jewel_) -
      reinterpret_cast<char*>(&slot_)) + sizeof(is_jewel_));
}

cmsg_end_open_box::~cmsg_end_open_box() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_end_open_box)
  SharedDtor();
}

void cmsg_end_open_box::SharedDtor() {
}

void cmsg_end_open_box::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_end_open_box::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_end_open_box& cmsg_end_open_box::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_end_open_box.base);
  return *internal_default_instance();
}


void cmsg_end_open_box::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_end_open_box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&slot_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_jewel_) -
        reinterpret_cast<char*>(&slot_)) + sizeof(is_jewel_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_end_open_box::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_end_open_box)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 is_jewel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_jewel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_jewel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_end_open_box)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_end_open_box)
  return false;
#undef DO_
}

void cmsg_end_open_box::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_end_open_box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot(), output);
  }

  // required int32 is_jewel = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_jewel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_end_open_box)
}

::google::protobuf::uint8* cmsg_end_open_box::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_end_open_box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot(), target);
  }

  // required int32 is_jewel = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_jewel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_end_open_box)
  return target;
}

size_t cmsg_end_open_box::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.cmsg_end_open_box)
  size_t total_size = 0;

  if (has_slot()) {
    // required int32 slot = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot());
  }

  if (has_is_jewel()) {
    // required int32 is_jewel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_jewel());
  }

  return total_size;
}
size_t cmsg_end_open_box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_end_open_box)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 slot = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot());

    // required int32 is_jewel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_jewel());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_end_open_box::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_end_open_box)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_end_open_box* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_end_open_box>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_end_open_box)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_end_open_box)
    MergeFrom(*source);
  }
}

void cmsg_end_open_box::MergeFrom(const cmsg_end_open_box& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_end_open_box)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      slot_ = from.slot_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_jewel_ = from.is_jewel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_end_open_box::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_end_open_box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_end_open_box::CopyFrom(const cmsg_end_open_box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_end_open_box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_end_open_box::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void cmsg_end_open_box::Swap(cmsg_end_open_box* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_end_open_box::InternalSwap(cmsg_end_open_box* other) {
  using std::swap;
  swap(slot_, other->slot_);
  swap(is_jewel_, other->is_jewel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_end_open_box::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_end_open_box::InitAsDefaultInstance() {
}
void smsg_end_open_box::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_end_open_box::kIdFieldNumber;
const int smsg_end_open_box::kRolesFieldNumber;
const int smsg_end_open_box::kTypesFieldNumber;
const int smsg_end_open_box::kValue1SFieldNumber;
const int smsg_end_open_box::kValue2SFieldNumber;
const int smsg_end_open_box::kValue3SFieldNumber;
const int smsg_end_open_box::kJewelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_end_open_box::smsg_end_open_box()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_end_open_box.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_end_open_box)
}
smsg_end_open_box::smsg_end_open_box(const smsg_end_open_box& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&jewel_) -
    reinterpret_cast<char*>(&id_)) + sizeof(jewel_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_end_open_box)
}

void smsg_end_open_box::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&jewel_) -
      reinterpret_cast<char*>(&id_)) + sizeof(jewel_));
}

smsg_end_open_box::~smsg_end_open_box() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_end_open_box)
  SharedDtor();
}

void smsg_end_open_box::SharedDtor() {
}

void smsg_end_open_box::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_end_open_box::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_end_open_box& smsg_end_open_box::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_end_open_box.base);
  return *internal_default_instance();
}


void smsg_end_open_box::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_end_open_box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&jewel_) -
        reinterpret_cast<char*>(&id_)) + sizeof(jewel_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_end_open_box::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_end_open_box)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dhc.role_t roles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 jewel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_jewel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jewel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_end_open_box)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_end_open_box)
  return false;
#undef DO_
}

void smsg_end_open_box::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_end_open_box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 3;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->types(i), output);
  }

  // repeated int32 value1s = 4;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value1s(i), output);
  }

  // repeated int32 value2s = 5;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value2s(i), output);
  }

  // repeated int32 value3s = 6;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->value3s(i), output);
  }

  // required int32 jewel = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->jewel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_end_open_box)
}

::google::protobuf::uint8* smsg_end_open_box::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_end_open_box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->types_, target);

  // repeated int32 value1s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value1s_, target);

  // repeated int32 value2s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value2s_, target);

  // repeated int32 value3s = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(6, this->value3s_, target);

  // required int32 jewel = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->jewel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_end_open_box)
  return target;
}

size_t smsg_end_open_box::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.smsg_end_open_box)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_jewel()) {
    // required int32 jewel = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jewel());
  }

  return total_size;
}
size_t smsg_end_open_box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_end_open_box)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 jewel = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jewel());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .dhc.role_t roles = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_end_open_box::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_end_open_box)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_end_open_box* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_end_open_box>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_end_open_box)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_end_open_box)
    MergeFrom(*source);
  }
}

void smsg_end_open_box::MergeFrom(const smsg_end_open_box& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_end_open_box)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      jewel_ = from.jewel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_end_open_box::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_end_open_box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_end_open_box::CopyFrom(const smsg_end_open_box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_end_open_box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_end_open_box::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void smsg_end_open_box::Swap(smsg_end_open_box* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_end_open_box::InternalSwap(smsg_end_open_box* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(id_, other->id_);
  swap(jewel_, other->jewel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_end_open_box::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_battle_item_on::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_battle_item_on::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_battle_item_on::cmsg_battle_item_on()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_battle_item_on.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_battle_item_on)
}
cmsg_battle_item_on::cmsg_battle_item_on(const cmsg_battle_item_on& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_battle_item_on)
}

void cmsg_battle_item_on::SharedCtor() {
  item_id_ = 0;
}

cmsg_battle_item_on::~cmsg_battle_item_on() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_battle_item_on)
  SharedDtor();
}

void cmsg_battle_item_on::SharedDtor() {
}

void cmsg_battle_item_on::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_battle_item_on::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_battle_item_on& cmsg_battle_item_on::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_battle_item_on.base);
  return *internal_default_instance();
}


void cmsg_battle_item_on::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_battle_item_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  item_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_battle_item_on::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_battle_item_on)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_battle_item_on)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_battle_item_on)
  return false;
#undef DO_
}

void cmsg_battle_item_on::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_battle_item_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_battle_item_on)
}

::google::protobuf::uint8* cmsg_battle_item_on::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_battle_item_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_battle_item_on)
  return target;
}

size_t cmsg_battle_item_on::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_battle_item_on)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 item_id = 1;
  if (has_item_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_battle_item_on::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_battle_item_on)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_battle_item_on* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_battle_item_on>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_battle_item_on)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_battle_item_on)
    MergeFrom(*source);
  }
}

void cmsg_battle_item_on::MergeFrom(const cmsg_battle_item_on& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_battle_item_on)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_id()) {
    set_item_id(from.item_id());
  }
}

void cmsg_battle_item_on::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_battle_item_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_battle_item_on::CopyFrom(const cmsg_battle_item_on& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_battle_item_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_battle_item_on::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_battle_item_on::Swap(cmsg_battle_item_on* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_battle_item_on::InternalSwap(cmsg_battle_item_on* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_battle_item_on::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_item_buy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_item_buy::kIdFieldNumber;
const int cmsg_item_buy::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_item_buy::cmsg_item_buy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_item_buy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_item_buy)
}
cmsg_item_buy::cmsg_item_buy(const cmsg_item_buy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_item_buy)
}

void cmsg_item_buy::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

cmsg_item_buy::~cmsg_item_buy() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_item_buy)
  SharedDtor();
}

void cmsg_item_buy::SharedDtor() {
}

void cmsg_item_buy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_item_buy::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_item_buy& cmsg_item_buy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_item_buy.base);
  return *internal_default_instance();
}


void cmsg_item_buy::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_item_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_) -
        reinterpret_cast<char*>(&id_)) + sizeof(num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_item_buy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_item_buy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_item_buy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_item_buy)
  return false;
#undef DO_
}

void cmsg_item_buy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_item_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_item_buy)
}

::google::protobuf::uint8* cmsg_item_buy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_item_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_item_buy)
  return target;
}

size_t cmsg_item_buy::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.cmsg_item_buy)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_num()) {
    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  return total_size;
}
size_t cmsg_item_buy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_item_buy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_item_buy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_item_buy)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_item_buy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_item_buy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_item_buy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_item_buy)
    MergeFrom(*source);
  }
}

void cmsg_item_buy::MergeFrom(const cmsg_item_buy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_item_buy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_item_buy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_item_buy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_item_buy::CopyFrom(const cmsg_item_buy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_item_buy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_item_buy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void cmsg_item_buy::Swap(cmsg_item_buy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_item_buy::InternalSwap(cmsg_item_buy* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_item_buy::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_item_buy::InitAsDefaultInstance() {
}
void smsg_item_buy::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_item_buy::kRolesFieldNumber;
const int smsg_item_buy::kTypesFieldNumber;
const int smsg_item_buy::kValue1SFieldNumber;
const int smsg_item_buy::kValue2SFieldNumber;
const int smsg_item_buy::kValue3SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_item_buy::smsg_item_buy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_item_buy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_item_buy)
}
smsg_item_buy::smsg_item_buy(const smsg_item_buy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_item_buy)
}

void smsg_item_buy::SharedCtor() {
}

smsg_item_buy::~smsg_item_buy() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_item_buy)
  SharedDtor();
}

void smsg_item_buy::SharedDtor() {
}

void smsg_item_buy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_item_buy::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_item_buy& smsg_item_buy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_item_buy.base);
  return *internal_default_instance();
}


void smsg_item_buy::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_item_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_item_buy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_item_buy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.role_t roles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_item_buy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_item_buy)
  return false;
#undef DO_
}

void smsg_item_buy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_item_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 2;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->types(i), output);
  }

  // repeated int32 value1s = 3;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->value1s(i), output);
  }

  // repeated int32 value2s = 4;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value2s(i), output);
  }

  // repeated int32 value3s = 5;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value3s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_item_buy)
}

::google::protobuf::uint8* smsg_item_buy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_item_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->types_, target);

  // repeated int32 value1s = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->value1s_, target);

  // repeated int32 value2s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value2s_, target);

  // repeated int32 value3s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value3s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_item_buy)
  return target;
}

size_t smsg_item_buy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_item_buy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.role_t roles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_item_buy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_item_buy)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_item_buy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_item_buy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_item_buy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_item_buy)
    MergeFrom(*source);
  }
}

void smsg_item_buy::MergeFrom(const smsg_item_buy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_item_buy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
}

void smsg_item_buy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_item_buy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_item_buy::CopyFrom(const smsg_item_buy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_item_buy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_item_buy::IsInitialized() const {
  return true;
}

void smsg_item_buy::Swap(smsg_item_buy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_item_buy::InternalSwap(smsg_item_buy* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_item_buy::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_item_sell::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_item_sell::kIdFieldNumber;
const int cmsg_item_sell::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_item_sell::cmsg_item_sell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_item_sell.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_item_sell)
}
cmsg_item_sell::cmsg_item_sell(const cmsg_item_sell& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_item_sell)
}

void cmsg_item_sell::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

cmsg_item_sell::~cmsg_item_sell() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_item_sell)
  SharedDtor();
}

void cmsg_item_sell::SharedDtor() {
}

void cmsg_item_sell::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_item_sell::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_item_sell& cmsg_item_sell::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_item_sell.base);
  return *internal_default_instance();
}


void cmsg_item_sell::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_item_sell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_) -
        reinterpret_cast<char*>(&id_)) + sizeof(num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_item_sell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_item_sell)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_item_sell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_item_sell)
  return false;
#undef DO_
}

void cmsg_item_sell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_item_sell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_item_sell)
}

::google::protobuf::uint8* cmsg_item_sell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_item_sell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_item_sell)
  return target;
}

size_t cmsg_item_sell::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.cmsg_item_sell)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_num()) {
    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  return total_size;
}
size_t cmsg_item_sell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_item_sell)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_item_sell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_item_sell)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_item_sell* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_item_sell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_item_sell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_item_sell)
    MergeFrom(*source);
  }
}

void cmsg_item_sell::MergeFrom(const cmsg_item_sell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_item_sell)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_item_sell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_item_sell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_item_sell::CopyFrom(const cmsg_item_sell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_item_sell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_item_sell::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void cmsg_item_sell::Swap(cmsg_item_sell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_item_sell::InternalSwap(cmsg_item_sell* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_item_sell::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_item_direct_buy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_item_direct_buy::kIdFieldNumber;
const int cmsg_item_direct_buy::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_item_direct_buy::cmsg_item_direct_buy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_item_direct_buy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_item_direct_buy)
}
cmsg_item_direct_buy::cmsg_item_direct_buy(const cmsg_item_direct_buy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_item_direct_buy)
}

void cmsg_item_direct_buy::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

cmsg_item_direct_buy::~cmsg_item_direct_buy() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_item_direct_buy)
  SharedDtor();
}

void cmsg_item_direct_buy::SharedDtor() {
}

void cmsg_item_direct_buy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_item_direct_buy::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_item_direct_buy& cmsg_item_direct_buy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_item_direct_buy.base);
  return *internal_default_instance();
}


void cmsg_item_direct_buy::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_item_direct_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_) -
        reinterpret_cast<char*>(&id_)) + sizeof(num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_item_direct_buy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_item_direct_buy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_item_direct_buy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_item_direct_buy)
  return false;
#undef DO_
}

void cmsg_item_direct_buy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_item_direct_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_item_direct_buy)
}

::google::protobuf::uint8* cmsg_item_direct_buy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_item_direct_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_item_direct_buy)
  return target;
}

size_t cmsg_item_direct_buy::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.cmsg_item_direct_buy)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_num()) {
    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  return total_size;
}
size_t cmsg_item_direct_buy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_item_direct_buy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_item_direct_buy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_item_direct_buy)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_item_direct_buy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_item_direct_buy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_item_direct_buy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_item_direct_buy)
    MergeFrom(*source);
  }
}

void cmsg_item_direct_buy::MergeFrom(const cmsg_item_direct_buy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_item_direct_buy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_item_direct_buy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_item_direct_buy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_item_direct_buy::CopyFrom(const cmsg_item_direct_buy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_item_direct_buy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_item_direct_buy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void cmsg_item_direct_buy::Swap(cmsg_item_direct_buy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_item_direct_buy::InternalSwap(cmsg_item_direct_buy* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_item_direct_buy::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void msg_post_new_list::InitAsDefaultInstance() {
}
void msg_post_new_list::clear_post_news() {
  post_news_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_post_new_list::kPlayerGuidFieldNumber;
const int msg_post_new_list::kPostNewsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_post_new_list::msg_post_new_list()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_msg_post_new_list.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.msg_post_new_list)
}
msg_post_new_list::msg_post_new_list(const msg_post_new_list& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      post_news_(from.post_news_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_guid_ = from.player_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.msg_post_new_list)
}

void msg_post_new_list::SharedCtor() {
  player_guid_ = GOOGLE_ULONGLONG(0);
}

msg_post_new_list::~msg_post_new_list() {
  // @@protoc_insertion_point(destructor:protocol.game.msg_post_new_list)
  SharedDtor();
}

void msg_post_new_list::SharedDtor() {
}

void msg_post_new_list::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* msg_post_new_list::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msg_post_new_list& msg_post_new_list::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_msg_post_new_list.base);
  return *internal_default_instance();
}


void msg_post_new_list::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.msg_post_new_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  post_news_.Clear();
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msg_post_new_list::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.msg_post_new_list)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dhc.post_new_t post_news = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_post_news()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.msg_post_new_list)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.msg_post_new_list)
  return false;
#undef DO_
}

void msg_post_new_list::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.msg_post_new_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // repeated .dhc.post_new_t post_news = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->post_news_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->post_news(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.msg_post_new_list)
}

::google::protobuf::uint8* msg_post_new_list::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.msg_post_new_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // repeated .dhc.post_new_t post_news = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->post_news_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->post_news(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.msg_post_new_list)
  return target;
}

size_t msg_post_new_list::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.msg_post_new_list)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 player_guid = 1;
  if (has_player_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }
  // repeated .dhc.post_new_t post_news = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->post_news_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->post_news(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void msg_post_new_list::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.msg_post_new_list)
  GOOGLE_DCHECK_NE(&from, this);
  const msg_post_new_list* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_post_new_list>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.msg_post_new_list)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.msg_post_new_list)
    MergeFrom(*source);
  }
}

void msg_post_new_list::MergeFrom(const msg_post_new_list& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.msg_post_new_list)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  post_news_.MergeFrom(from.post_news_);
  if (from.has_player_guid()) {
    set_player_guid(from.player_guid());
  }
}

void msg_post_new_list::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.msg_post_new_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_post_new_list::CopyFrom(const msg_post_new_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.msg_post_new_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg_post_new_list::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void msg_post_new_list::Swap(msg_post_new_list* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_post_new_list::InternalSwap(msg_post_new_list* other) {
  using std::swap;
  CastToBase(&post_news_)->InternalSwap(CastToBase(&other->post_news_));
  swap(player_guid_, other->player_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata msg_post_new_list::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void msg_post_new_delete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_post_new_delete::kPlayerGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_post_new_delete::msg_post_new_delete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_msg_post_new_delete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.msg_post_new_delete)
}
msg_post_new_delete::msg_post_new_delete(const msg_post_new_delete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_guid_ = from.player_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.msg_post_new_delete)
}

void msg_post_new_delete::SharedCtor() {
  player_guid_ = GOOGLE_ULONGLONG(0);
}

msg_post_new_delete::~msg_post_new_delete() {
  // @@protoc_insertion_point(destructor:protocol.game.msg_post_new_delete)
  SharedDtor();
}

void msg_post_new_delete::SharedDtor() {
}

void msg_post_new_delete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* msg_post_new_delete::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msg_post_new_delete& msg_post_new_delete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_msg_post_new_delete.base);
  return *internal_default_instance();
}


void msg_post_new_delete::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.msg_post_new_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msg_post_new_delete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.msg_post_new_delete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.msg_post_new_delete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.msg_post_new_delete)
  return false;
#undef DO_
}

void msg_post_new_delete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.msg_post_new_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.msg_post_new_delete)
}

::google::protobuf::uint8* msg_post_new_delete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.msg_post_new_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.msg_post_new_delete)
  return target;
}

size_t msg_post_new_delete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.msg_post_new_delete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 player_guid = 1;
  if (has_player_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void msg_post_new_delete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.msg_post_new_delete)
  GOOGLE_DCHECK_NE(&from, this);
  const msg_post_new_delete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_post_new_delete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.msg_post_new_delete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.msg_post_new_delete)
    MergeFrom(*source);
  }
}

void msg_post_new_delete::MergeFrom(const msg_post_new_delete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.msg_post_new_delete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player_guid()) {
    set_player_guid(from.player_guid());
  }
}

void msg_post_new_delete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.msg_post_new_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_post_new_delete::CopyFrom(const msg_post_new_delete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.msg_post_new_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg_post_new_delete::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void msg_post_new_delete::Swap(msg_post_new_delete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_post_new_delete::InternalSwap(msg_post_new_delete* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata msg_post_new_delete::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_post_look::InitAsDefaultInstance() {
}
void smsg_post_look::clear_posts() {
  posts_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_post_look::kPostsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_post_look::smsg_post_look()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_post_look.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_post_look)
}
smsg_post_look::smsg_post_look(const smsg_post_look& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      posts_(from.posts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_post_look)
}

void smsg_post_look::SharedCtor() {
}

smsg_post_look::~smsg_post_look() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_post_look)
  SharedDtor();
}

void smsg_post_look::SharedDtor() {
}

void smsg_post_look::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_post_look::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_post_look& smsg_post_look::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_post_look.base);
  return *internal_default_instance();
}


void smsg_post_look::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_post_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  posts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_post_look::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_post_look)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.post_t posts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_posts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_post_look)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_post_look)
  return false;
#undef DO_
}

void smsg_post_look::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_post_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.post_t posts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->posts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->posts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_post_look)
}

::google::protobuf::uint8* smsg_post_look::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_post_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.post_t posts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->posts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->posts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_post_look)
  return target;
}

size_t smsg_post_look::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_post_look)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.post_t posts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->posts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->posts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_post_look::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_post_look)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_post_look* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_post_look>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_post_look)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_post_look)
    MergeFrom(*source);
  }
}

void smsg_post_look::MergeFrom(const smsg_post_look& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_post_look)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  posts_.MergeFrom(from.posts_);
}

void smsg_post_look::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_post_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_post_look::CopyFrom(const smsg_post_look& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_post_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_post_look::IsInitialized() const {
  return true;
}

void smsg_post_look::Swap(smsg_post_look* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_post_look::InternalSwap(smsg_post_look* other) {
  using std::swap;
  CastToBase(&posts_)->InternalSwap(CastToBase(&other->posts_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_post_look::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_post_read::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_post_read::kPostGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_post_read::cmsg_post_read()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_post_read.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_post_read)
}
cmsg_post_read::cmsg_post_read(const cmsg_post_read& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  post_guid_ = from.post_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_post_read)
}

void cmsg_post_read::SharedCtor() {
  post_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_post_read::~cmsg_post_read() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_post_read)
  SharedDtor();
}

void cmsg_post_read::SharedDtor() {
}

void cmsg_post_read::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_post_read::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_post_read& cmsg_post_read::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_post_read.base);
  return *internal_default_instance();
}


void cmsg_post_read::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_post_read)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  post_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_post_read::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_post_read)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 post_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_post_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &post_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_post_read)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_post_read)
  return false;
#undef DO_
}

void cmsg_post_read::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_post_read)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 post_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->post_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_post_read)
}

::google::protobuf::uint8* cmsg_post_read::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_post_read)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 post_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->post_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_post_read)
  return target;
}

size_t cmsg_post_read::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_post_read)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 post_guid = 1;
  if (has_post_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->post_guid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_post_read::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_post_read)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_post_read* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_post_read>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_post_read)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_post_read)
    MergeFrom(*source);
  }
}

void cmsg_post_read::MergeFrom(const cmsg_post_read& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_post_read)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_post_guid()) {
    set_post_guid(from.post_guid());
  }
}

void cmsg_post_read::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_post_read)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_post_read::CopyFrom(const cmsg_post_read& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_post_read)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_post_read::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_post_read::Swap(cmsg_post_read* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_post_read::InternalSwap(cmsg_post_read* other) {
  using std::swap;
  swap(post_guid_, other->post_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_post_read::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_post_get::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_post_get::kPostGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_post_get::cmsg_post_get()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_post_get.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_post_get)
}
cmsg_post_get::cmsg_post_get(const cmsg_post_get& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  post_guid_ = from.post_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_post_get)
}

void cmsg_post_get::SharedCtor() {
  post_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_post_get::~cmsg_post_get() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_post_get)
  SharedDtor();
}

void cmsg_post_get::SharedDtor() {
}

void cmsg_post_get::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_post_get::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_post_get& cmsg_post_get::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_post_get.base);
  return *internal_default_instance();
}


void cmsg_post_get::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_post_get)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  post_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_post_get::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_post_get)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 post_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_post_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &post_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_post_get)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_post_get)
  return false;
#undef DO_
}

void cmsg_post_get::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_post_get)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 post_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->post_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_post_get)
}

::google::protobuf::uint8* cmsg_post_get::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_post_get)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 post_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->post_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_post_get)
  return target;
}

size_t cmsg_post_get::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_post_get)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 post_guid = 1;
  if (has_post_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->post_guid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_post_get::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_post_get)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_post_get* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_post_get>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_post_get)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_post_get)
    MergeFrom(*source);
  }
}

void cmsg_post_get::MergeFrom(const cmsg_post_get& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_post_get)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_post_guid()) {
    set_post_guid(from.post_guid());
  }
}

void cmsg_post_get::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_post_get)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_post_get::CopyFrom(const cmsg_post_get& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_post_get)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_post_get::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_post_get::Swap(cmsg_post_get* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_post_get::InternalSwap(cmsg_post_get* other) {
  using std::swap;
  swap(post_guid_, other->post_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_post_get::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_post_get::InitAsDefaultInstance() {
}
void smsg_post_get::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_post_get::kRolesFieldNumber;
const int smsg_post_get::kTypesFieldNumber;
const int smsg_post_get::kValue1SFieldNumber;
const int smsg_post_get::kValue2SFieldNumber;
const int smsg_post_get::kValue3SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_post_get::smsg_post_get()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_post_get.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_post_get)
}
smsg_post_get::smsg_post_get(const smsg_post_get& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_post_get)
}

void smsg_post_get::SharedCtor() {
}

smsg_post_get::~smsg_post_get() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_post_get)
  SharedDtor();
}

void smsg_post_get::SharedDtor() {
}

void smsg_post_get::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_post_get::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_post_get& smsg_post_get::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_post_get.base);
  return *internal_default_instance();
}


void smsg_post_get::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_post_get)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_post_get::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_post_get)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.role_t roles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_post_get)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_post_get)
  return false;
#undef DO_
}

void smsg_post_get::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_post_get)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 2;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->types(i), output);
  }

  // repeated int32 value1s = 3;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->value1s(i), output);
  }

  // repeated int32 value2s = 4;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value2s(i), output);
  }

  // repeated int32 value3s = 5;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value3s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_post_get)
}

::google::protobuf::uint8* smsg_post_get::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_post_get)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->types_, target);

  // repeated int32 value1s = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->value1s_, target);

  // repeated int32 value2s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value2s_, target);

  // repeated int32 value3s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value3s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_post_get)
  return target;
}

size_t smsg_post_get::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_post_get)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.role_t roles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_post_get::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_post_get)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_post_get* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_post_get>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_post_get)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_post_get)
    MergeFrom(*source);
  }
}

void smsg_post_get::MergeFrom(const smsg_post_get& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_post_get)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
}

void smsg_post_get::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_post_get)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_post_get::CopyFrom(const smsg_post_get& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_post_get)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_post_get::IsInitialized() const {
  return true;
}

void smsg_post_get::Swap(smsg_post_get* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_post_get::InternalSwap(smsg_post_get* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_post_get::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_post_delete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_post_delete::kPostGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_post_delete::cmsg_post_delete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_post_delete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_post_delete)
}
cmsg_post_delete::cmsg_post_delete(const cmsg_post_delete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  post_guid_ = from.post_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_post_delete)
}

void cmsg_post_delete::SharedCtor() {
  post_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_post_delete::~cmsg_post_delete() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_post_delete)
  SharedDtor();
}

void cmsg_post_delete::SharedDtor() {
}

void cmsg_post_delete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_post_delete::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_post_delete& cmsg_post_delete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_post_delete.base);
  return *internal_default_instance();
}


void cmsg_post_delete::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_post_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  post_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_post_delete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_post_delete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 post_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_post_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &post_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_post_delete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_post_delete)
  return false;
#undef DO_
}

void cmsg_post_delete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_post_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 post_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->post_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_post_delete)
}

::google::protobuf::uint8* cmsg_post_delete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_post_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 post_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->post_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_post_delete)
  return target;
}

size_t cmsg_post_delete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_post_delete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 post_guid = 1;
  if (has_post_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->post_guid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_post_delete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_post_delete)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_post_delete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_post_delete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_post_delete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_post_delete)
    MergeFrom(*source);
  }
}

void cmsg_post_delete::MergeFrom(const cmsg_post_delete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_post_delete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_post_guid()) {
    set_post_guid(from.post_guid());
  }
}

void cmsg_post_delete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_post_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_post_delete::CopyFrom(const cmsg_post_delete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_post_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_post_delete::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_post_delete::Swap(cmsg_post_delete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_post_delete::InternalSwap(cmsg_post_delete* other) {
  using std::swap;
  swap(post_guid_, other->post_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_post_delete::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_post_get_all::InitAsDefaultInstance() {
}
void smsg_post_get_all::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_post_get_all::kPostGuidsFieldNumber;
const int smsg_post_get_all::kRolesFieldNumber;
const int smsg_post_get_all::kTypesFieldNumber;
const int smsg_post_get_all::kValue1SFieldNumber;
const int smsg_post_get_all::kValue2SFieldNumber;
const int smsg_post_get_all::kValue3SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_post_get_all::smsg_post_get_all()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_post_get_all.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_post_get_all)
}
smsg_post_get_all::smsg_post_get_all(const smsg_post_get_all& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      post_guids_(from.post_guids_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_post_get_all)
}

void smsg_post_get_all::SharedCtor() {
}

smsg_post_get_all::~smsg_post_get_all() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_post_get_all)
  SharedDtor();
}

void smsg_post_get_all::SharedDtor() {
}

void smsg_post_get_all::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_post_get_all::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_post_get_all& smsg_post_get_all::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_post_get_all.base);
  return *internal_default_instance();
}


void smsg_post_get_all::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_post_get_all)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  post_guids_.Clear();
  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_post_get_all::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_post_get_all)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 post_guids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_post_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_post_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dhc.role_t roles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_post_get_all)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_post_get_all)
  return false;
#undef DO_
}

void smsg_post_get_all::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_post_get_all)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 post_guids = 1;
  for (int i = 0, n = this->post_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->post_guids(i), output);
  }

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 3;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->types(i), output);
  }

  // repeated int32 value1s = 4;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value1s(i), output);
  }

  // repeated int32 value2s = 5;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value2s(i), output);
  }

  // repeated int32 value3s = 6;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->value3s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_post_get_all)
}

::google::protobuf::uint8* smsg_post_get_all::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_post_get_all)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 post_guids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->post_guids_, target);

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->types_, target);

  // repeated int32 value1s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value1s_, target);

  // repeated int32 value2s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value2s_, target);

  // repeated int32 value3s = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(6, this->value3s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_post_get_all)
  return target;
}

size_t smsg_post_get_all::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_post_get_all)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 post_guids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->post_guids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->post_guids_size());
    total_size += data_size;
  }

  // repeated .dhc.role_t roles = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_post_get_all::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_post_get_all)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_post_get_all* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_post_get_all>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_post_get_all)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_post_get_all)
    MergeFrom(*source);
  }
}

void smsg_post_get_all::MergeFrom(const smsg_post_get_all& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_post_get_all)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  post_guids_.MergeFrom(from.post_guids_);
  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
}

void smsg_post_get_all::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_post_get_all)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_post_get_all::CopyFrom(const smsg_post_get_all& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_post_get_all)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_post_get_all::IsInitialized() const {
  return true;
}

void smsg_post_get_all::Swap(smsg_post_get_all* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_post_get_all::InternalSwap(smsg_post_get_all* other) {
  using std::swap;
  post_guids_.InternalSwap(&other->post_guids_);
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_post_get_all::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_post_delete_all::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_post_delete_all::kPostGuidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_post_delete_all::smsg_post_delete_all()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_post_delete_all.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_post_delete_all)
}
smsg_post_delete_all::smsg_post_delete_all(const smsg_post_delete_all& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      post_guids_(from.post_guids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_post_delete_all)
}

void smsg_post_delete_all::SharedCtor() {
}

smsg_post_delete_all::~smsg_post_delete_all() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_post_delete_all)
  SharedDtor();
}

void smsg_post_delete_all::SharedDtor() {
}

void smsg_post_delete_all::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_post_delete_all::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_post_delete_all& smsg_post_delete_all::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_post_delete_all.base);
  return *internal_default_instance();
}


void smsg_post_delete_all::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_post_delete_all)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  post_guids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_post_delete_all::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_post_delete_all)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 post_guids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_post_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_post_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_post_delete_all)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_post_delete_all)
  return false;
#undef DO_
}

void smsg_post_delete_all::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_post_delete_all)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 post_guids = 1;
  for (int i = 0, n = this->post_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->post_guids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_post_delete_all)
}

::google::protobuf::uint8* smsg_post_delete_all::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_post_delete_all)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 post_guids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->post_guids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_post_delete_all)
  return target;
}

size_t smsg_post_delete_all::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_post_delete_all)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 post_guids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->post_guids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->post_guids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_post_delete_all::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_post_delete_all)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_post_delete_all* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_post_delete_all>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_post_delete_all)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_post_delete_all)
    MergeFrom(*source);
  }
}

void smsg_post_delete_all::MergeFrom(const smsg_post_delete_all& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_post_delete_all)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  post_guids_.MergeFrom(from.post_guids_);
}

void smsg_post_delete_all::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_post_delete_all)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_post_delete_all::CopyFrom(const smsg_post_delete_all& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_post_delete_all)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_post_delete_all::IsInitialized() const {
  return true;
}

void smsg_post_delete_all::Swap(smsg_post_delete_all* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_post_delete_all::InternalSwap(smsg_post_delete_all* other) {
  using std::swap;
  post_guids_.InternalSwap(&other->post_guids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_post_delete_all::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_fenxiang_num::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_fenxiang_num::kFenxiangNumFieldNumber;
const int smsg_fenxiang_num::kFenxiangTotalNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_fenxiang_num::smsg_fenxiang_num()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_fenxiang_num.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_fenxiang_num)
}
smsg_fenxiang_num::smsg_fenxiang_num(const smsg_fenxiang_num& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fenxiang_num_, &from.fenxiang_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&fenxiang_total_num_) -
    reinterpret_cast<char*>(&fenxiang_num_)) + sizeof(fenxiang_total_num_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_fenxiang_num)
}

void smsg_fenxiang_num::SharedCtor() {
  ::memset(&fenxiang_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fenxiang_total_num_) -
      reinterpret_cast<char*>(&fenxiang_num_)) + sizeof(fenxiang_total_num_));
}

smsg_fenxiang_num::~smsg_fenxiang_num() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_fenxiang_num)
  SharedDtor();
}

void smsg_fenxiang_num::SharedDtor() {
}

void smsg_fenxiang_num::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_fenxiang_num::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_fenxiang_num& smsg_fenxiang_num::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_fenxiang_num.base);
  return *internal_default_instance();
}


void smsg_fenxiang_num::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_fenxiang_num)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&fenxiang_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fenxiang_total_num_) -
        reinterpret_cast<char*>(&fenxiang_num_)) + sizeof(fenxiang_total_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_fenxiang_num::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_fenxiang_num)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fenxiang_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_fenxiang_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fenxiang_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 fenxiang_total_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fenxiang_total_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fenxiang_total_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_fenxiang_num)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_fenxiang_num)
  return false;
#undef DO_
}

void smsg_fenxiang_num::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_fenxiang_num)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fenxiang_num = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fenxiang_num(), output);
  }

  // required int32 fenxiang_total_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fenxiang_total_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_fenxiang_num)
}

::google::protobuf::uint8* smsg_fenxiang_num::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_fenxiang_num)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fenxiang_num = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fenxiang_num(), target);
  }

  // required int32 fenxiang_total_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fenxiang_total_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_fenxiang_num)
  return target;
}

size_t smsg_fenxiang_num::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.smsg_fenxiang_num)
  size_t total_size = 0;

  if (has_fenxiang_num()) {
    // required int32 fenxiang_num = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fenxiang_num());
  }

  if (has_fenxiang_total_num()) {
    // required int32 fenxiang_total_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fenxiang_total_num());
  }

  return total_size;
}
size_t smsg_fenxiang_num::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_fenxiang_num)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 fenxiang_num = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fenxiang_num());

    // required int32 fenxiang_total_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fenxiang_total_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_fenxiang_num::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_fenxiang_num)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_fenxiang_num* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_fenxiang_num>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_fenxiang_num)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_fenxiang_num)
    MergeFrom(*source);
  }
}

void smsg_fenxiang_num::MergeFrom(const smsg_fenxiang_num& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_fenxiang_num)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      fenxiang_num_ = from.fenxiang_num_;
    }
    if (cached_has_bits & 0x00000002u) {
      fenxiang_total_num_ = from.fenxiang_total_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_fenxiang_num::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_fenxiang_num)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_fenxiang_num::CopyFrom(const smsg_fenxiang_num& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_fenxiang_num)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_fenxiang_num::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void smsg_fenxiang_num::Swap(smsg_fenxiang_num* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_fenxiang_num::InternalSwap(smsg_fenxiang_num* other) {
  using std::swap;
  swap(fenxiang_num_, other->fenxiang_num_);
  swap(fenxiang_total_num_, other->fenxiang_total_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_fenxiang_num::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_libao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_libao::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_libao::cmsg_libao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_libao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_libao)
}
cmsg_libao::cmsg_libao(const cmsg_libao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_libao)
}

void cmsg_libao::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

cmsg_libao::~cmsg_libao() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_libao)
  SharedDtor();
}

void cmsg_libao::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_libao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_libao::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_libao& cmsg_libao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_libao.base);
  return *internal_default_instance();
}


void cmsg_libao::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    code_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_libao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_libao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_libao.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_libao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_libao)
  return false;
#undef DO_
}

void cmsg_libao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_libao.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_libao)
}

::google::protobuf::uint8* cmsg_libao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_libao.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_libao)
  return target;
}

size_t cmsg_libao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_libao)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_libao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_libao)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_libao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_libao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_libao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_libao)
    MergeFrom(*source);
  }
}

void cmsg_libao::MergeFrom(const cmsg_libao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_libao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_code()) {
    set_has_code();
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void cmsg_libao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_libao::CopyFrom(const cmsg_libao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_libao::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_libao::Swap(cmsg_libao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_libao::InternalSwap(cmsg_libao* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_libao::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_libao::InitAsDefaultInstance() {
}
void smsg_libao::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_libao::kRolesFieldNumber;
const int smsg_libao::kTypesFieldNumber;
const int smsg_libao::kValue1SFieldNumber;
const int smsg_libao::kValue2SFieldNumber;
const int smsg_libao::kValue3SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_libao::smsg_libao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_libao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_libao)
}
smsg_libao::smsg_libao(const smsg_libao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_libao)
}

void smsg_libao::SharedCtor() {
}

smsg_libao::~smsg_libao() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_libao)
  SharedDtor();
}

void smsg_libao::SharedDtor() {
}

void smsg_libao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_libao::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_libao& smsg_libao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_libao.base);
  return *internal_default_instance();
}


void smsg_libao::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_libao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_libao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.role_t roles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_libao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_libao)
  return false;
#undef DO_
}

void smsg_libao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 2;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->types(i), output);
  }

  // repeated int32 value1s = 3;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->value1s(i), output);
  }

  // repeated int32 value2s = 4;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value2s(i), output);
  }

  // repeated int32 value3s = 5;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value3s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_libao)
}

::google::protobuf::uint8* smsg_libao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->types_, target);

  // repeated int32 value1s = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->value1s_, target);

  // repeated int32 value2s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value2s_, target);

  // repeated int32 value3s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value3s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_libao)
  return target;
}

size_t smsg_libao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_libao)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.role_t roles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_libao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_libao)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_libao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_libao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_libao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_libao)
    MergeFrom(*source);
  }
}

void smsg_libao::MergeFrom(const smsg_libao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_libao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
}

void smsg_libao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_libao::CopyFrom(const smsg_libao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_libao::IsInitialized() const {
  return true;
}

void smsg_libao::Swap(smsg_libao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_libao::InternalSwap(smsg_libao* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_libao::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_recharge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_recharge::kIdFieldNumber;
const int cmsg_recharge::kPtFieldNumber;
const int cmsg_recharge::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_recharge::cmsg_recharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_recharge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_recharge)
}
cmsg_recharge::cmsg_recharge(const cmsg_recharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      code_(from.code_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pt()) {
    pt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pt_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_recharge)
}

void cmsg_recharge::SharedCtor() {
  pt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

cmsg_recharge::~cmsg_recharge() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_recharge)
  SharedDtor();
}

void cmsg_recharge::SharedDtor() {
  pt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_recharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_recharge::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_recharge& cmsg_recharge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_recharge.base);
  return *internal_default_instance();
}


void cmsg_recharge::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  code_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    pt_.ClearNonDefaultToEmptyNoArena();
  }
  set_changed();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_recharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_recharge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string pt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pt().data(), static_cast<int>(this->pt().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_recharge.pt");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code(this->code_size() - 1).data(),
            static_cast<int>(this->code(this->code_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_recharge.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_recharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_recharge)
  return false;
#undef DO_
}

void cmsg_recharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string pt = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pt().data(), static_cast<int>(this->pt().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_recharge.pt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pt(), output);
  }

  // repeated string code = 3;
  for (int i = 0, n = this->code_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code(i).data(), static_cast<int>(this->code(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_recharge.code");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->code(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_recharge)
}

::google::protobuf::uint8* cmsg_recharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string pt = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pt().data(), static_cast<int>(this->pt().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_recharge.pt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pt(), target);
  }

  // repeated string code = 3;
  for (int i = 0, n = this->code_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code(i).data(), static_cast<int>(this->code(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_recharge.code");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->code(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_recharge)
  return target;
}

size_t cmsg_recharge::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.cmsg_recharge)
  size_t total_size = 0;

  if (has_pt()) {
    // required string pt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pt());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t cmsg_recharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_recharge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string pt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pt());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string code = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->code_size());
  for (int i = 0, n = this->code_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->code(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_recharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_recharge)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_recharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_recharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_recharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_recharge)
    MergeFrom(*source);
  }
}

void cmsg_recharge::MergeFrom(const cmsg_recharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_recharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  code_.MergeFrom(from.code_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pt();
      pt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pt_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_recharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_recharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_recharge::CopyFrom(const cmsg_recharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_recharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_recharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void cmsg_recharge::Swap(cmsg_recharge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_recharge::InternalSwap(cmsg_recharge* other) {
  using std::swap;
  code_.InternalSwap(CastToBase(&other->code_));
  pt_.Swap(&other->pt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_recharge::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_recharge::InitAsDefaultInstance() {
}
void smsg_recharge::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_recharge::kRidFieldNumber;
const int smsg_recharge::kRolesFieldNumber;
const int smsg_recharge::kTypesFieldNumber;
const int smsg_recharge::kValue1SFieldNumber;
const int smsg_recharge::kValue2SFieldNumber;
const int smsg_recharge::kValue3SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_recharge::smsg_recharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_recharge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_recharge)
}
smsg_recharge::smsg_recharge(const smsg_recharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_recharge)
}

void smsg_recharge::SharedCtor() {
  rid_ = 0;
}

smsg_recharge::~smsg_recharge() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_recharge)
  SharedDtor();
}

void smsg_recharge::SharedDtor() {
}

void smsg_recharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_recharge::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_recharge& smsg_recharge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_recharge.base);
  return *internal_default_instance();
}


void smsg_recharge::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  set_changed();
  rid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_recharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_recharge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dhc.role_t roles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_recharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_recharge)
  return false;
#undef DO_
}

void smsg_recharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 rid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 3;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->types(i), output);
  }

  // repeated int32 value1s = 4;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value1s(i), output);
  }

  // repeated int32 value2s = 5;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value2s(i), output);
  }

  // repeated int32 value3s = 6;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->value3s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_recharge)
}

::google::protobuf::uint8* smsg_recharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 rid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // repeated .dhc.role_t roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->types_, target);

  // repeated int32 value1s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value1s_, target);

  // repeated int32 value2s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value2s_, target);

  // repeated int32 value3s = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(6, this->value3s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_recharge)
  return target;
}

size_t smsg_recharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_recharge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 rid = 1;
  if (has_rid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }
  // repeated .dhc.role_t roles = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_recharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_recharge)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_recharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_recharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_recharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_recharge)
    MergeFrom(*source);
  }
}

void smsg_recharge::MergeFrom(const smsg_recharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_recharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
  if (from.has_rid()) {
    set_rid(from.rid());
  }
}

void smsg_recharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_recharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_recharge::CopyFrom(const smsg_recharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_recharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_recharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void smsg_recharge::Swap(smsg_recharge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_recharge::InternalSwap(smsg_recharge* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(rid_, other->rid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_recharge::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_infomation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_infomation::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_infomation::cmsg_infomation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_infomation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_infomation)
}
cmsg_infomation::cmsg_infomation(const cmsg_infomation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_info()) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_infomation)
}

void cmsg_infomation::SharedCtor() {
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

cmsg_infomation::~cmsg_infomation() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_infomation)
  SharedDtor();
}

void cmsg_infomation::SharedDtor() {
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_infomation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_infomation::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_infomation& cmsg_infomation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_infomation.base);
  return *internal_default_instance();
}


void cmsg_infomation::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_infomation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    info_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_infomation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_infomation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->info().data(), static_cast<int>(this->info().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_infomation.info");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_infomation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_infomation)
  return false;
#undef DO_
}

void cmsg_infomation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_infomation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_infomation.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_infomation)
}

::google::protobuf::uint8* cmsg_infomation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_infomation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_infomation.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_infomation)
  return target;
}

size_t cmsg_infomation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_infomation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string info = 1;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_infomation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_infomation)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_infomation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_infomation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_infomation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_infomation)
    MergeFrom(*source);
  }
}

void cmsg_infomation::MergeFrom(const cmsg_infomation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_infomation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    set_has_info();
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
}

void cmsg_infomation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_infomation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_infomation::CopyFrom(const cmsg_infomation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_infomation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_infomation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_infomation::Swap(cmsg_infomation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_infomation::InternalSwap(cmsg_infomation* other) {
  using std::swap;
  info_.Swap(&other->info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_infomation::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_item_apply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_item_apply::kItemIdFieldNumber;
const int cmsg_item_apply::kNumFieldNumber;
const int cmsg_item_apply::kItemIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_item_apply::cmsg_item_apply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_item_apply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_item_apply)
}
cmsg_item_apply::cmsg_item_apply(const cmsg_item_apply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_index_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(item_index_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_item_apply)
}

void cmsg_item_apply::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_index_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(item_index_));
}

cmsg_item_apply::~cmsg_item_apply() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_item_apply)
  SharedDtor();
}

void cmsg_item_apply::SharedDtor() {
}

void cmsg_item_apply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_item_apply::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_item_apply& cmsg_item_apply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_item_apply.base);
  return *internal_default_instance();
}


void cmsg_item_apply::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_item_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_index_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(item_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_item_apply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_item_apply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_item_apply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_item_apply)
  return false;
#undef DO_
}

void cmsg_item_apply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_item_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // optional int32 item_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_item_apply)
}

::google::protobuf::uint8* cmsg_item_apply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_item_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // optional int32 item_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_item_apply)
  return target;
}

size_t cmsg_item_apply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.cmsg_item_apply)
  size_t total_size = 0;

  if (has_item_id()) {
    // required int32 item_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_id());
  }

  if (has_num()) {
    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  return total_size;
}
size_t cmsg_item_apply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_item_apply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 item_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_id());

    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 item_index = 3;
  if (has_item_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_item_apply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_item_apply)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_item_apply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_item_apply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_item_apply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_item_apply)
    MergeFrom(*source);
  }
}

void cmsg_item_apply::MergeFrom(const cmsg_item_apply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_item_apply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_index_ = from.item_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_item_apply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_item_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_item_apply::CopyFrom(const cmsg_item_apply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_item_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_item_apply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void cmsg_item_apply::Swap(cmsg_item_apply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_item_apply::InternalSwap(cmsg_item_apply* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(num_, other->num_);
  swap(item_index_, other->item_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_item_apply::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_item_apply::InitAsDefaultInstance() {
}
void smsg_item_apply::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_item_apply::kRolesFieldNumber;
const int smsg_item_apply::kTypesFieldNumber;
const int smsg_item_apply::kValue1SFieldNumber;
const int smsg_item_apply::kValue2SFieldNumber;
const int smsg_item_apply::kValue3SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_item_apply::smsg_item_apply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_item_apply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_item_apply)
}
smsg_item_apply::smsg_item_apply(const smsg_item_apply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_item_apply)
}

void smsg_item_apply::SharedCtor() {
}

smsg_item_apply::~smsg_item_apply() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_item_apply)
  SharedDtor();
}

void smsg_item_apply::SharedDtor() {
}

void smsg_item_apply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_item_apply::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_item_apply& smsg_item_apply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_item_apply.base);
  return *internal_default_instance();
}


void smsg_item_apply::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_item_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_item_apply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_item_apply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.role_t roles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_item_apply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_item_apply)
  return false;
#undef DO_
}

void smsg_item_apply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_item_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 2;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->types(i), output);
  }

  // repeated int32 value1s = 3;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->value1s(i), output);
  }

  // repeated int32 value2s = 4;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value2s(i), output);
  }

  // repeated int32 value3s = 5;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value3s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_item_apply)
}

::google::protobuf::uint8* smsg_item_apply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_item_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->types_, target);

  // repeated int32 value1s = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->value1s_, target);

  // repeated int32 value2s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value2s_, target);

  // repeated int32 value3s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value3s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_item_apply)
  return target;
}

size_t smsg_item_apply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_item_apply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.role_t roles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_item_apply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_item_apply)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_item_apply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_item_apply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_item_apply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_item_apply)
    MergeFrom(*source);
  }
}

void smsg_item_apply::MergeFrom(const smsg_item_apply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_item_apply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
}

void smsg_item_apply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_item_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_item_apply::CopyFrom(const smsg_item_apply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_item_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_item_apply::IsInitialized() const {
  return true;
}

void smsg_item_apply::Swap(smsg_item_apply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_item_apply::InternalSwap(smsg_item_apply* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_item_apply::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_battle_achieve::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_battle_achieve::kIdFieldNumber;
const int cmsg_battle_achieve::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_battle_achieve::cmsg_battle_achieve()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_battle_achieve.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_battle_achieve)
}
cmsg_battle_achieve::cmsg_battle_achieve(const cmsg_battle_achieve& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      id_(from.id_),
      num_(from.num_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_battle_achieve)
}

void cmsg_battle_achieve::SharedCtor() {
}

cmsg_battle_achieve::~cmsg_battle_achieve() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_battle_achieve)
  SharedDtor();
}

void cmsg_battle_achieve::SharedDtor() {
}

void cmsg_battle_achieve::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_battle_achieve::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_battle_achieve& cmsg_battle_achieve::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_battle_achieve.base);
  return *internal_default_instance();
}


void cmsg_battle_achieve::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_battle_achieve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_.Clear();
  set_changed();
  num_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_battle_achieve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_battle_achieve)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_num())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_num())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_battle_achieve)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_battle_achieve)
  return false;
#undef DO_
}

void cmsg_battle_achieve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_battle_achieve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 id = 1;
  for (int i = 0, n = this->id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->id(i), output);
  }

  // repeated int32 num = 2;
  for (int i = 0, n = this->num_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->num(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_battle_achieve)
}

::google::protobuf::uint8* cmsg_battle_achieve::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_battle_achieve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->id_, target);

  // repeated int32 num = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->num_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_battle_achieve)
  return target;
}

size_t cmsg_battle_achieve::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_battle_achieve)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->id_size());
    total_size += data_size;
  }

  // repeated int32 num = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->num_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->num_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_battle_achieve::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_battle_achieve)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_battle_achieve* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_battle_achieve>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_battle_achieve)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_battle_achieve)
    MergeFrom(*source);
  }
}

void cmsg_battle_achieve::MergeFrom(const cmsg_battle_achieve& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_battle_achieve)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_.MergeFrom(from.id_);
  num_.MergeFrom(from.num_);
}

void cmsg_battle_achieve::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_battle_achieve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_battle_achieve::CopyFrom(const cmsg_battle_achieve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_battle_achieve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_battle_achieve::IsInitialized() const {
  return true;
}

void cmsg_battle_achieve::Swap(cmsg_battle_achieve* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_battle_achieve::InternalSwap(cmsg_battle_achieve* other) {
  using std::swap;
  id_.InternalSwap(&other->id_);
  num_.InternalSwap(&other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_battle_achieve::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_achieve::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_achieve::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_achieve::cmsg_achieve()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_achieve.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_achieve)
}
cmsg_achieve::cmsg_achieve(const cmsg_achieve& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_achieve)
}

void cmsg_achieve::SharedCtor() {
  id_ = 0;
}

cmsg_achieve::~cmsg_achieve() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_achieve)
  SharedDtor();
}

void cmsg_achieve::SharedDtor() {
}

void cmsg_achieve::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_achieve::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_achieve& cmsg_achieve::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_achieve.base);
  return *internal_default_instance();
}


void cmsg_achieve::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_achieve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_achieve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_achieve)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_achieve)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_achieve)
  return false;
#undef DO_
}

void cmsg_achieve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_achieve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_achieve)
}

::google::protobuf::uint8* cmsg_achieve::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_achieve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_achieve)
  return target;
}

size_t cmsg_achieve::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_achieve)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_achieve::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_achieve)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_achieve* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_achieve>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_achieve)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_achieve)
    MergeFrom(*source);
  }
}

void cmsg_achieve::MergeFrom(const cmsg_achieve& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_achieve)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void cmsg_achieve::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_achieve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_achieve::CopyFrom(const cmsg_achieve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_achieve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_achieve::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_achieve::Swap(cmsg_achieve* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_achieve::InternalSwap(cmsg_achieve* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_achieve::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_level_reward::InitAsDefaultInstance() {
}
void smsg_level_reward::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_level_reward::kRolesFieldNumber;
const int smsg_level_reward::kTypesFieldNumber;
const int smsg_level_reward::kValue1SFieldNumber;
const int smsg_level_reward::kValue2SFieldNumber;
const int smsg_level_reward::kValue3SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_level_reward::smsg_level_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_level_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_level_reward)
}
smsg_level_reward::smsg_level_reward(const smsg_level_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_level_reward)
}

void smsg_level_reward::SharedCtor() {
}

smsg_level_reward::~smsg_level_reward() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_level_reward)
  SharedDtor();
}

void smsg_level_reward::SharedDtor() {
}

void smsg_level_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_level_reward::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_level_reward& smsg_level_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_level_reward.base);
  return *internal_default_instance();
}


void smsg_level_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_level_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_level_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_level_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.role_t roles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_level_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_level_reward)
  return false;
#undef DO_
}

void smsg_level_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_level_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 2;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->types(i), output);
  }

  // repeated int32 value1s = 3;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->value1s(i), output);
  }

  // repeated int32 value2s = 4;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value2s(i), output);
  }

  // repeated int32 value3s = 5;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value3s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_level_reward)
}

::google::protobuf::uint8* smsg_level_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_level_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->types_, target);

  // repeated int32 value1s = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->value1s_, target);

  // repeated int32 value2s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value2s_, target);

  // repeated int32 value3s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value3s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_level_reward)
  return target;
}

size_t smsg_level_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_level_reward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.role_t roles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_level_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_level_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_level_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_level_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_level_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_level_reward)
    MergeFrom(*source);
  }
}

void smsg_level_reward::MergeFrom(const smsg_level_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_level_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
}

void smsg_level_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_level_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_level_reward::CopyFrom(const smsg_level_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_level_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_level_reward::IsInitialized() const {
  return true;
}

void smsg_level_reward::Swap(smsg_level_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_level_reward::InternalSwap(smsg_level_reward* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_level_reward::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_battle_task::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_battle_task::kIdFieldNumber;
const int cmsg_battle_task::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_battle_task::cmsg_battle_task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_battle_task.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_battle_task)
}
cmsg_battle_task::cmsg_battle_task(const cmsg_battle_task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      id_(from.id_),
      num_(from.num_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_battle_task)
}

void cmsg_battle_task::SharedCtor() {
}

cmsg_battle_task::~cmsg_battle_task() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_battle_task)
  SharedDtor();
}

void cmsg_battle_task::SharedDtor() {
}

void cmsg_battle_task::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_battle_task::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_battle_task& cmsg_battle_task::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_battle_task.base);
  return *internal_default_instance();
}


void cmsg_battle_task::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_battle_task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_.Clear();
  set_changed();
  num_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_battle_task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_battle_task)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_num())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_num())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_battle_task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_battle_task)
  return false;
#undef DO_
}

void cmsg_battle_task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_battle_task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 id = 1;
  for (int i = 0, n = this->id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->id(i), output);
  }

  // repeated int32 num = 2;
  for (int i = 0, n = this->num_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->num(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_battle_task)
}

::google::protobuf::uint8* cmsg_battle_task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_battle_task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->id_, target);

  // repeated int32 num = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->num_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_battle_task)
  return target;
}

size_t cmsg_battle_task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_battle_task)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->id_size());
    total_size += data_size;
  }

  // repeated int32 num = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->num_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->num_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_battle_task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_battle_task)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_battle_task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_battle_task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_battle_task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_battle_task)
    MergeFrom(*source);
  }
}

void cmsg_battle_task::MergeFrom(const cmsg_battle_task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_battle_task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_.MergeFrom(from.id_);
  num_.MergeFrom(from.num_);
}

void cmsg_battle_task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_battle_task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_battle_task::CopyFrom(const cmsg_battle_task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_battle_task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_battle_task::IsInitialized() const {
  return true;
}

void cmsg_battle_task::Swap(cmsg_battle_task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_battle_task::InternalSwap(cmsg_battle_task* other) {
  using std::swap;
  id_.InternalSwap(&other->id_);
  num_.InternalSwap(&other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_battle_task::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_task::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_task::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_task::cmsg_task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_task.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_task)
}
cmsg_task::cmsg_task(const cmsg_task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_task)
}

void cmsg_task::SharedCtor() {
  id_ = 0;
}

cmsg_task::~cmsg_task() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_task)
  SharedDtor();
}

void cmsg_task::SharedDtor() {
}

void cmsg_task::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_task::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_task& cmsg_task::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_task.base);
  return *internal_default_instance();
}


void cmsg_task::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_task)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_task)
  return false;
#undef DO_
}

void cmsg_task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_task)
}

::google::protobuf::uint8* cmsg_task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_task)
  return target;
}

size_t cmsg_task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_task)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_task)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_task)
    MergeFrom(*source);
  }
}

void cmsg_task::MergeFrom(const cmsg_task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void cmsg_task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_task::CopyFrom(const cmsg_task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_task::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_task::Swap(cmsg_task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_task::InternalSwap(cmsg_task* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_task::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_fashion_on::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_fashion_on::kIdFieldNumber;
const int cmsg_fashion_on::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_fashion_on::cmsg_fashion_on()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_fashion_on.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_fashion_on)
}
cmsg_fashion_on::cmsg_fashion_on(const cmsg_fashion_on& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_fashion_on)
}

void cmsg_fashion_on::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

cmsg_fashion_on::~cmsg_fashion_on() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_fashion_on)
  SharedDtor();
}

void cmsg_fashion_on::SharedDtor() {
}

void cmsg_fashion_on::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_fashion_on::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_fashion_on& cmsg_fashion_on::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_fashion_on.base);
  return *internal_default_instance();
}


void cmsg_fashion_on::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_fashion_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&id_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_fashion_on::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_fashion_on)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_fashion_on)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_fashion_on)
  return false;
#undef DO_
}

void cmsg_fashion_on::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_fashion_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_fashion_on)
}

::google::protobuf::uint8* cmsg_fashion_on::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_fashion_on)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_fashion_on)
  return target;
}

size_t cmsg_fashion_on::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.game.cmsg_fashion_on)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t cmsg_fashion_on::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_fashion_on)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_fashion_on::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_fashion_on)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_fashion_on* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_fashion_on>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_fashion_on)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_fashion_on)
    MergeFrom(*source);
  }
}

void cmsg_fashion_on::MergeFrom(const cmsg_fashion_on& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_fashion_on)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_fashion_on::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_fashion_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_fashion_on::CopyFrom(const cmsg_fashion_on& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_fashion_on)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_fashion_on::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void cmsg_fashion_on::Swap(cmsg_fashion_on* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_fashion_on::InternalSwap(cmsg_fashion_on* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_fashion_on::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_battle_daily::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_battle_daily::kIdFieldNumber;
const int cmsg_battle_daily::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_battle_daily::cmsg_battle_daily()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_battle_daily.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_battle_daily)
}
cmsg_battle_daily::cmsg_battle_daily(const cmsg_battle_daily& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      id_(from.id_),
      num_(from.num_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_battle_daily)
}

void cmsg_battle_daily::SharedCtor() {
}

cmsg_battle_daily::~cmsg_battle_daily() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_battle_daily)
  SharedDtor();
}

void cmsg_battle_daily::SharedDtor() {
}

void cmsg_battle_daily::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_battle_daily::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_battle_daily& cmsg_battle_daily::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_battle_daily.base);
  return *internal_default_instance();
}


void cmsg_battle_daily::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_battle_daily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_.Clear();
  set_changed();
  num_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_battle_daily::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_battle_daily)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_num())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_num())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_battle_daily)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_battle_daily)
  return false;
#undef DO_
}

void cmsg_battle_daily::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_battle_daily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 id = 1;
  for (int i = 0, n = this->id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->id(i), output);
  }

  // repeated int32 num = 2;
  for (int i = 0, n = this->num_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->num(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_battle_daily)
}

::google::protobuf::uint8* cmsg_battle_daily::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_battle_daily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->id_, target);

  // repeated int32 num = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->num_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_battle_daily)
  return target;
}

size_t cmsg_battle_daily::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_battle_daily)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->id_size());
    total_size += data_size;
  }

  // repeated int32 num = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->num_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->num_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_battle_daily::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_battle_daily)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_battle_daily* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_battle_daily>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_battle_daily)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_battle_daily)
    MergeFrom(*source);
  }
}

void cmsg_battle_daily::MergeFrom(const cmsg_battle_daily& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_battle_daily)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_.MergeFrom(from.id_);
  num_.MergeFrom(from.num_);
}

void cmsg_battle_daily::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_battle_daily)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_battle_daily::CopyFrom(const cmsg_battle_daily& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_battle_daily)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_battle_daily::IsInitialized() const {
  return true;
}

void cmsg_battle_daily::Swap(cmsg_battle_daily* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_battle_daily::InternalSwap(cmsg_battle_daily* other) {
  using std::swap;
  id_.InternalSwap(&other->id_);
  num_.InternalSwap(&other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_battle_daily::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_daily::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_daily::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_daily::cmsg_daily()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_daily.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_daily)
}
cmsg_daily::cmsg_daily(const cmsg_daily& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_daily)
}

void cmsg_daily::SharedCtor() {
  id_ = 0;
}

cmsg_daily::~cmsg_daily() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_daily)
  SharedDtor();
}

void cmsg_daily::SharedDtor() {
}

void cmsg_daily::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_daily::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_daily& cmsg_daily::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_daily.base);
  return *internal_default_instance();
}


void cmsg_daily::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_daily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_daily::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_daily)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_daily)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_daily)
  return false;
#undef DO_
}

void cmsg_daily::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_daily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_daily)
}

::google::protobuf::uint8* cmsg_daily::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_daily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_daily)
  return target;
}

size_t cmsg_daily::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_daily)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_daily::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_daily)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_daily* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_daily>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_daily)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_daily)
    MergeFrom(*source);
  }
}

void cmsg_daily::MergeFrom(const cmsg_daily& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_daily)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void cmsg_daily::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_daily)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_daily::CopyFrom(const cmsg_daily& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_daily)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_daily::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_daily::Swap(cmsg_daily* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_daily::InternalSwap(cmsg_daily* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_daily::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_daily_reward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_daily_reward::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_daily_reward::cmsg_daily_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_daily_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_daily_reward)
}
cmsg_daily_reward::cmsg_daily_reward(const cmsg_daily_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_daily_reward)
}

void cmsg_daily_reward::SharedCtor() {
  id_ = 0;
}

cmsg_daily_reward::~cmsg_daily_reward() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_daily_reward)
  SharedDtor();
}

void cmsg_daily_reward::SharedDtor() {
}

void cmsg_daily_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_daily_reward::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_daily_reward& cmsg_daily_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_daily_reward.base);
  return *internal_default_instance();
}


void cmsg_daily_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_daily_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_daily_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_daily_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_daily_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_daily_reward)
  return false;
#undef DO_
}

void cmsg_daily_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_daily_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_daily_reward)
}

::google::protobuf::uint8* cmsg_daily_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_daily_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_daily_reward)
  return target;
}

size_t cmsg_daily_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_daily_reward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_daily_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_daily_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_daily_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_daily_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_daily_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_daily_reward)
    MergeFrom(*source);
  }
}

void cmsg_daily_reward::MergeFrom(const cmsg_daily_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_daily_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void cmsg_daily_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_daily_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_daily_reward::CopyFrom(const cmsg_daily_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_daily_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_daily_reward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_daily_reward::Swap(cmsg_daily_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_daily_reward::InternalSwap(cmsg_daily_reward* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_daily_reward::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_level_reward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_level_reward::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_level_reward::cmsg_level_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_level_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_level_reward)
}
cmsg_level_reward::cmsg_level_reward(const cmsg_level_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_level_reward)
}

void cmsg_level_reward::SharedCtor() {
  level_ = 0;
}

cmsg_level_reward::~cmsg_level_reward() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_level_reward)
  SharedDtor();
}

void cmsg_level_reward::SharedDtor() {
}

void cmsg_level_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_level_reward::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_level_reward& cmsg_level_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_level_reward.base);
  return *internal_default_instance();
}


void cmsg_level_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_level_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  level_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_level_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_level_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_level_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_level_reward)
  return false;
#undef DO_
}

void cmsg_level_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_level_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_level_reward)
}

::google::protobuf::uint8* cmsg_level_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_level_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_level_reward)
  return target;
}

size_t cmsg_level_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_level_reward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 level = 1;
  if (has_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_level_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_level_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_level_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_level_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_level_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_level_reward)
    MergeFrom(*source);
  }
}

void cmsg_level_reward::MergeFrom(const cmsg_level_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_level_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_level()) {
    set_level(from.level());
  }
}

void cmsg_level_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_level_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_level_reward::CopyFrom(const cmsg_level_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_level_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_level_reward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_level_reward::Swap(cmsg_level_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_level_reward::InternalSwap(cmsg_level_reward* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_level_reward::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_vip_reward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_vip_reward::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_vip_reward::cmsg_vip_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_cmsg_vip_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_vip_reward)
}
cmsg_vip_reward::cmsg_vip_reward(const cmsg_vip_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_vip_reward)
}

void cmsg_vip_reward::SharedCtor() {
  type_ = 0;
}

cmsg_vip_reward::~cmsg_vip_reward() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_vip_reward)
  SharedDtor();
}

void cmsg_vip_reward::SharedDtor() {
}

void cmsg_vip_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_vip_reward::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_vip_reward& cmsg_vip_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_cmsg_vip_reward.base);
  return *internal_default_instance();
}


void cmsg_vip_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_vip_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_vip_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_vip_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_vip_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_vip_reward)
  return false;
#undef DO_
}

void cmsg_vip_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_vip_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_vip_reward)
}

::google::protobuf::uint8* cmsg_vip_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_vip_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_vip_reward)
  return target;
}

size_t cmsg_vip_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_vip_reward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_vip_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_vip_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_vip_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_vip_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_vip_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_vip_reward)
    MergeFrom(*source);
  }
}

void cmsg_vip_reward::MergeFrom(const cmsg_vip_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_vip_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
}

void cmsg_vip_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_vip_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_vip_reward::CopyFrom(const cmsg_vip_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_vip_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_vip_reward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void cmsg_vip_reward::Swap(cmsg_vip_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_vip_reward::InternalSwap(cmsg_vip_reward* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_vip_reward::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_vip_reward::InitAsDefaultInstance() {
}
void smsg_vip_reward::clear_roles() {
  roles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_vip_reward::kRolesFieldNumber;
const int smsg_vip_reward::kTypesFieldNumber;
const int smsg_vip_reward::kValue1SFieldNumber;
const int smsg_vip_reward::kValue2SFieldNumber;
const int smsg_vip_reward::kValue3SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_vip_reward::smsg_vip_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_vip_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_vip_reward)
}
smsg_vip_reward::smsg_vip_reward(const smsg_vip_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roles_(from.roles_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_vip_reward)
}

void smsg_vip_reward::SharedCtor() {
}

smsg_vip_reward::~smsg_vip_reward() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_vip_reward)
  SharedDtor();
}

void smsg_vip_reward::SharedDtor() {
}

void smsg_vip_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_vip_reward::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_vip_reward& smsg_vip_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_vip_reward.base);
  return *internal_default_instance();
}


void smsg_vip_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_vip_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_vip_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_vip_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.role_t roles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_vip_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_vip_reward)
  return false;
#undef DO_
}

void smsg_vip_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_vip_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated int32 types = 2;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->types(i), output);
  }

  // repeated int32 value1s = 3;
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->value1s(i), output);
  }

  // repeated int32 value2s = 4;
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->value2s(i), output);
  }

  // repeated int32 value3s = 5;
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->value3s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_vip_reward)
}

::google::protobuf::uint8* smsg_vip_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_vip_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.role_t roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 types = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->types_, target);

  // repeated int32 value1s = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->value1s_, target);

  // repeated int32 value2s = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->value2s_, target);

  // repeated int32 value3s = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->value3s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_vip_reward)
  return target;
}

size_t smsg_vip_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_vip_reward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.role_t roles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated int32 types = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->types_size());
    total_size += data_size;
  }

  // repeated int32 value1s = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value1s_size());
    total_size += data_size;
  }

  // repeated int32 value2s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value2s_size());
    total_size += data_size;
  }

  // repeated int32 value3s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value3s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_vip_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_vip_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_vip_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_vip_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_vip_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_vip_reward)
    MergeFrom(*source);
  }
}

void smsg_vip_reward::MergeFrom(const smsg_vip_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_vip_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
}

void smsg_vip_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_vip_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_vip_reward::CopyFrom(const smsg_vip_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_vip_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_vip_reward::IsInitialized() const {
  return true;
}

void smsg_vip_reward::Swap(smsg_vip_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_vip_reward::InternalSwap(smsg_vip_reward* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_vip_reward::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_duobao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_duobao::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_duobao::smsg_duobao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_duobao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_duobao)
}
smsg_duobao::smsg_duobao(const smsg_duobao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_duobao)
}

void smsg_duobao::SharedCtor() {
  id_ = 0;
}

smsg_duobao::~smsg_duobao() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_duobao)
  SharedDtor();
}

void smsg_duobao::SharedDtor() {
}

void smsg_duobao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_duobao::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_duobao& smsg_duobao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_duobao.base);
  return *internal_default_instance();
}


void smsg_duobao::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_duobao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_duobao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_duobao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_duobao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_duobao)
  return false;
#undef DO_
}

void smsg_duobao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_duobao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_duobao)
}

::google::protobuf::uint8* smsg_duobao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_duobao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_duobao)
  return target;
}

size_t smsg_duobao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_duobao)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_duobao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_duobao)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_duobao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_duobao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_duobao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_duobao)
    MergeFrom(*source);
  }
}

void smsg_duobao::MergeFrom(const smsg_duobao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_duobao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void smsg_duobao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_duobao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_duobao::CopyFrom(const smsg_duobao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_duobao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_duobao::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void smsg_duobao::Swap(smsg_duobao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_duobao::InternalSwap(smsg_duobao* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_duobao::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_sys_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_sys_info::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_sys_info::smsg_sys_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhall_2eproto::scc_info_smsg_sys_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_sys_info)
}
smsg_sys_info::smsg_sys_info(const smsg_sys_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_sys_info)
}

void smsg_sys_info::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

smsg_sys_info::~smsg_sys_info() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_sys_info)
  SharedDtor();
}

void smsg_sys_info::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void smsg_sys_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_sys_info::descriptor() {
  ::protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_sys_info& smsg_sys_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhall_2eproto::scc_info_smsg_sys_info.base);
  return *internal_default_instance();
}


void smsg_sys_info::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_sys_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_sys_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_sys_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.smsg_sys_info.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_sys_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_sys_info)
  return false;
#undef DO_
}

void smsg_sys_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_sys_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_sys_info.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_sys_info)
}

::google::protobuf::uint8* smsg_sys_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_sys_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_sys_info.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_sys_info)
  return target;
}

size_t smsg_sys_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_sys_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_sys_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_sys_info)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_sys_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_sys_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_sys_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_sys_info)
    MergeFrom(*source);
  }
}

void smsg_sys_info::MergeFrom(const smsg_sys_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_sys_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_text()) {
    set_has_text();
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void smsg_sys_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_sys_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_sys_info::CopyFrom(const smsg_sys_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_sys_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_sys_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void smsg_sys_info::Swap(smsg_sys_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_sys_info::InternalSwap(smsg_sys_info* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_sys_info::GetMetadata() const {
  protobuf_msg_5fhall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace game
}  // namespace protocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_error* Arena::CreateMaybeMessage< ::protocol::game::smsg_error >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_error >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_login_player* Arena::CreateMaybeMessage< ::protocol::game::cmsg_login_player >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_login_player >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_login_player* Arena::CreateMaybeMessage< ::protocol::game::smsg_login_player >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_login_player >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_checkdata* Arena::CreateMaybeMessage< ::protocol::game::smsg_checkdata >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_checkdata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_post_num* Arena::CreateMaybeMessage< ::protocol::game::smsg_post_num >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_post_num >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_player_look* Arena::CreateMaybeMessage< ::protocol::game::cmsg_player_look >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_player_look >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_player_look* Arena::CreateMaybeMessage< ::protocol::game::smsg_player_look >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_player_look >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_role_on* Arena::CreateMaybeMessage< ::protocol::game::cmsg_role_on >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_role_on >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_role_hecheng* Arena::CreateMaybeMessage< ::protocol::game::cmsg_role_hecheng >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_role_hecheng >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_role_hecheng* Arena::CreateMaybeMessage< ::protocol::game::smsg_role_hecheng >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_role_hecheng >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_role_levelup* Arena::CreateMaybeMessage< ::protocol::game::cmsg_role_levelup >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_role_levelup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_avatar_on* Arena::CreateMaybeMessage< ::protocol::game::cmsg_avatar_on >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_avatar_on >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_toukuang_on* Arena::CreateMaybeMessage< ::protocol::game::cmsg_toukuang_on >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_toukuang_on >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_chat* Arena::CreateMaybeMessage< ::protocol::game::cmsg_chat >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_chat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_chat* Arena::CreateMaybeMessage< ::protocol::game::smsg_chat >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_chat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_gonggao* Arena::CreateMaybeMessage< ::protocol::game::smsg_gonggao >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_gonggao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_gm_command* Arena::CreateMaybeMessage< ::protocol::game::cmsg_gm_command >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_gm_command >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_gm_command* Arena::CreateMaybeMessage< ::protocol::game::smsg_gm_command >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_gm_command >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_player_name* Arena::CreateMaybeMessage< ::protocol::game::cmsg_player_name >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_player_name >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_player_info* Arena::CreateMaybeMessage< ::protocol::game::cmsg_player_info >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_player_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_player_data* Arena::CreateMaybeMessage< ::protocol::game::cmsg_player_data >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_player_data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_start_open_box* Arena::CreateMaybeMessage< ::protocol::game::cmsg_start_open_box >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_start_open_box >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_end_open_box* Arena::CreateMaybeMessage< ::protocol::game::cmsg_end_open_box >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_end_open_box >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_end_open_box* Arena::CreateMaybeMessage< ::protocol::game::smsg_end_open_box >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_end_open_box >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_battle_item_on* Arena::CreateMaybeMessage< ::protocol::game::cmsg_battle_item_on >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_battle_item_on >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_item_buy* Arena::CreateMaybeMessage< ::protocol::game::cmsg_item_buy >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_item_buy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_item_buy* Arena::CreateMaybeMessage< ::protocol::game::smsg_item_buy >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_item_buy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_item_sell* Arena::CreateMaybeMessage< ::protocol::game::cmsg_item_sell >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_item_sell >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_item_direct_buy* Arena::CreateMaybeMessage< ::protocol::game::cmsg_item_direct_buy >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_item_direct_buy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::msg_post_new_list* Arena::CreateMaybeMessage< ::protocol::game::msg_post_new_list >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::msg_post_new_list >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::msg_post_new_delete* Arena::CreateMaybeMessage< ::protocol::game::msg_post_new_delete >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::msg_post_new_delete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_post_look* Arena::CreateMaybeMessage< ::protocol::game::smsg_post_look >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_post_look >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_post_read* Arena::CreateMaybeMessage< ::protocol::game::cmsg_post_read >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_post_read >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_post_get* Arena::CreateMaybeMessage< ::protocol::game::cmsg_post_get >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_post_get >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_post_get* Arena::CreateMaybeMessage< ::protocol::game::smsg_post_get >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_post_get >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_post_delete* Arena::CreateMaybeMessage< ::protocol::game::cmsg_post_delete >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_post_delete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_post_get_all* Arena::CreateMaybeMessage< ::protocol::game::smsg_post_get_all >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_post_get_all >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_post_delete_all* Arena::CreateMaybeMessage< ::protocol::game::smsg_post_delete_all >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_post_delete_all >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_fenxiang_num* Arena::CreateMaybeMessage< ::protocol::game::smsg_fenxiang_num >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_fenxiang_num >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_libao* Arena::CreateMaybeMessage< ::protocol::game::cmsg_libao >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_libao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_libao* Arena::CreateMaybeMessage< ::protocol::game::smsg_libao >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_libao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_recharge* Arena::CreateMaybeMessage< ::protocol::game::cmsg_recharge >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_recharge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_recharge* Arena::CreateMaybeMessage< ::protocol::game::smsg_recharge >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_recharge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_infomation* Arena::CreateMaybeMessage< ::protocol::game::cmsg_infomation >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_infomation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_item_apply* Arena::CreateMaybeMessage< ::protocol::game::cmsg_item_apply >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_item_apply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_item_apply* Arena::CreateMaybeMessage< ::protocol::game::smsg_item_apply >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_item_apply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_battle_achieve* Arena::CreateMaybeMessage< ::protocol::game::cmsg_battle_achieve >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_battle_achieve >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_achieve* Arena::CreateMaybeMessage< ::protocol::game::cmsg_achieve >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_achieve >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_level_reward* Arena::CreateMaybeMessage< ::protocol::game::smsg_level_reward >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_level_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_battle_task* Arena::CreateMaybeMessage< ::protocol::game::cmsg_battle_task >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_battle_task >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_task* Arena::CreateMaybeMessage< ::protocol::game::cmsg_task >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_task >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_fashion_on* Arena::CreateMaybeMessage< ::protocol::game::cmsg_fashion_on >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_fashion_on >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_battle_daily* Arena::CreateMaybeMessage< ::protocol::game::cmsg_battle_daily >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_battle_daily >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_daily* Arena::CreateMaybeMessage< ::protocol::game::cmsg_daily >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_daily >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_daily_reward* Arena::CreateMaybeMessage< ::protocol::game::cmsg_daily_reward >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_daily_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_level_reward* Arena::CreateMaybeMessage< ::protocol::game::cmsg_level_reward >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_level_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_vip_reward* Arena::CreateMaybeMessage< ::protocol::game::cmsg_vip_reward >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_vip_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_vip_reward* Arena::CreateMaybeMessage< ::protocol::game::smsg_vip_reward >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_vip_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_duobao* Arena::CreateMaybeMessage< ::protocol::game::smsg_duobao >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_duobao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_sys_info* Arena::CreateMaybeMessage< ::protocol::game::smsg_sys_info >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_sys_info >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
