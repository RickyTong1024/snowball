// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_login.proto

#ifndef PROTOBUF_INCLUDED_msg_5flogin_2eproto
#define PROTOBUF_INCLUDED_msg_5flogin_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "acc.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5flogin_2eproto 

namespace protobuf_msg_5flogin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5flogin_2eproto
namespace protocol {
namespace game {
class cmsg_login;
class cmsg_loginDefaultTypeInternal;
extern cmsg_loginDefaultTypeInternal _cmsg_login_default_instance_;
class cmsg_perfect_account;
class cmsg_perfect_accountDefaultTypeInternal;
extern cmsg_perfect_accountDefaultTypeInternal _cmsg_perfect_account_default_instance_;
class cmsg_relogin_player;
class cmsg_relogin_playerDefaultTypeInternal;
extern cmsg_relogin_playerDefaultTypeInternal _cmsg_relogin_player_default_instance_;
class cmsg_switch_account;
class cmsg_switch_accountDefaultTypeInternal;
extern cmsg_switch_accountDefaultTypeInternal _cmsg_switch_account_default_instance_;
class smsg_login;
class smsg_loginDefaultTypeInternal;
extern smsg_loginDefaultTypeInternal _smsg_login_default_instance_;
}  // namespace game
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::game::cmsg_login* Arena::CreateMaybeMessage<::protocol::game::cmsg_login>(Arena*);
template<> ::protocol::game::cmsg_perfect_account* Arena::CreateMaybeMessage<::protocol::game::cmsg_perfect_account>(Arena*);
template<> ::protocol::game::cmsg_relogin_player* Arena::CreateMaybeMessage<::protocol::game::cmsg_relogin_player>(Arena*);
template<> ::protocol::game::cmsg_switch_account* Arena::CreateMaybeMessage<::protocol::game::cmsg_switch_account>(Arena*);
template<> ::protocol::game::smsg_login* Arena::CreateMaybeMessage<::protocol::game::smsg_login>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {
namespace game {

// ===================================================================

class cmsg_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_login) */ {
 public:
  cmsg_login();
  virtual ~cmsg_login();

  cmsg_login(const cmsg_login& from);

  inline cmsg_login& operator=(const cmsg_login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_login(cmsg_login&& from) noexcept
    : cmsg_login() {
    *this = ::std::move(from);
  }

  inline cmsg_login& operator=(cmsg_login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_login* internal_default_instance() {
    return reinterpret_cast<const cmsg_login*>(
               &_cmsg_login_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(cmsg_login* other);
  friend void swap(cmsg_login& a, cmsg_login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_login* New() const final {
    return CreateMaybeMessage<cmsg_login>(NULL);
  }

  cmsg_login* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_login>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_login& from);
  void MergeFrom(const cmsg_login& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // required string pt = 3;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 3;
  const ::std::string& pt() const;
  void set_pt(const ::std::string& value);
  #if LANG_CXX11
  void set_pt(::std::string&& value);
  #endif
  void set_pt(const char* value);
  void set_pt(const char* value, size_t size);
  ::std::string* mutable_pt();
  ::std::string* release_pt();
  void set_allocated_pt(::std::string* pt);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_login)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_password();
  void clear_has_password();
  void set_has_pt();
  void clear_has_pt();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr pt_;
  friend struct ::protobuf_msg_5flogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_login) */ {
 public:
  smsg_login();
  virtual ~smsg_login();

  smsg_login(const smsg_login& from);

  inline smsg_login& operator=(const smsg_login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_login(smsg_login&& from) noexcept
    : smsg_login() {
    *this = ::std::move(from);
  }

  inline smsg_login& operator=(smsg_login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_login* internal_default_instance() {
    return reinterpret_cast<const smsg_login*>(
               &_smsg_login_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(smsg_login* other);
  friend void swap(smsg_login& a, smsg_login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_login* New() const final {
    return CreateMaybeMessage<smsg_login>(NULL);
  }

  smsg_login* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_login>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_login& from);
  void MergeFrom(const smsg_login& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dhc.acc_t acc = 1;
  bool has_acc() const;
  void clear_acc();
  static const int kAccFieldNumber = 1;
  private:
  const ::dhc::acc_t& _internal_acc() const;
  public:
  const ::dhc::acc_t& acc() const;
  ::dhc::acc_t* release_acc();
  ::dhc::acc_t* mutable_acc();
  void set_allocated_acc(::dhc::acc_t* acc);

  // optional int32 code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_login)
 private:
  void set_has_acc();
  void clear_has_acc();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::dhc::acc_t* acc_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_msg_5flogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_switch_account : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_switch_account) */ {
 public:
  cmsg_switch_account();
  virtual ~cmsg_switch_account();

  cmsg_switch_account(const cmsg_switch_account& from);

  inline cmsg_switch_account& operator=(const cmsg_switch_account& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_switch_account(cmsg_switch_account&& from) noexcept
    : cmsg_switch_account() {
    *this = ::std::move(from);
  }

  inline cmsg_switch_account& operator=(cmsg_switch_account&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_switch_account& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_switch_account* internal_default_instance() {
    return reinterpret_cast<const cmsg_switch_account*>(
               &_cmsg_switch_account_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(cmsg_switch_account* other);
  friend void swap(cmsg_switch_account& a, cmsg_switch_account& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_switch_account* New() const final {
    return CreateMaybeMessage<cmsg_switch_account>(NULL);
  }

  cmsg_switch_account* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_switch_account>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_switch_account& from);
  void MergeFrom(const cmsg_switch_account& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_switch_account* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_switch_account)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_password();
  void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct ::protobuf_msg_5flogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_perfect_account : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_perfect_account) */ {
 public:
  cmsg_perfect_account();
  virtual ~cmsg_perfect_account();

  cmsg_perfect_account(const cmsg_perfect_account& from);

  inline cmsg_perfect_account& operator=(const cmsg_perfect_account& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_perfect_account(cmsg_perfect_account&& from) noexcept
    : cmsg_perfect_account() {
    *this = ::std::move(from);
  }

  inline cmsg_perfect_account& operator=(cmsg_perfect_account&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_perfect_account& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_perfect_account* internal_default_instance() {
    return reinterpret_cast<const cmsg_perfect_account*>(
               &_cmsg_perfect_account_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(cmsg_perfect_account* other);
  friend void swap(cmsg_perfect_account& a, cmsg_perfect_account& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_perfect_account* New() const final {
    return CreateMaybeMessage<cmsg_perfect_account>(NULL);
  }

  cmsg_perfect_account* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_perfect_account>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_perfect_account& from);
  void MergeFrom(const cmsg_perfect_account& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_perfect_account* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_perfect_account)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_password();
  void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct ::protobuf_msg_5flogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_relogin_player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_relogin_player) */ {
 public:
  cmsg_relogin_player();
  virtual ~cmsg_relogin_player();

  cmsg_relogin_player(const cmsg_relogin_player& from);

  inline cmsg_relogin_player& operator=(const cmsg_relogin_player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_relogin_player(cmsg_relogin_player&& from) noexcept
    : cmsg_relogin_player() {
    *this = ::std::move(from);
  }

  inline cmsg_relogin_player& operator=(cmsg_relogin_player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_relogin_player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_relogin_player* internal_default_instance() {
    return reinterpret_cast<const cmsg_relogin_player*>(
               &_cmsg_relogin_player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(cmsg_relogin_player* other);
  friend void swap(cmsg_relogin_player& a, cmsg_relogin_player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_relogin_player* New() const final {
    return CreateMaybeMessage<cmsg_relogin_player>(NULL);
  }

  cmsg_relogin_player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_relogin_player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_relogin_player& from);
  void MergeFrom(const cmsg_relogin_player& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_relogin_player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // required int32 code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_relogin_player)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_code();
  void clear_has_code();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_msg_5flogin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// cmsg_login

// required string username = 1;
inline bool cmsg_login::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cmsg_login::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cmsg_login::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cmsg_login::clear_username() {
  set_changed();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& cmsg_login::username() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_login.username)
  return username_.GetNoArena();
}
inline void cmsg_login::set_username(const ::std::string& value) {
  set_changed();
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_login.username)
}
#if LANG_CXX11
inline void cmsg_login::set_username(::std::string&& value) {
  set_changed();
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_login.username)
}
#endif
inline void cmsg_login::set_username(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_login.username)
}
inline void cmsg_login::set_username(const char* value, size_t size) {
  set_changed();
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_login.username)
}
inline ::std::string* cmsg_login::mutable_username() {
  set_changed();
  set_has_username();
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_login.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_login::release_username() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_login.username)
  if (!has_username()) {
    return NULL;
  }
  clear_has_username();
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_login::set_allocated_username(::std::string* username) {
  set_changed();
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_login.username)
}

// required string password = 2;
inline bool cmsg_login::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cmsg_login::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cmsg_login::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cmsg_login::clear_password() {
  set_changed();
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& cmsg_login::password() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_login.password)
  return password_.GetNoArena();
}
inline void cmsg_login::set_password(const ::std::string& value) {
  set_changed();
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_login.password)
}
#if LANG_CXX11
inline void cmsg_login::set_password(::std::string&& value) {
  set_changed();
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_login.password)
}
#endif
inline void cmsg_login::set_password(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_login.password)
}
inline void cmsg_login::set_password(const char* value, size_t size) {
  set_changed();
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_login.password)
}
inline ::std::string* cmsg_login::mutable_password() {
  set_changed();
  set_has_password();
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_login::release_password() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_login.password)
  if (!has_password()) {
    return NULL;
  }
  clear_has_password();
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_login::set_allocated_password(::std::string* password) {
  set_changed();
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_login.password)
}

// required string pt = 3;
inline bool cmsg_login::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cmsg_login::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cmsg_login::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cmsg_login::clear_pt() {
  set_changed();
  pt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pt();
}
inline const ::std::string& cmsg_login::pt() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_login.pt)
  return pt_.GetNoArena();
}
inline void cmsg_login::set_pt(const ::std::string& value) {
  set_changed();
  set_has_pt();
  pt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_login.pt)
}
#if LANG_CXX11
inline void cmsg_login::set_pt(::std::string&& value) {
  set_changed();
  set_has_pt();
  pt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_login.pt)
}
#endif
inline void cmsg_login::set_pt(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_pt();
  pt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_login.pt)
}
inline void cmsg_login::set_pt(const char* value, size_t size) {
  set_changed();
  set_has_pt();
  pt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_login.pt)
}
inline ::std::string* cmsg_login::mutable_pt() {
  set_changed();
  set_has_pt();
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_login.pt)
  return pt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_login::release_pt() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_login.pt)
  if (!has_pt()) {
    return NULL;
  }
  clear_has_pt();
  return pt_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_login::set_allocated_pt(::std::string* pt) {
  set_changed();
  if (pt != NULL) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pt);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_login.pt)
}

// -------------------------------------------------------------------

// smsg_login

// required .dhc.acc_t acc = 1;
inline bool smsg_login::has_acc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void smsg_login::set_has_acc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void smsg_login::clear_has_acc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::dhc::acc_t& smsg_login::_internal_acc() const {
  return *acc_;
}
inline const ::dhc::acc_t& smsg_login::acc() const {
  const ::dhc::acc_t* p = acc_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_login.acc)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::acc_t*>(
      &::dhc::_acc_t_default_instance_);
}
inline ::dhc::acc_t* smsg_login::release_acc() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_login.acc)
  clear_has_acc();
  ::dhc::acc_t* temp = acc_;
  acc_ = NULL;
  return temp;
}
inline ::dhc::acc_t* smsg_login::mutable_acc() {
  set_has_acc();
  if (acc_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::acc_t>(GetArenaNoVirtual());
    acc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_login.acc)
  return acc_;
}
inline void smsg_login::set_allocated_acc(::dhc::acc_t* acc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(acc_);
  }
  if (acc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      acc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, acc, submessage_arena);
    }
    set_has_acc();
  } else {
    clear_has_acc();
  }
  acc_ = acc;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_login.acc)
}

// optional int32 code = 2;
inline bool smsg_login::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void smsg_login::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void smsg_login::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void smsg_login::clear_code() {
  set_changed();
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 smsg_login::code() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_login.code)
  return code_;
}
inline void smsg_login::set_code(::google::protobuf::int32 value) {
  set_changed();
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_login.code)
}

// -------------------------------------------------------------------

// cmsg_switch_account

// required string username = 1;
inline bool cmsg_switch_account::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cmsg_switch_account::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cmsg_switch_account::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cmsg_switch_account::clear_username() {
  set_changed();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& cmsg_switch_account::username() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_switch_account.username)
  return username_.GetNoArena();
}
inline void cmsg_switch_account::set_username(const ::std::string& value) {
  set_changed();
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_switch_account.username)
}
#if LANG_CXX11
inline void cmsg_switch_account::set_username(::std::string&& value) {
  set_changed();
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_switch_account.username)
}
#endif
inline void cmsg_switch_account::set_username(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_switch_account.username)
}
inline void cmsg_switch_account::set_username(const char* value, size_t size) {
  set_changed();
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_switch_account.username)
}
inline ::std::string* cmsg_switch_account::mutable_username() {
  set_changed();
  set_has_username();
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_switch_account.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_switch_account::release_username() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_switch_account.username)
  if (!has_username()) {
    return NULL;
  }
  clear_has_username();
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_switch_account::set_allocated_username(::std::string* username) {
  set_changed();
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_switch_account.username)
}

// required string password = 2;
inline bool cmsg_switch_account::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cmsg_switch_account::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cmsg_switch_account::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cmsg_switch_account::clear_password() {
  set_changed();
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& cmsg_switch_account::password() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_switch_account.password)
  return password_.GetNoArena();
}
inline void cmsg_switch_account::set_password(const ::std::string& value) {
  set_changed();
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_switch_account.password)
}
#if LANG_CXX11
inline void cmsg_switch_account::set_password(::std::string&& value) {
  set_changed();
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_switch_account.password)
}
#endif
inline void cmsg_switch_account::set_password(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_switch_account.password)
}
inline void cmsg_switch_account::set_password(const char* value, size_t size) {
  set_changed();
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_switch_account.password)
}
inline ::std::string* cmsg_switch_account::mutable_password() {
  set_changed();
  set_has_password();
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_switch_account.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_switch_account::release_password() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_switch_account.password)
  if (!has_password()) {
    return NULL;
  }
  clear_has_password();
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_switch_account::set_allocated_password(::std::string* password) {
  set_changed();
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_switch_account.password)
}

// -------------------------------------------------------------------

// cmsg_perfect_account

// required string username = 1;
inline bool cmsg_perfect_account::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cmsg_perfect_account::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cmsg_perfect_account::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cmsg_perfect_account::clear_username() {
  set_changed();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& cmsg_perfect_account::username() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_perfect_account.username)
  return username_.GetNoArena();
}
inline void cmsg_perfect_account::set_username(const ::std::string& value) {
  set_changed();
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_perfect_account.username)
}
#if LANG_CXX11
inline void cmsg_perfect_account::set_username(::std::string&& value) {
  set_changed();
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_perfect_account.username)
}
#endif
inline void cmsg_perfect_account::set_username(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_perfect_account.username)
}
inline void cmsg_perfect_account::set_username(const char* value, size_t size) {
  set_changed();
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_perfect_account.username)
}
inline ::std::string* cmsg_perfect_account::mutable_username() {
  set_changed();
  set_has_username();
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_perfect_account.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_perfect_account::release_username() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_perfect_account.username)
  if (!has_username()) {
    return NULL;
  }
  clear_has_username();
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_perfect_account::set_allocated_username(::std::string* username) {
  set_changed();
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_perfect_account.username)
}

// required string password = 2;
inline bool cmsg_perfect_account::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cmsg_perfect_account::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cmsg_perfect_account::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cmsg_perfect_account::clear_password() {
  set_changed();
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& cmsg_perfect_account::password() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_perfect_account.password)
  return password_.GetNoArena();
}
inline void cmsg_perfect_account::set_password(const ::std::string& value) {
  set_changed();
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_perfect_account.password)
}
#if LANG_CXX11
inline void cmsg_perfect_account::set_password(::std::string&& value) {
  set_changed();
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_perfect_account.password)
}
#endif
inline void cmsg_perfect_account::set_password(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_perfect_account.password)
}
inline void cmsg_perfect_account::set_password(const char* value, size_t size) {
  set_changed();
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_perfect_account.password)
}
inline ::std::string* cmsg_perfect_account::mutable_password() {
  set_changed();
  set_has_password();
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_perfect_account.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_perfect_account::release_password() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_perfect_account.password)
  if (!has_password()) {
    return NULL;
  }
  clear_has_password();
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_perfect_account::set_allocated_password(::std::string* password) {
  set_changed();
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_perfect_account.password)
}

// -------------------------------------------------------------------

// cmsg_relogin_player

// required uint64 guid = 1;
inline bool cmsg_relogin_player::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cmsg_relogin_player::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cmsg_relogin_player::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cmsg_relogin_player::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 cmsg_relogin_player::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_relogin_player.guid)
  return guid_;
}
inline void cmsg_relogin_player::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_relogin_player.guid)
}

// required int32 code = 2;
inline bool cmsg_relogin_player::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cmsg_relogin_player::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cmsg_relogin_player::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cmsg_relogin_player::clear_code() {
  set_changed();
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 cmsg_relogin_player::code() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_relogin_player.code)
  return code_;
}
inline void cmsg_relogin_player::set_code(::google::protobuf::int32 value) {
  set_changed();
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_relogin_player.code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace game
}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5flogin_2eproto
