// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_name.proto

#ifndef PROTOBUF_INCLUDED_msg_5fname_2eproto
#define PROTOBUF_INCLUDED_msg_5fname_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fname_2eproto 

namespace protobuf_msg_5fname_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5fname_2eproto
namespace protocol {
namespace game {
class msg_name_list;
class msg_name_listDefaultTypeInternal;
extern msg_name_listDefaultTypeInternal _msg_name_list_default_instance_;
class msg_name_player;
class msg_name_playerDefaultTypeInternal;
extern msg_name_playerDefaultTypeInternal _msg_name_player_default_instance_;
class push_hall_name_insert;
class push_hall_name_insertDefaultTypeInternal;
extern push_hall_name_insertDefaultTypeInternal _push_hall_name_insert_default_instance_;
class rep_social_name_search;
class rep_social_name_searchDefaultTypeInternal;
extern rep_social_name_searchDefaultTypeInternal _rep_social_name_search_default_instance_;
class req_social_name_search;
class req_social_name_searchDefaultTypeInternal;
extern req_social_name_searchDefaultTypeInternal _req_social_name_search_default_instance_;
}  // namespace game
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::game::msg_name_list* Arena::CreateMaybeMessage<::protocol::game::msg_name_list>(Arena*);
template<> ::protocol::game::msg_name_player* Arena::CreateMaybeMessage<::protocol::game::msg_name_player>(Arena*);
template<> ::protocol::game::push_hall_name_insert* Arena::CreateMaybeMessage<::protocol::game::push_hall_name_insert>(Arena*);
template<> ::protocol::game::rep_social_name_search* Arena::CreateMaybeMessage<::protocol::game::rep_social_name_search>(Arena*);
template<> ::protocol::game::req_social_name_search* Arena::CreateMaybeMessage<::protocol::game::req_social_name_search>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {
namespace game {

// ===================================================================

class msg_name_list : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_name_list) */ {
 public:
  msg_name_list();
  virtual ~msg_name_list();

  msg_name_list(const msg_name_list& from);

  inline msg_name_list& operator=(const msg_name_list& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_name_list(msg_name_list&& from) noexcept
    : msg_name_list() {
    *this = ::std::move(from);
  }

  inline msg_name_list& operator=(msg_name_list&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_name_list& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_name_list* internal_default_instance() {
    return reinterpret_cast<const msg_name_list*>(
               &_msg_name_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(msg_name_list* other);
  friend void swap(msg_name_list& a, msg_name_list& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_name_list* New() const final {
    return CreateMaybeMessage<msg_name_list>(NULL);
  }

  msg_name_list* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_name_list>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_name_list& from);
  void MergeFrom(const msg_name_list& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_name_list* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guids = 2;
  int guids_size() const;
  void clear_guids();
  static const int kGuidsFieldNumber = 2;
  ::google::protobuf::uint64 guids(int index) const;
  void set_guids(int index, ::google::protobuf::uint64 value);
  void add_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guids();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_name_list)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guids_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct ::protobuf_msg_5fname_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_name_player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_name_player) */ {
 public:
  msg_name_player();
  virtual ~msg_name_player();

  msg_name_player(const msg_name_player& from);

  inline msg_name_player& operator=(const msg_name_player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_name_player(msg_name_player&& from) noexcept
    : msg_name_player() {
    *this = ::std::move(from);
  }

  inline msg_name_player& operator=(msg_name_player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_name_player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_name_player* internal_default_instance() {
    return reinterpret_cast<const msg_name_player*>(
               &_msg_name_player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(msg_name_player* other);
  friend void swap(msg_name_player& a, msg_name_player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_name_player* New() const final {
    return CreateMaybeMessage<msg_name_player>(NULL);
  }

  msg_name_player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_name_player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_name_player& from);
  void MergeFrom(const msg_name_player& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_name_player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // optional int32 sex = 3;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 level = 4;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int32 cup = 5;
  bool has_cup() const;
  void clear_cup();
  static const int kCupFieldNumber = 5;
  ::google::protobuf::int32 cup() const;
  void set_cup(::google::protobuf::int32 value);

  // optional int32 avatar_on = 7;
  bool has_avatar_on() const;
  void clear_avatar_on();
  static const int kAvatarOnFieldNumber = 7;
  ::google::protobuf::int32 avatar_on() const;
  void set_avatar_on(::google::protobuf::int32 value);

  // optional int32 toukuang_on = 8;
  bool has_toukuang_on() const;
  void clear_toukuang_on();
  static const int kToukuangOnFieldNumber = 8;
  ::google::protobuf::int32 toukuang_on() const;
  void set_toukuang_on(::google::protobuf::int32 value);

  // optional int32 region_id = 9;
  bool has_region_id() const;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 9;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // optional int32 name_color = 10;
  bool has_name_color() const;
  void clear_name_color();
  static const int kNameColorFieldNumber = 10;
  ::google::protobuf::int32 name_color() const;
  void set_name_color(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_name_player)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_name();
  void clear_has_name();
  void set_has_sex();
  void clear_has_sex();
  void set_has_level();
  void clear_has_level();
  void set_has_cup();
  void clear_has_cup();
  void set_has_avatar_on();
  void clear_has_avatar_on();
  void set_has_toukuang_on();
  void clear_has_toukuang_on();
  void set_has_region_id();
  void clear_has_region_id();
  void set_has_name_color();
  void clear_has_name_color();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 cup_;
  ::google::protobuf::int32 avatar_on_;
  ::google::protobuf::int32 toukuang_on_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 name_color_;
  friend struct ::protobuf_msg_5fname_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class push_hall_name_insert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.push_hall_name_insert) */ {
 public:
  push_hall_name_insert();
  virtual ~push_hall_name_insert();

  push_hall_name_insert(const push_hall_name_insert& from);

  inline push_hall_name_insert& operator=(const push_hall_name_insert& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  push_hall_name_insert(push_hall_name_insert&& from) noexcept
    : push_hall_name_insert() {
    *this = ::std::move(from);
  }

  inline push_hall_name_insert& operator=(push_hall_name_insert&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const push_hall_name_insert& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const push_hall_name_insert* internal_default_instance() {
    return reinterpret_cast<const push_hall_name_insert*>(
               &_push_hall_name_insert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(push_hall_name_insert* other);
  friend void swap(push_hall_name_insert& a, push_hall_name_insert& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline push_hall_name_insert* New() const final {
    return CreateMaybeMessage<push_hall_name_insert>(NULL);
  }

  push_hall_name_insert* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<push_hall_name_insert>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const push_hall_name_insert& from);
  void MergeFrom(const push_hall_name_insert& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(push_hall_name_insert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.push_hall_name_insert)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_name();
  void clear_has_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 guid_;
  friend struct ::protobuf_msg_5fname_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class req_social_name_search : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.req_social_name_search) */ {
 public:
  req_social_name_search();
  virtual ~req_social_name_search();

  req_social_name_search(const req_social_name_search& from);

  inline req_social_name_search& operator=(const req_social_name_search& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  req_social_name_search(req_social_name_search&& from) noexcept
    : req_social_name_search() {
    *this = ::std::move(from);
  }

  inline req_social_name_search& operator=(req_social_name_search&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const req_social_name_search& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const req_social_name_search* internal_default_instance() {
    return reinterpret_cast<const req_social_name_search*>(
               &_req_social_name_search_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(req_social_name_search* other);
  friend void swap(req_social_name_search& a, req_social_name_search& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline req_social_name_search* New() const final {
    return CreateMaybeMessage<req_social_name_search>(NULL);
  }

  req_social_name_search* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<req_social_name_search>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const req_social_name_search& from);
  void MergeFrom(const req_social_name_search& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(req_social_name_search* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protocol.game.req_social_name_search)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct ::protobuf_msg_5fname_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class rep_social_name_search : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.rep_social_name_search) */ {
 public:
  rep_social_name_search();
  virtual ~rep_social_name_search();

  rep_social_name_search(const rep_social_name_search& from);

  inline rep_social_name_search& operator=(const rep_social_name_search& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  rep_social_name_search(rep_social_name_search&& from) noexcept
    : rep_social_name_search() {
    *this = ::std::move(from);
  }

  inline rep_social_name_search& operator=(rep_social_name_search&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rep_social_name_search& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const rep_social_name_search* internal_default_instance() {
    return reinterpret_cast<const rep_social_name_search*>(
               &_rep_social_name_search_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(rep_social_name_search* other);
  friend void swap(rep_social_name_search& a, rep_social_name_search& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline rep_social_name_search* New() const final {
    return CreateMaybeMessage<rep_social_name_search>(NULL);
  }

  rep_social_name_search* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<rep_social_name_search>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const rep_social_name_search& from);
  void MergeFrom(const rep_social_name_search& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(rep_social_name_search* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_name_player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::protocol::game::msg_name_player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_name_player >*
      mutable_players();
  const ::protocol::game::msg_name_player& players(int index) const;
  ::protocol::game::msg_name_player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_name_player >&
      players() const;

  // @@protoc_insertion_point(class_scope:protocol.game.rep_social_name_search)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_name_player > players_;
  friend struct ::protobuf_msg_5fname_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// msg_name_list

// required string name = 1;
inline bool msg_name_list::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_name_list::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_name_list::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_name_list::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& msg_name_list::name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_list.name)
  return name_.GetNoArena();
}
inline void msg_name_list::set_name(const ::std::string& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_list.name)
}
#if LANG_CXX11
inline void msg_name_list::set_name(::std::string&& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_name_list.name)
}
#endif
inline void msg_name_list::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_name_list.name)
}
inline void msg_name_list::set_name(const char* value, size_t size) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_name_list.name)
}
inline ::std::string* msg_name_list::mutable_name() {
  set_changed();
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_name_list.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_name_list::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_name_list.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_name_list::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_name_list.name)
}

// repeated uint64 guids = 2;
inline int msg_name_list::guids_size() const {
  return guids_.size();
}
inline void msg_name_list::clear_guids() {
  set_changed();
  guids_.Clear();
}
inline ::google::protobuf::uint64 msg_name_list::guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_list.guids)
  return guids_.Get(index);
}
inline void msg_name_list::set_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_list.guids)
}
inline void msg_name_list::add_guids(::google::protobuf::uint64 value) {
  set_changed();
  guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_name_list.guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
msg_name_list::guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_name_list.guids)
  return guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
msg_name_list::mutable_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_name_list.guids)
  return &guids_;
}

// -------------------------------------------------------------------

// msg_name_player

// optional uint64 guid = 1;
inline bool msg_name_player::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_name_player::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_name_player::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_name_player::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 msg_name_player::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_player.guid)
  return guid_;
}
inline void msg_name_player::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_player.guid)
}

// optional string name = 2;
inline bool msg_name_player::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_name_player::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_name_player::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_name_player::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& msg_name_player::name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_player.name)
  return name_.GetNoArena();
}
inline void msg_name_player::set_name(const ::std::string& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_player.name)
}
#if LANG_CXX11
inline void msg_name_player::set_name(::std::string&& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_name_player.name)
}
#endif
inline void msg_name_player::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_name_player.name)
}
inline void msg_name_player::set_name(const char* value, size_t size) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_name_player.name)
}
inline ::std::string* msg_name_player::mutable_name() {
  set_changed();
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_name_player.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_name_player::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_name_player.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_name_player::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_name_player.name)
}

// optional int32 sex = 3;
inline bool msg_name_player::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_name_player::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_name_player::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_name_player::clear_sex() {
  set_changed();
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 msg_name_player::sex() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_player.sex)
  return sex_;
}
inline void msg_name_player::set_sex(::google::protobuf::int32 value) {
  set_changed();
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_player.sex)
}

// optional int32 level = 4;
inline bool msg_name_player::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_name_player::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_name_player::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_name_player::clear_level() {
  set_changed();
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 msg_name_player::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_player.level)
  return level_;
}
inline void msg_name_player::set_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_player.level)
}

// optional int32 cup = 5;
inline bool msg_name_player::has_cup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_name_player::set_has_cup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_name_player::clear_has_cup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_name_player::clear_cup() {
  set_changed();
  cup_ = 0;
  clear_has_cup();
}
inline ::google::protobuf::int32 msg_name_player::cup() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_player.cup)
  return cup_;
}
inline void msg_name_player::set_cup(::google::protobuf::int32 value) {
  set_changed();
  set_has_cup();
  cup_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_player.cup)
}

// optional int32 avatar_on = 7;
inline bool msg_name_player::has_avatar_on() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_name_player::set_has_avatar_on() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_name_player::clear_has_avatar_on() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_name_player::clear_avatar_on() {
  set_changed();
  avatar_on_ = 0;
  clear_has_avatar_on();
}
inline ::google::protobuf::int32 msg_name_player::avatar_on() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_player.avatar_on)
  return avatar_on_;
}
inline void msg_name_player::set_avatar_on(::google::protobuf::int32 value) {
  set_changed();
  set_has_avatar_on();
  avatar_on_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_player.avatar_on)
}

// optional int32 toukuang_on = 8;
inline bool msg_name_player::has_toukuang_on() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void msg_name_player::set_has_toukuang_on() {
  _has_bits_[0] |= 0x00000040u;
}
inline void msg_name_player::clear_has_toukuang_on() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void msg_name_player::clear_toukuang_on() {
  set_changed();
  toukuang_on_ = 0;
  clear_has_toukuang_on();
}
inline ::google::protobuf::int32 msg_name_player::toukuang_on() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_player.toukuang_on)
  return toukuang_on_;
}
inline void msg_name_player::set_toukuang_on(::google::protobuf::int32 value) {
  set_changed();
  set_has_toukuang_on();
  toukuang_on_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_player.toukuang_on)
}

// optional int32 region_id = 9;
inline bool msg_name_player::has_region_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void msg_name_player::set_has_region_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void msg_name_player::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void msg_name_player::clear_region_id() {
  set_changed();
  region_id_ = 0;
  clear_has_region_id();
}
inline ::google::protobuf::int32 msg_name_player::region_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_player.region_id)
  return region_id_;
}
inline void msg_name_player::set_region_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_region_id();
  region_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_player.region_id)
}

// optional int32 name_color = 10;
inline bool msg_name_player::has_name_color() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void msg_name_player::set_has_name_color() {
  _has_bits_[0] |= 0x00000100u;
}
inline void msg_name_player::clear_has_name_color() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void msg_name_player::clear_name_color() {
  set_changed();
  name_color_ = 0;
  clear_has_name_color();
}
inline ::google::protobuf::int32 msg_name_player::name_color() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_name_player.name_color)
  return name_color_;
}
inline void msg_name_player::set_name_color(::google::protobuf::int32 value) {
  set_changed();
  set_has_name_color();
  name_color_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_name_player.name_color)
}

// -------------------------------------------------------------------

// push_hall_name_insert

// required uint64 guid = 1;
inline bool push_hall_name_insert::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void push_hall_name_insert::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void push_hall_name_insert::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void push_hall_name_insert::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 push_hall_name_insert::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_name_insert.guid)
  return guid_;
}
inline void push_hall_name_insert::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_name_insert.guid)
}

// required string name = 2;
inline bool push_hall_name_insert::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void push_hall_name_insert::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void push_hall_name_insert::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void push_hall_name_insert::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& push_hall_name_insert::name() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_name_insert.name)
  return name_.GetNoArena();
}
inline void push_hall_name_insert::set_name(const ::std::string& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_name_insert.name)
}
#if LANG_CXX11
inline void push_hall_name_insert::set_name(::std::string&& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.push_hall_name_insert.name)
}
#endif
inline void push_hall_name_insert::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.push_hall_name_insert.name)
}
inline void push_hall_name_insert::set_name(const char* value, size_t size) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.push_hall_name_insert.name)
}
inline ::std::string* push_hall_name_insert::mutable_name() {
  set_changed();
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protocol.game.push_hall_name_insert.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* push_hall_name_insert::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.push_hall_name_insert.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void push_hall_name_insert::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.push_hall_name_insert.name)
}

// -------------------------------------------------------------------

// req_social_name_search

// required string name = 1;
inline bool req_social_name_search::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void req_social_name_search::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void req_social_name_search::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void req_social_name_search::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& req_social_name_search::name() const {
  // @@protoc_insertion_point(field_get:protocol.game.req_social_name_search.name)
  return name_.GetNoArena();
}
inline void req_social_name_search::set_name(const ::std::string& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.req_social_name_search.name)
}
#if LANG_CXX11
inline void req_social_name_search::set_name(::std::string&& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.req_social_name_search.name)
}
#endif
inline void req_social_name_search::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.req_social_name_search.name)
}
inline void req_social_name_search::set_name(const char* value, size_t size) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.req_social_name_search.name)
}
inline ::std::string* req_social_name_search::mutable_name() {
  set_changed();
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protocol.game.req_social_name_search.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* req_social_name_search::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.req_social_name_search.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void req_social_name_search::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.req_social_name_search.name)
}

// -------------------------------------------------------------------

// rep_social_name_search

// repeated .protocol.game.msg_name_player players = 1;
inline int rep_social_name_search::players_size() const {
  return players_.size();
}
inline void rep_social_name_search::clear_players() {
  players_.Clear();
}
inline ::protocol::game::msg_name_player* rep_social_name_search::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.rep_social_name_search.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_name_player >*
rep_social_name_search::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.rep_social_name_search.players)
  return &players_;
}
inline const ::protocol::game::msg_name_player& rep_social_name_search::players(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.rep_social_name_search.players)
  return players_.Get(index);
}
inline ::protocol::game::msg_name_player* rep_social_name_search::add_players() {
  // @@protoc_insertion_point(field_add:protocol.game.rep_social_name_search.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_name_player >&
rep_social_name_search::players() const {
  // @@protoc_insertion_point(field_list:protocol.game.rep_social_name_search.players)
  return players_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace game
}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5fname_2eproto
