// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_pipe.proto

#ifndef PROTOBUF_INCLUDED_msg_5fpipe_2eproto
#define PROTOBUF_INCLUDED_msg_5fpipe_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fpipe_2eproto 

namespace protobuf_msg_5fpipe_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5fpipe_2eproto
namespace protocol {
namespace pipe {
class pmsg_gonggao;
class pmsg_gonggaoDefaultTypeInternal;
extern pmsg_gonggaoDefaultTypeInternal _pmsg_gonggao_default_instance_;
class pmsg_mail_all;
class pmsg_mail_allDefaultTypeInternal;
extern pmsg_mail_allDefaultTypeInternal _pmsg_mail_all_default_instance_;
class pmsg_mail_one;
class pmsg_mail_oneDefaultTypeInternal;
extern pmsg_mail_oneDefaultTypeInternal _pmsg_mail_one_default_instance_;
class pmsg_rank_forbidden;
class pmsg_rank_forbiddenDefaultTypeInternal;
extern pmsg_rank_forbiddenDefaultTypeInternal _pmsg_rank_forbidden_default_instance_;
class pmsg_rank_forbidden1;
class pmsg_rank_forbidden1DefaultTypeInternal;
extern pmsg_rank_forbidden1DefaultTypeInternal _pmsg_rank_forbidden1_default_instance_;
class pmsg_recharge_ali;
class pmsg_recharge_aliDefaultTypeInternal;
extern pmsg_recharge_aliDefaultTypeInternal _pmsg_recharge_ali_default_instance_;
class pmsg_recharge_simulation;
class pmsg_recharge_simulationDefaultTypeInternal;
extern pmsg_recharge_simulationDefaultTypeInternal _pmsg_recharge_simulation_default_instance_;
class pmsg_recharge_simulation1;
class pmsg_recharge_simulation1DefaultTypeInternal;
extern pmsg_recharge_simulation1DefaultTypeInternal _pmsg_recharge_simulation1_default_instance_;
class pmsg_rep_libao;
class pmsg_rep_libaoDefaultTypeInternal;
extern pmsg_rep_libaoDefaultTypeInternal _pmsg_rep_libao_default_instance_;
class pmsg_rep_login;
class pmsg_rep_loginDefaultTypeInternal;
extern pmsg_rep_loginDefaultTypeInternal _pmsg_rep_login_default_instance_;
class pmsg_rep_recharge;
class pmsg_rep_rechargeDefaultTypeInternal;
extern pmsg_rep_rechargeDefaultTypeInternal _pmsg_rep_recharge_default_instance_;
class pmsg_req_libao;
class pmsg_req_libaoDefaultTypeInternal;
extern pmsg_req_libaoDefaultTypeInternal _pmsg_req_libao_default_instance_;
class pmsg_req_login;
class pmsg_req_loginDefaultTypeInternal;
extern pmsg_req_loginDefaultTypeInternal _pmsg_req_login_default_instance_;
class pmsg_req_recharge;
class pmsg_req_rechargeDefaultTypeInternal;
extern pmsg_req_rechargeDefaultTypeInternal _pmsg_req_recharge_default_instance_;
}  // namespace pipe
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::pipe::pmsg_gonggao* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_gonggao>(Arena*);
template<> ::protocol::pipe::pmsg_mail_all* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_mail_all>(Arena*);
template<> ::protocol::pipe::pmsg_mail_one* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_mail_one>(Arena*);
template<> ::protocol::pipe::pmsg_rank_forbidden* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_rank_forbidden>(Arena*);
template<> ::protocol::pipe::pmsg_rank_forbidden1* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_rank_forbidden1>(Arena*);
template<> ::protocol::pipe::pmsg_recharge_ali* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_recharge_ali>(Arena*);
template<> ::protocol::pipe::pmsg_recharge_simulation* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_recharge_simulation>(Arena*);
template<> ::protocol::pipe::pmsg_recharge_simulation1* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_recharge_simulation1>(Arena*);
template<> ::protocol::pipe::pmsg_rep_libao* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_rep_libao>(Arena*);
template<> ::protocol::pipe::pmsg_rep_login* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_rep_login>(Arena*);
template<> ::protocol::pipe::pmsg_rep_recharge* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_rep_recharge>(Arena*);
template<> ::protocol::pipe::pmsg_req_libao* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_req_libao>(Arena*);
template<> ::protocol::pipe::pmsg_req_login* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_req_login>(Arena*);
template<> ::protocol::pipe::pmsg_req_recharge* Arena::CreateMaybeMessage<::protocol::pipe::pmsg_req_recharge>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {
namespace pipe {

// ===================================================================

class pmsg_req_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_req_login) */ {
 public:
  pmsg_req_login();
  virtual ~pmsg_req_login();

  pmsg_req_login(const pmsg_req_login& from);

  inline pmsg_req_login& operator=(const pmsg_req_login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_req_login(pmsg_req_login&& from) noexcept
    : pmsg_req_login() {
    *this = ::std::move(from);
  }

  inline pmsg_req_login& operator=(pmsg_req_login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_req_login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_req_login* internal_default_instance() {
    return reinterpret_cast<const pmsg_req_login*>(
               &_pmsg_req_login_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(pmsg_req_login* other);
  friend void swap(pmsg_req_login& a, pmsg_req_login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_req_login* New() const final {
    return CreateMaybeMessage<pmsg_req_login>(NULL);
  }

  pmsg_req_login* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_req_login>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_req_login& from);
  void MergeFrom(const pmsg_req_login& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_req_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // required string token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string pt = 3;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 3;
  const ::std::string& pt() const;
  void set_pt(const ::std::string& value);
  #if LANG_CXX11
  void set_pt(::std::string&& value);
  #endif
  void set_pt(const char* value);
  void set_pt(const char* value, size_t size);
  ::std::string* mutable_pt();
  ::std::string* release_pt();
  void set_allocated_pt(::std::string* pt);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_req_login)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_token();
  void clear_has_token();
  void set_has_pt();
  void clear_has_pt();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr pt_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_rep_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_rep_login) */ {
 public:
  pmsg_rep_login();
  virtual ~pmsg_rep_login();

  pmsg_rep_login(const pmsg_rep_login& from);

  inline pmsg_rep_login& operator=(const pmsg_rep_login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_rep_login(pmsg_rep_login&& from) noexcept
    : pmsg_rep_login() {
    *this = ::std::move(from);
  }

  inline pmsg_rep_login& operator=(pmsg_rep_login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_rep_login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_rep_login* internal_default_instance() {
    return reinterpret_cast<const pmsg_rep_login*>(
               &_pmsg_rep_login_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(pmsg_rep_login* other);
  friend void swap(pmsg_rep_login& a, pmsg_rep_login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_rep_login* New() const final {
    return CreateMaybeMessage<pmsg_rep_login>(NULL);
  }

  pmsg_rep_login* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_rep_login>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_rep_login& from);
  void MergeFrom(const pmsg_rep_login& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_rep_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string errmsg = 2;
  bool has_errmsg() const;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // required int32 errres = 1;
  bool has_errres() const;
  void clear_errres();
  static const int kErrresFieldNumber = 1;
  ::google::protobuf::int32 errres() const;
  void set_errres(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_rep_login)
 private:
  void set_has_errres();
  void clear_has_errres();
  void set_has_errmsg();
  void clear_has_errmsg();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 errres_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_gonggao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_gonggao) */ {
 public:
  pmsg_gonggao();
  virtual ~pmsg_gonggao();

  pmsg_gonggao(const pmsg_gonggao& from);

  inline pmsg_gonggao& operator=(const pmsg_gonggao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_gonggao(pmsg_gonggao&& from) noexcept
    : pmsg_gonggao() {
    *this = ::std::move(from);
  }

  inline pmsg_gonggao& operator=(pmsg_gonggao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_gonggao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_gonggao* internal_default_instance() {
    return reinterpret_cast<const pmsg_gonggao*>(
               &_pmsg_gonggao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(pmsg_gonggao* other);
  friend void swap(pmsg_gonggao& a, pmsg_gonggao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_gonggao* New() const final {
    return CreateMaybeMessage<pmsg_gonggao>(NULL);
  }

  pmsg_gonggao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_gonggao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_gonggao& from);
  void MergeFrom(const pmsg_gonggao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_gonggao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string gonggao = 1;
  bool has_gonggao() const;
  void clear_gonggao();
  static const int kGonggaoFieldNumber = 1;
  const ::std::string& gonggao() const;
  void set_gonggao(const ::std::string& value);
  #if LANG_CXX11
  void set_gonggao(::std::string&& value);
  #endif
  void set_gonggao(const char* value);
  void set_gonggao(const char* value, size_t size);
  ::std::string* mutable_gonggao();
  ::std::string* release_gonggao();
  void set_allocated_gonggao(::std::string* gonggao);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_gonggao)
 private:
  void set_has_gonggao();
  void clear_has_gonggao();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gonggao_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_req_libao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_req_libao) */ {
 public:
  pmsg_req_libao();
  virtual ~pmsg_req_libao();

  pmsg_req_libao(const pmsg_req_libao& from);

  inline pmsg_req_libao& operator=(const pmsg_req_libao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_req_libao(pmsg_req_libao&& from) noexcept
    : pmsg_req_libao() {
    *this = ::std::move(from);
  }

  inline pmsg_req_libao& operator=(pmsg_req_libao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_req_libao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_req_libao* internal_default_instance() {
    return reinterpret_cast<const pmsg_req_libao*>(
               &_pmsg_req_libao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(pmsg_req_libao* other);
  friend void swap(pmsg_req_libao& a, pmsg_req_libao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_req_libao* New() const final {
    return CreateMaybeMessage<pmsg_req_libao>(NULL);
  }

  pmsg_req_libao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_req_libao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_req_libao& from);
  void MergeFrom(const pmsg_req_libao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_req_libao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // required string use = 2;
  bool has_use() const;
  void clear_use();
  static const int kUseFieldNumber = 2;
  const ::std::string& use() const;
  void set_use(const ::std::string& value);
  #if LANG_CXX11
  void set_use(::std::string&& value);
  #endif
  void set_use(const char* value);
  void set_use(const char* value, size_t size);
  ::std::string* mutable_use();
  ::std::string* release_use();
  void set_allocated_use(::std::string* use);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_req_libao)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_use();
  void clear_has_use();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr use_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_rep_libao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_rep_libao) */ {
 public:
  pmsg_rep_libao();
  virtual ~pmsg_rep_libao();

  pmsg_rep_libao(const pmsg_rep_libao& from);

  inline pmsg_rep_libao& operator=(const pmsg_rep_libao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_rep_libao(pmsg_rep_libao&& from) noexcept
    : pmsg_rep_libao() {
    *this = ::std::move(from);
  }

  inline pmsg_rep_libao& operator=(pmsg_rep_libao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_rep_libao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_rep_libao* internal_default_instance() {
    return reinterpret_cast<const pmsg_rep_libao*>(
               &_pmsg_rep_libao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(pmsg_rep_libao* other);
  friend void swap(pmsg_rep_libao& a, pmsg_rep_libao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_rep_libao* New() const final {
    return CreateMaybeMessage<pmsg_rep_libao>(NULL);
  }

  pmsg_rep_libao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_rep_libao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_rep_libao& from);
  void MergeFrom(const pmsg_rep_libao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_rep_libao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1 = 5;
  int value1_size() const;
  void clear_value1();
  static const int kValue1FieldNumber = 5;
  ::google::protobuf::int32 value1(int index) const;
  void set_value1(int index, ::google::protobuf::int32 value);
  void add_value1(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1();

  // repeated int32 value2 = 6;
  int value2_size() const;
  void clear_value2();
  static const int kValue2FieldNumber = 6;
  ::google::protobuf::int32 value2(int index) const;
  void set_value2(int index, ::google::protobuf::int32 value);
  void add_value2(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2();

  // repeated int32 value3 = 7;
  int value3_size() const;
  void clear_value3();
  static const int kValue3FieldNumber = 7;
  ::google::protobuf::int32 value3(int index) const;
  void set_value3(int index, ::google::protobuf::int32 value);
  void add_value3(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3();

  // required int32 res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // required int32 pc = 2;
  bool has_pc() const;
  void clear_pc();
  static const int kPcFieldNumber = 2;
  ::google::protobuf::int32 pc() const;
  void set_pc(::google::protobuf::int32 value);

  // required int32 cf = 3;
  bool has_cf() const;
  void clear_cf();
  static const int kCfFieldNumber = 3;
  ::google::protobuf::int32 cf() const;
  void set_cf(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_rep_libao)
 private:
  void set_has_res();
  void clear_has_res();
  void set_has_pc();
  void clear_has_pc();
  void set_has_cf();
  void clear_has_cf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3_;
  ::google::protobuf::int32 res_;
  ::google::protobuf::int32 pc_;
  ::google::protobuf::int32 cf_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_mail_one : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_mail_one) */ {
 public:
  pmsg_mail_one();
  virtual ~pmsg_mail_one();

  pmsg_mail_one(const pmsg_mail_one& from);

  inline pmsg_mail_one& operator=(const pmsg_mail_one& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_mail_one(pmsg_mail_one&& from) noexcept
    : pmsg_mail_one() {
    *this = ::std::move(from);
  }

  inline pmsg_mail_one& operator=(pmsg_mail_one&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_mail_one& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_mail_one* internal_default_instance() {
    return reinterpret_cast<const pmsg_mail_one*>(
               &_pmsg_mail_one_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(pmsg_mail_one* other);
  friend void swap(pmsg_mail_one& a, pmsg_mail_one& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_mail_one* New() const final {
    return CreateMaybeMessage<pmsg_mail_one>(NULL);
  }

  pmsg_mail_one* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_mail_one>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_mail_one& from);
  void MergeFrom(const pmsg_mail_one& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_mail_one* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string acc_names = 1;
  int acc_names_size() const;
  void clear_acc_names();
  static const int kAccNamesFieldNumber = 1;
  const ::std::string& acc_names(int index) const;
  ::std::string* mutable_acc_names(int index);
  void set_acc_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_acc_names(int index, ::std::string&& value);
  #endif
  void set_acc_names(int index, const char* value);
  void set_acc_names(int index, const char* value, size_t size);
  ::std::string* add_acc_names();
  void add_acc_names(const ::std::string& value);
  #if LANG_CXX11
  void add_acc_names(::std::string&& value);
  #endif
  void add_acc_names(const char* value);
  void add_acc_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& acc_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_acc_names();

  // repeated int32 type = 7;
  int type_size() const;
  void clear_type();
  static const int kTypeFieldNumber = 7;
  ::google::protobuf::int32 type(int index) const;
  void set_type(int index, ::google::protobuf::int32 value);
  void add_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_type();

  // repeated int32 value1 = 8;
  int value1_size() const;
  void clear_value1();
  static const int kValue1FieldNumber = 8;
  ::google::protobuf::int32 value1(int index) const;
  void set_value1(int index, ::google::protobuf::int32 value);
  void add_value1(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1();

  // repeated int32 value2 = 9;
  int value2_size() const;
  void clear_value2();
  static const int kValue2FieldNumber = 9;
  ::google::protobuf::int32 value2(int index) const;
  void set_value2(int index, ::google::protobuf::int32 value);
  void add_value2(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2();

  // repeated int32 value3 = 10;
  int value3_size() const;
  void clear_value3();
  static const int kValue3FieldNumber = 10;
  ::google::protobuf::int32 value3(int index) const;
  void set_value3(int index, ::google::protobuf::int32 value);
  void add_value3(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3();

  // required string title = 4;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 4;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // required string text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required string sender_name = 6;
  bool has_sender_name() const;
  void clear_sender_name();
  static const int kSenderNameFieldNumber = 6;
  const ::std::string& sender_name() const;
  void set_sender_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sender_name(::std::string&& value);
  #endif
  void set_sender_name(const char* value);
  void set_sender_name(const char* value, size_t size);
  ::std::string* mutable_sender_name();
  ::std::string* release_sender_name();
  void set_allocated_sender_name(::std::string* sender_name);

  // required int32 serverid = 2;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_mail_one)
 private:
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_title();
  void clear_has_title();
  void set_has_text();
  void clear_has_text();
  void set_has_sender_name();
  void clear_has_sender_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> acc_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr sender_name_;
  ::google::protobuf::int32 serverid_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_mail_all : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_mail_all) */ {
 public:
  pmsg_mail_all();
  virtual ~pmsg_mail_all();

  pmsg_mail_all(const pmsg_mail_all& from);

  inline pmsg_mail_all& operator=(const pmsg_mail_all& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_mail_all(pmsg_mail_all&& from) noexcept
    : pmsg_mail_all() {
    *this = ::std::move(from);
  }

  inline pmsg_mail_all& operator=(pmsg_mail_all&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_mail_all& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_mail_all* internal_default_instance() {
    return reinterpret_cast<const pmsg_mail_all*>(
               &_pmsg_mail_all_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(pmsg_mail_all* other);
  friend void swap(pmsg_mail_all& a, pmsg_mail_all& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_mail_all* New() const final {
    return CreateMaybeMessage<pmsg_mail_all>(NULL);
  }

  pmsg_mail_all* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_mail_all>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_mail_all& from);
  void MergeFrom(const pmsg_mail_all& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_mail_all* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 type = 7;
  int type_size() const;
  void clear_type();
  static const int kTypeFieldNumber = 7;
  ::google::protobuf::int32 type(int index) const;
  void set_type(int index, ::google::protobuf::int32 value);
  void add_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_type();

  // repeated int32 value1 = 8;
  int value1_size() const;
  void clear_value1();
  static const int kValue1FieldNumber = 8;
  ::google::protobuf::int32 value1(int index) const;
  void set_value1(int index, ::google::protobuf::int32 value);
  void add_value1(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1();

  // repeated int32 value2 = 9;
  int value2_size() const;
  void clear_value2();
  static const int kValue2FieldNumber = 9;
  ::google::protobuf::int32 value2(int index) const;
  void set_value2(int index, ::google::protobuf::int32 value);
  void add_value2(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2();

  // repeated int32 value3 = 10;
  int value3_size() const;
  void clear_value3();
  static const int kValue3FieldNumber = 10;
  ::google::protobuf::int32 value3(int index) const;
  void set_value3(int index, ::google::protobuf::int32 value);
  void add_value3(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3();

  // required string title = 4;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 4;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // required string text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required string sender_name = 6;
  bool has_sender_name() const;
  void clear_sender_name();
  static const int kSenderNameFieldNumber = 6;
  const ::std::string& sender_name() const;
  void set_sender_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sender_name(::std::string&& value);
  #endif
  void set_sender_name(const char* value);
  void set_sender_name(const char* value, size_t size);
  ::std::string* mutable_sender_name();
  ::std::string* release_sender_name();
  void set_allocated_sender_name(::std::string* sender_name);

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 serverid = 2;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_mail_all)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_title();
  void clear_has_title();
  void set_has_text();
  void clear_has_text();
  void set_has_sender_name();
  void clear_has_sender_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr sender_name_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 serverid_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_req_recharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_req_recharge) */ {
 public:
  pmsg_req_recharge();
  virtual ~pmsg_req_recharge();

  pmsg_req_recharge(const pmsg_req_recharge& from);

  inline pmsg_req_recharge& operator=(const pmsg_req_recharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_req_recharge(pmsg_req_recharge&& from) noexcept
    : pmsg_req_recharge() {
    *this = ::std::move(from);
  }

  inline pmsg_req_recharge& operator=(pmsg_req_recharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_req_recharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_req_recharge* internal_default_instance() {
    return reinterpret_cast<const pmsg_req_recharge*>(
               &_pmsg_req_recharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(pmsg_req_recharge* other);
  friend void swap(pmsg_req_recharge& a, pmsg_req_recharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_req_recharge* New() const final {
    return CreateMaybeMessage<pmsg_req_recharge>(NULL);
  }

  pmsg_req_recharge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_req_recharge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_req_recharge& from);
  void MergeFrom(const pmsg_req_recharge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_req_recharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string code = 2;
  int code_size() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code(int index) const;
  ::std::string* mutable_code(int index);
  void set_code(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_code(int index, ::std::string&& value);
  #endif
  void set_code(int index, const char* value);
  void set_code(int index, const char* value, size_t size);
  ::std::string* add_code();
  void add_code(const ::std::string& value);
  #if LANG_CXX11
  void add_code(::std::string&& value);
  #endif
  void add_code(const char* value);
  void add_code(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& code() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_code();

  // required string pt = 1;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 1;
  const ::std::string& pt() const;
  void set_pt(const ::std::string& value);
  #if LANG_CXX11
  void set_pt(::std::string&& value);
  #endif
  void set_pt(const char* value);
  void set_pt(const char* value, size_t size);
  ::std::string* mutable_pt();
  ::std::string* release_pt();
  void set_allocated_pt(::std::string* pt);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_req_recharge)
 private:
  void set_has_pt();
  void clear_has_pt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> code_;
  ::google::protobuf::internal::ArenaStringPtr pt_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_recharge_ali : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_recharge_ali) */ {
 public:
  pmsg_recharge_ali();
  virtual ~pmsg_recharge_ali();

  pmsg_recharge_ali(const pmsg_recharge_ali& from);

  inline pmsg_recharge_ali& operator=(const pmsg_recharge_ali& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_recharge_ali(pmsg_recharge_ali&& from) noexcept
    : pmsg_recharge_ali() {
    *this = ::std::move(from);
  }

  inline pmsg_recharge_ali& operator=(pmsg_recharge_ali&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_recharge_ali& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_recharge_ali* internal_default_instance() {
    return reinterpret_cast<const pmsg_recharge_ali*>(
               &_pmsg_recharge_ali_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(pmsg_recharge_ali* other);
  friend void swap(pmsg_recharge_ali& a, pmsg_recharge_ali& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_recharge_ali* New() const final {
    return CreateMaybeMessage<pmsg_recharge_ali>(NULL);
  }

  pmsg_recharge_ali* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_recharge_ali>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_recharge_ali& from);
  void MergeFrom(const pmsg_recharge_ali& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_recharge_ali* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string orderno = 3;
  bool has_orderno() const;
  void clear_orderno();
  static const int kOrdernoFieldNumber = 3;
  const ::std::string& orderno() const;
  void set_orderno(const ::std::string& value);
  #if LANG_CXX11
  void set_orderno(::std::string&& value);
  #endif
  void set_orderno(const char* value);
  void set_orderno(const char* value, size_t size);
  ::std::string* mutable_orderno();
  ::std::string* release_orderno();
  void set_allocated_orderno(::std::string* orderno);

  // required uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // required int32 rid = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // required float amount = 4;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  float amount() const;
  void set_amount(float value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_recharge_ali)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_rid();
  void clear_has_rid();
  void set_has_orderno();
  void clear_has_orderno();
  void set_has_amount();
  void clear_has_amount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr orderno_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 rid_;
  float amount_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_rep_recharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_rep_recharge) */ {
 public:
  pmsg_rep_recharge();
  virtual ~pmsg_rep_recharge();

  pmsg_rep_recharge(const pmsg_rep_recharge& from);

  inline pmsg_rep_recharge& operator=(const pmsg_rep_recharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_rep_recharge(pmsg_rep_recharge&& from) noexcept
    : pmsg_rep_recharge() {
    *this = ::std::move(from);
  }

  inline pmsg_rep_recharge& operator=(pmsg_rep_recharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_rep_recharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_rep_recharge* internal_default_instance() {
    return reinterpret_cast<const pmsg_rep_recharge*>(
               &_pmsg_rep_recharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(pmsg_rep_recharge* other);
  friend void swap(pmsg_rep_recharge& a, pmsg_rep_recharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_rep_recharge* New() const final {
    return CreateMaybeMessage<pmsg_rep_recharge>(NULL);
  }

  pmsg_rep_recharge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_rep_recharge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_rep_recharge& from);
  void MergeFrom(const pmsg_rep_recharge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_rep_recharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string product_id = 2;
  bool has_product_id() const;
  void clear_product_id();
  static const int kProductIdFieldNumber = 2;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // required string orderid = 3;
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  const ::std::string& orderid() const;
  void set_orderid(const ::std::string& value);
  #if LANG_CXX11
  void set_orderid(::std::string&& value);
  #endif
  void set_orderid(const char* value);
  void set_orderid(const char* value, size_t size);
  ::std::string* mutable_orderid();
  ::std::string* release_orderid();
  void set_allocated_orderid(::std::string* orderid);

  // required int32 res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_rep_recharge)
 private:
  void set_has_res();
  void clear_has_res();
  void set_has_product_id();
  void clear_has_product_id();
  void set_has_orderid();
  void clear_has_orderid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr orderid_;
  ::google::protobuf::int32 res_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_recharge_simulation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_recharge_simulation) */ {
 public:
  pmsg_recharge_simulation();
  virtual ~pmsg_recharge_simulation();

  pmsg_recharge_simulation(const pmsg_recharge_simulation& from);

  inline pmsg_recharge_simulation& operator=(const pmsg_recharge_simulation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_recharge_simulation(pmsg_recharge_simulation&& from) noexcept
    : pmsg_recharge_simulation() {
    *this = ::std::move(from);
  }

  inline pmsg_recharge_simulation& operator=(pmsg_recharge_simulation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_recharge_simulation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_recharge_simulation* internal_default_instance() {
    return reinterpret_cast<const pmsg_recharge_simulation*>(
               &_pmsg_recharge_simulation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(pmsg_recharge_simulation* other);
  friend void swap(pmsg_recharge_simulation& a, pmsg_recharge_simulation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_recharge_simulation* New() const final {
    return CreateMaybeMessage<pmsg_recharge_simulation>(NULL);
  }

  pmsg_recharge_simulation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_recharge_simulation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_recharge_simulation& from);
  void MergeFrom(const pmsg_recharge_simulation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_recharge_simulation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string acc_names = 1;
  bool has_acc_names() const;
  void clear_acc_names();
  static const int kAccNamesFieldNumber = 1;
  const ::std::string& acc_names() const;
  void set_acc_names(const ::std::string& value);
  #if LANG_CXX11
  void set_acc_names(::std::string&& value);
  #endif
  void set_acc_names(const char* value);
  void set_acc_names(const char* value, size_t size);
  ::std::string* mutable_acc_names();
  ::std::string* release_acc_names();
  void set_allocated_acc_names(::std::string* acc_names);

  // required int32 serverid = 2;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // required int32 rid = 3;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 3;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_recharge_simulation)
 private:
  void set_has_acc_names();
  void clear_has_acc_names();
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_rid();
  void clear_has_rid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr acc_names_;
  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 rid_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_recharge_simulation1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_recharge_simulation1) */ {
 public:
  pmsg_recharge_simulation1();
  virtual ~pmsg_recharge_simulation1();

  pmsg_recharge_simulation1(const pmsg_recharge_simulation1& from);

  inline pmsg_recharge_simulation1& operator=(const pmsg_recharge_simulation1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_recharge_simulation1(pmsg_recharge_simulation1&& from) noexcept
    : pmsg_recharge_simulation1() {
    *this = ::std::move(from);
  }

  inline pmsg_recharge_simulation1& operator=(pmsg_recharge_simulation1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_recharge_simulation1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_recharge_simulation1* internal_default_instance() {
    return reinterpret_cast<const pmsg_recharge_simulation1*>(
               &_pmsg_recharge_simulation1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(pmsg_recharge_simulation1* other);
  friend void swap(pmsg_recharge_simulation1& a, pmsg_recharge_simulation1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_recharge_simulation1* New() const final {
    return CreateMaybeMessage<pmsg_recharge_simulation1>(NULL);
  }

  pmsg_recharge_simulation1* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_recharge_simulation1>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_recharge_simulation1& from);
  void MergeFrom(const pmsg_recharge_simulation1& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_recharge_simulation1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // required int32 rid = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_recharge_simulation1)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_rid();
  void clear_has_rid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 rid_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_rank_forbidden : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_rank_forbidden) */ {
 public:
  pmsg_rank_forbidden();
  virtual ~pmsg_rank_forbidden();

  pmsg_rank_forbidden(const pmsg_rank_forbidden& from);

  inline pmsg_rank_forbidden& operator=(const pmsg_rank_forbidden& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_rank_forbidden(pmsg_rank_forbidden&& from) noexcept
    : pmsg_rank_forbidden() {
    *this = ::std::move(from);
  }

  inline pmsg_rank_forbidden& operator=(pmsg_rank_forbidden&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_rank_forbidden& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_rank_forbidden* internal_default_instance() {
    return reinterpret_cast<const pmsg_rank_forbidden*>(
               &_pmsg_rank_forbidden_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(pmsg_rank_forbidden* other);
  friend void swap(pmsg_rank_forbidden& a, pmsg_rank_forbidden& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_rank_forbidden* New() const final {
    return CreateMaybeMessage<pmsg_rank_forbidden>(NULL);
  }

  pmsg_rank_forbidden* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_rank_forbidden>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_rank_forbidden& from);
  void MergeFrom(const pmsg_rank_forbidden& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_rank_forbidden* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string acc_names = 1;
  bool has_acc_names() const;
  void clear_acc_names();
  static const int kAccNamesFieldNumber = 1;
  const ::std::string& acc_names() const;
  void set_acc_names(const ::std::string& value);
  #if LANG_CXX11
  void set_acc_names(::std::string&& value);
  #endif
  void set_acc_names(const char* value);
  void set_acc_names(const char* value, size_t size);
  ::std::string* mutable_acc_names();
  ::std::string* release_acc_names();
  void set_allocated_acc_names(::std::string* acc_names);

  // required int32 serverid = 2;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_rank_forbidden)
 private:
  void set_has_acc_names();
  void clear_has_acc_names();
  void set_has_serverid();
  void clear_has_serverid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr acc_names_;
  ::google::protobuf::int32 serverid_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_rank_forbidden1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.pipe.pmsg_rank_forbidden1) */ {
 public:
  pmsg_rank_forbidden1();
  virtual ~pmsg_rank_forbidden1();

  pmsg_rank_forbidden1(const pmsg_rank_forbidden1& from);

  inline pmsg_rank_forbidden1& operator=(const pmsg_rank_forbidden1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_rank_forbidden1(pmsg_rank_forbidden1&& from) noexcept
    : pmsg_rank_forbidden1() {
    *this = ::std::move(from);
  }

  inline pmsg_rank_forbidden1& operator=(pmsg_rank_forbidden1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_rank_forbidden1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_rank_forbidden1* internal_default_instance() {
    return reinterpret_cast<const pmsg_rank_forbidden1*>(
               &_pmsg_rank_forbidden1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(pmsg_rank_forbidden1* other);
  friend void swap(pmsg_rank_forbidden1& a, pmsg_rank_forbidden1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_rank_forbidden1* New() const final {
    return CreateMaybeMessage<pmsg_rank_forbidden1>(NULL);
  }

  pmsg_rank_forbidden1* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_rank_forbidden1>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_rank_forbidden1& from);
  void MergeFrom(const pmsg_rank_forbidden1& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_rank_forbidden1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.pipe.pmsg_rank_forbidden1)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 guid_;
  friend struct ::protobuf_msg_5fpipe_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// pmsg_req_login

// required string uid = 1;
inline bool pmsg_req_login::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_req_login::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_req_login::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_req_login::clear_uid() {
  set_changed();
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
inline const ::std::string& pmsg_req_login::uid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_req_login.uid)
  return uid_.GetNoArena();
}
inline void pmsg_req_login::set_uid(const ::std::string& value) {
  set_changed();
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_req_login.uid)
}
#if LANG_CXX11
inline void pmsg_req_login::set_uid(::std::string&& value) {
  set_changed();
  set_has_uid();
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_req_login.uid)
}
#endif
inline void pmsg_req_login::set_uid(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_req_login.uid)
}
inline void pmsg_req_login::set_uid(const char* value, size_t size) {
  set_changed();
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_req_login.uid)
}
inline ::std::string* pmsg_req_login::mutable_uid() {
  set_changed();
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_req_login.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_req_login::release_uid() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_req_login.uid)
  if (!has_uid()) {
    return NULL;
  }
  clear_has_uid();
  return uid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_req_login::set_allocated_uid(::std::string* uid) {
  set_changed();
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_req_login.uid)
}

// required string token = 2;
inline bool pmsg_req_login::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_req_login::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_req_login::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_req_login::clear_token() {
  set_changed();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& pmsg_req_login::token() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_req_login.token)
  return token_.GetNoArena();
}
inline void pmsg_req_login::set_token(const ::std::string& value) {
  set_changed();
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_req_login.token)
}
#if LANG_CXX11
inline void pmsg_req_login::set_token(::std::string&& value) {
  set_changed();
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_req_login.token)
}
#endif
inline void pmsg_req_login::set_token(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_req_login.token)
}
inline void pmsg_req_login::set_token(const char* value, size_t size) {
  set_changed();
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_req_login.token)
}
inline ::std::string* pmsg_req_login::mutable_token() {
  set_changed();
  set_has_token();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_req_login.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_req_login::release_token() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_req_login.token)
  if (!has_token()) {
    return NULL;
  }
  clear_has_token();
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_req_login::set_allocated_token(::std::string* token) {
  set_changed();
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_req_login.token)
}

// required string pt = 3;
inline bool pmsg_req_login::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pmsg_req_login::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pmsg_req_login::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pmsg_req_login::clear_pt() {
  set_changed();
  pt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pt();
}
inline const ::std::string& pmsg_req_login::pt() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_req_login.pt)
  return pt_.GetNoArena();
}
inline void pmsg_req_login::set_pt(const ::std::string& value) {
  set_changed();
  set_has_pt();
  pt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_req_login.pt)
}
#if LANG_CXX11
inline void pmsg_req_login::set_pt(::std::string&& value) {
  set_changed();
  set_has_pt();
  pt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_req_login.pt)
}
#endif
inline void pmsg_req_login::set_pt(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_pt();
  pt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_req_login.pt)
}
inline void pmsg_req_login::set_pt(const char* value, size_t size) {
  set_changed();
  set_has_pt();
  pt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_req_login.pt)
}
inline ::std::string* pmsg_req_login::mutable_pt() {
  set_changed();
  set_has_pt();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_req_login.pt)
  return pt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_req_login::release_pt() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_req_login.pt)
  if (!has_pt()) {
    return NULL;
  }
  clear_has_pt();
  return pt_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_req_login::set_allocated_pt(::std::string* pt) {
  set_changed();
  if (pt != NULL) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pt);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_req_login.pt)
}

// -------------------------------------------------------------------

// pmsg_rep_login

// required int32 errres = 1;
inline bool pmsg_rep_login::has_errres() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_rep_login::set_has_errres() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_rep_login::clear_has_errres() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_rep_login::clear_errres() {
  set_changed();
  errres_ = 0;
  clear_has_errres();
}
inline ::google::protobuf::int32 pmsg_rep_login::errres() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_login.errres)
  return errres_;
}
inline void pmsg_rep_login::set_errres(::google::protobuf::int32 value) {
  set_changed();
  set_has_errres();
  errres_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_login.errres)
}

// required string errmsg = 2;
inline bool pmsg_rep_login::has_errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_rep_login::set_has_errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_rep_login::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_rep_login::clear_errmsg() {
  set_changed();
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errmsg();
}
inline const ::std::string& pmsg_rep_login::errmsg() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_login.errmsg)
  return errmsg_.GetNoArena();
}
inline void pmsg_rep_login::set_errmsg(const ::std::string& value) {
  set_changed();
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_login.errmsg)
}
#if LANG_CXX11
inline void pmsg_rep_login::set_errmsg(::std::string&& value) {
  set_changed();
  set_has_errmsg();
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_rep_login.errmsg)
}
#endif
inline void pmsg_rep_login::set_errmsg(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_rep_login.errmsg)
}
inline void pmsg_rep_login::set_errmsg(const char* value, size_t size) {
  set_changed();
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_rep_login.errmsg)
}
inline ::std::string* pmsg_rep_login::mutable_errmsg() {
  set_changed();
  set_has_errmsg();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_rep_login.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_rep_login::release_errmsg() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_rep_login.errmsg)
  if (!has_errmsg()) {
    return NULL;
  }
  clear_has_errmsg();
  return errmsg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_rep_login::set_allocated_errmsg(::std::string* errmsg) {
  set_changed();
  if (errmsg != NULL) {
    set_has_errmsg();
  } else {
    clear_has_errmsg();
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_rep_login.errmsg)
}

// -------------------------------------------------------------------

// pmsg_gonggao

// required string gonggao = 1;
inline bool pmsg_gonggao::has_gonggao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_gonggao::set_has_gonggao() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_gonggao::clear_has_gonggao() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_gonggao::clear_gonggao() {
  set_changed();
  gonggao_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gonggao();
}
inline const ::std::string& pmsg_gonggao::gonggao() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_gonggao.gonggao)
  return gonggao_.GetNoArena();
}
inline void pmsg_gonggao::set_gonggao(const ::std::string& value) {
  set_changed();
  set_has_gonggao();
  gonggao_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_gonggao.gonggao)
}
#if LANG_CXX11
inline void pmsg_gonggao::set_gonggao(::std::string&& value) {
  set_changed();
  set_has_gonggao();
  gonggao_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_gonggao.gonggao)
}
#endif
inline void pmsg_gonggao::set_gonggao(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_gonggao();
  gonggao_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_gonggao.gonggao)
}
inline void pmsg_gonggao::set_gonggao(const char* value, size_t size) {
  set_changed();
  set_has_gonggao();
  gonggao_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_gonggao.gonggao)
}
inline ::std::string* pmsg_gonggao::mutable_gonggao() {
  set_changed();
  set_has_gonggao();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_gonggao.gonggao)
  return gonggao_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_gonggao::release_gonggao() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_gonggao.gonggao)
  if (!has_gonggao()) {
    return NULL;
  }
  clear_has_gonggao();
  return gonggao_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_gonggao::set_allocated_gonggao(::std::string* gonggao) {
  set_changed();
  if (gonggao != NULL) {
    set_has_gonggao();
  } else {
    clear_has_gonggao();
  }
  gonggao_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gonggao);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_gonggao.gonggao)
}

// -------------------------------------------------------------------

// pmsg_req_libao

// required string code = 1;
inline bool pmsg_req_libao::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_req_libao::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_req_libao::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_req_libao::clear_code() {
  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
inline const ::std::string& pmsg_req_libao::code() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_req_libao.code)
  return code_.GetNoArena();
}
inline void pmsg_req_libao::set_code(const ::std::string& value) {
  set_changed();
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_req_libao.code)
}
#if LANG_CXX11
inline void pmsg_req_libao::set_code(::std::string&& value) {
  set_changed();
  set_has_code();
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_req_libao.code)
}
#endif
inline void pmsg_req_libao::set_code(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_req_libao.code)
}
inline void pmsg_req_libao::set_code(const char* value, size_t size) {
  set_changed();
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_req_libao.code)
}
inline ::std::string* pmsg_req_libao::mutable_code() {
  set_changed();
  set_has_code();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_req_libao.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_req_libao::release_code() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_req_libao.code)
  if (!has_code()) {
    return NULL;
  }
  clear_has_code();
  return code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_req_libao::set_allocated_code(::std::string* code) {
  set_changed();
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_req_libao.code)
}

// required string use = 2;
inline bool pmsg_req_libao::has_use() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_req_libao::set_has_use() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_req_libao::clear_has_use() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_req_libao::clear_use() {
  set_changed();
  use_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_use();
}
inline const ::std::string& pmsg_req_libao::use() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_req_libao.use)
  return use_.GetNoArena();
}
inline void pmsg_req_libao::set_use(const ::std::string& value) {
  set_changed();
  set_has_use();
  use_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_req_libao.use)
}
#if LANG_CXX11
inline void pmsg_req_libao::set_use(::std::string&& value) {
  set_changed();
  set_has_use();
  use_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_req_libao.use)
}
#endif
inline void pmsg_req_libao::set_use(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_use();
  use_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_req_libao.use)
}
inline void pmsg_req_libao::set_use(const char* value, size_t size) {
  set_changed();
  set_has_use();
  use_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_req_libao.use)
}
inline ::std::string* pmsg_req_libao::mutable_use() {
  set_changed();
  set_has_use();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_req_libao.use)
  return use_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_req_libao::release_use() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_req_libao.use)
  if (!has_use()) {
    return NULL;
  }
  clear_has_use();
  return use_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_req_libao::set_allocated_use(::std::string* use) {
  set_changed();
  if (use != NULL) {
    set_has_use();
  } else {
    clear_has_use();
  }
  use_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), use);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_req_libao.use)
}

// -------------------------------------------------------------------

// pmsg_rep_libao

// required int32 res = 1;
inline bool pmsg_rep_libao::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_rep_libao::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_rep_libao::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_rep_libao::clear_res() {
  set_changed();
  res_ = 0;
  clear_has_res();
}
inline ::google::protobuf::int32 pmsg_rep_libao::res() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_libao.res)
  return res_;
}
inline void pmsg_rep_libao::set_res(::google::protobuf::int32 value) {
  set_changed();
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_libao.res)
}

// required int32 pc = 2;
inline bool pmsg_rep_libao::has_pc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_rep_libao::set_has_pc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_rep_libao::clear_has_pc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_rep_libao::clear_pc() {
  set_changed();
  pc_ = 0;
  clear_has_pc();
}
inline ::google::protobuf::int32 pmsg_rep_libao::pc() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_libao.pc)
  return pc_;
}
inline void pmsg_rep_libao::set_pc(::google::protobuf::int32 value) {
  set_changed();
  set_has_pc();
  pc_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_libao.pc)
}

// required int32 cf = 3;
inline bool pmsg_rep_libao::has_cf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pmsg_rep_libao::set_has_cf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pmsg_rep_libao::clear_has_cf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pmsg_rep_libao::clear_cf() {
  set_changed();
  cf_ = 0;
  clear_has_cf();
}
inline ::google::protobuf::int32 pmsg_rep_libao::cf() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_libao.cf)
  return cf_;
}
inline void pmsg_rep_libao::set_cf(::google::protobuf::int32 value) {
  set_changed();
  set_has_cf();
  cf_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_libao.cf)
}

// repeated int32 types = 4;
inline int pmsg_rep_libao::types_size() const {
  return types_.size();
}
inline void pmsg_rep_libao::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 pmsg_rep_libao::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_libao.types)
  return types_.Get(index);
}
inline void pmsg_rep_libao::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_libao.types)
}
inline void pmsg_rep_libao::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_rep_libao.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_rep_libao::types() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_rep_libao.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_rep_libao::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_rep_libao.types)
  return &types_;
}

// repeated int32 value1 = 5;
inline int pmsg_rep_libao::value1_size() const {
  return value1_.size();
}
inline void pmsg_rep_libao::clear_value1() {
  set_changed();
  value1_.Clear();
}
inline ::google::protobuf::int32 pmsg_rep_libao::value1(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_libao.value1)
  return value1_.Get(index);
}
inline void pmsg_rep_libao::set_value1(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_libao.value1)
}
inline void pmsg_rep_libao::add_value1(::google::protobuf::int32 value) {
  set_changed();
  value1_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_rep_libao.value1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_rep_libao::value1() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_rep_libao.value1)
  return value1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_rep_libao::mutable_value1() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_rep_libao.value1)
  return &value1_;
}

// repeated int32 value2 = 6;
inline int pmsg_rep_libao::value2_size() const {
  return value2_.size();
}
inline void pmsg_rep_libao::clear_value2() {
  set_changed();
  value2_.Clear();
}
inline ::google::protobuf::int32 pmsg_rep_libao::value2(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_libao.value2)
  return value2_.Get(index);
}
inline void pmsg_rep_libao::set_value2(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_libao.value2)
}
inline void pmsg_rep_libao::add_value2(::google::protobuf::int32 value) {
  set_changed();
  value2_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_rep_libao.value2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_rep_libao::value2() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_rep_libao.value2)
  return value2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_rep_libao::mutable_value2() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_rep_libao.value2)
  return &value2_;
}

// repeated int32 value3 = 7;
inline int pmsg_rep_libao::value3_size() const {
  return value3_.size();
}
inline void pmsg_rep_libao::clear_value3() {
  set_changed();
  value3_.Clear();
}
inline ::google::protobuf::int32 pmsg_rep_libao::value3(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_libao.value3)
  return value3_.Get(index);
}
inline void pmsg_rep_libao::set_value3(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_libao.value3)
}
inline void pmsg_rep_libao::add_value3(::google::protobuf::int32 value) {
  set_changed();
  value3_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_rep_libao.value3)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_rep_libao::value3() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_rep_libao.value3)
  return value3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_rep_libao::mutable_value3() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_rep_libao.value3)
  return &value3_;
}

// -------------------------------------------------------------------

// pmsg_mail_one

// repeated string acc_names = 1;
inline int pmsg_mail_one::acc_names_size() const {
  return acc_names_.size();
}
inline void pmsg_mail_one::clear_acc_names() {
  set_changed();
  acc_names_.Clear();
}
inline const ::std::string& pmsg_mail_one::acc_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_one.acc_names)
  return acc_names_.Get(index);
}
inline ::std::string* pmsg_mail_one::mutable_acc_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_mail_one.acc_names)
  return acc_names_.Mutable(index);
}
inline void pmsg_mail_one::set_acc_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.acc_names)
  acc_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void pmsg_mail_one::set_acc_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.acc_names)
  acc_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void pmsg_mail_one::set_acc_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  acc_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_mail_one.acc_names)
}
inline void pmsg_mail_one::set_acc_names(int index, const char* value, size_t size) {
  set_changed();
  acc_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_mail_one.acc_names)
}
inline ::std::string* pmsg_mail_one::add_acc_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.pipe.pmsg_mail_one.acc_names)
  return acc_names_.Add();
}
inline void pmsg_mail_one::add_acc_names(const ::std::string& value) {
  set_changed();
  acc_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_one.acc_names)
}
#if LANG_CXX11
inline void pmsg_mail_one::add_acc_names(::std::string&& value) {
  set_changed();
  acc_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_one.acc_names)
}
#endif
inline void pmsg_mail_one::add_acc_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  acc_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.pipe.pmsg_mail_one.acc_names)
}
inline void pmsg_mail_one::add_acc_names(const char* value, size_t size) {
  set_changed();
  acc_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.pipe.pmsg_mail_one.acc_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
pmsg_mail_one::acc_names() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_mail_one.acc_names)
  return acc_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
pmsg_mail_one::mutable_acc_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_mail_one.acc_names)
  return &acc_names_;
}

// required int32 serverid = 2;
inline bool pmsg_mail_one::has_serverid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pmsg_mail_one::set_has_serverid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pmsg_mail_one::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pmsg_mail_one::clear_serverid() {
  set_changed();
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 pmsg_mail_one::serverid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_one.serverid)
  return serverid_;
}
inline void pmsg_mail_one::set_serverid(::google::protobuf::int32 value) {
  set_changed();
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.serverid)
}

// required string title = 4;
inline bool pmsg_mail_one::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_mail_one::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_mail_one::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_mail_one::clear_title() {
  set_changed();
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& pmsg_mail_one::title() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_one.title)
  return title_.GetNoArena();
}
inline void pmsg_mail_one::set_title(const ::std::string& value) {
  set_changed();
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.title)
}
#if LANG_CXX11
inline void pmsg_mail_one::set_title(::std::string&& value) {
  set_changed();
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_mail_one.title)
}
#endif
inline void pmsg_mail_one::set_title(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_mail_one.title)
}
inline void pmsg_mail_one::set_title(const char* value, size_t size) {
  set_changed();
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_mail_one.title)
}
inline ::std::string* pmsg_mail_one::mutable_title() {
  set_changed();
  set_has_title();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_mail_one.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_mail_one::release_title() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_mail_one.title)
  if (!has_title()) {
    return NULL;
  }
  clear_has_title();
  return title_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_mail_one::set_allocated_title(::std::string* title) {
  set_changed();
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_mail_one.title)
}

// required string text = 5;
inline bool pmsg_mail_one::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_mail_one::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_mail_one::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_mail_one::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& pmsg_mail_one::text() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_one.text)
  return text_.GetNoArena();
}
inline void pmsg_mail_one::set_text(const ::std::string& value) {
  set_changed();
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.text)
}
#if LANG_CXX11
inline void pmsg_mail_one::set_text(::std::string&& value) {
  set_changed();
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_mail_one.text)
}
#endif
inline void pmsg_mail_one::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_mail_one.text)
}
inline void pmsg_mail_one::set_text(const char* value, size_t size) {
  set_changed();
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_mail_one.text)
}
inline ::std::string* pmsg_mail_one::mutable_text() {
  set_changed();
  set_has_text();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_mail_one.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_mail_one::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_mail_one.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_mail_one::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_mail_one.text)
}

// required string sender_name = 6;
inline bool pmsg_mail_one::has_sender_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pmsg_mail_one::set_has_sender_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pmsg_mail_one::clear_has_sender_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pmsg_mail_one::clear_sender_name() {
  set_changed();
  sender_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender_name();
}
inline const ::std::string& pmsg_mail_one::sender_name() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_one.sender_name)
  return sender_name_.GetNoArena();
}
inline void pmsg_mail_one::set_sender_name(const ::std::string& value) {
  set_changed();
  set_has_sender_name();
  sender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.sender_name)
}
#if LANG_CXX11
inline void pmsg_mail_one::set_sender_name(::std::string&& value) {
  set_changed();
  set_has_sender_name();
  sender_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_mail_one.sender_name)
}
#endif
inline void pmsg_mail_one::set_sender_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_sender_name();
  sender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_mail_one.sender_name)
}
inline void pmsg_mail_one::set_sender_name(const char* value, size_t size) {
  set_changed();
  set_has_sender_name();
  sender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_mail_one.sender_name)
}
inline ::std::string* pmsg_mail_one::mutable_sender_name() {
  set_changed();
  set_has_sender_name();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_mail_one.sender_name)
  return sender_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_mail_one::release_sender_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_mail_one.sender_name)
  if (!has_sender_name()) {
    return NULL;
  }
  clear_has_sender_name();
  return sender_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_mail_one::set_allocated_sender_name(::std::string* sender_name) {
  set_changed();
  if (sender_name != NULL) {
    set_has_sender_name();
  } else {
    clear_has_sender_name();
  }
  sender_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_mail_one.sender_name)
}

// repeated int32 type = 7;
inline int pmsg_mail_one::type_size() const {
  return type_.size();
}
inline void pmsg_mail_one::clear_type() {
  set_changed();
  type_.Clear();
}
inline ::google::protobuf::int32 pmsg_mail_one::type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_one.type)
  return type_.Get(index);
}
inline void pmsg_mail_one::set_type(int index, ::google::protobuf::int32 value) {
  set_changed();
  type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.type)
}
inline void pmsg_mail_one::add_type(::google::protobuf::int32 value) {
  set_changed();
  type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_one.type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_mail_one::type() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_mail_one.type)
  return type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_mail_one::mutable_type() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_mail_one.type)
  return &type_;
}

// repeated int32 value1 = 8;
inline int pmsg_mail_one::value1_size() const {
  return value1_.size();
}
inline void pmsg_mail_one::clear_value1() {
  set_changed();
  value1_.Clear();
}
inline ::google::protobuf::int32 pmsg_mail_one::value1(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_one.value1)
  return value1_.Get(index);
}
inline void pmsg_mail_one::set_value1(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.value1)
}
inline void pmsg_mail_one::add_value1(::google::protobuf::int32 value) {
  set_changed();
  value1_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_one.value1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_mail_one::value1() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_mail_one.value1)
  return value1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_mail_one::mutable_value1() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_mail_one.value1)
  return &value1_;
}

// repeated int32 value2 = 9;
inline int pmsg_mail_one::value2_size() const {
  return value2_.size();
}
inline void pmsg_mail_one::clear_value2() {
  set_changed();
  value2_.Clear();
}
inline ::google::protobuf::int32 pmsg_mail_one::value2(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_one.value2)
  return value2_.Get(index);
}
inline void pmsg_mail_one::set_value2(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.value2)
}
inline void pmsg_mail_one::add_value2(::google::protobuf::int32 value) {
  set_changed();
  value2_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_one.value2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_mail_one::value2() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_mail_one.value2)
  return value2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_mail_one::mutable_value2() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_mail_one.value2)
  return &value2_;
}

// repeated int32 value3 = 10;
inline int pmsg_mail_one::value3_size() const {
  return value3_.size();
}
inline void pmsg_mail_one::clear_value3() {
  set_changed();
  value3_.Clear();
}
inline ::google::protobuf::int32 pmsg_mail_one::value3(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_one.value3)
  return value3_.Get(index);
}
inline void pmsg_mail_one::set_value3(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_one.value3)
}
inline void pmsg_mail_one::add_value3(::google::protobuf::int32 value) {
  set_changed();
  value3_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_one.value3)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_mail_one::value3() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_mail_one.value3)
  return value3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_mail_one::mutable_value3() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_mail_one.value3)
  return &value3_;
}

// -------------------------------------------------------------------

// pmsg_mail_all

// required int32 level = 1;
inline bool pmsg_mail_all::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pmsg_mail_all::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pmsg_mail_all::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pmsg_mail_all::clear_level() {
  set_changed();
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 pmsg_mail_all::level() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_all.level)
  return level_;
}
inline void pmsg_mail_all::set_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_all.level)
}

// required int32 serverid = 2;
inline bool pmsg_mail_all::has_serverid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pmsg_mail_all::set_has_serverid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pmsg_mail_all::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pmsg_mail_all::clear_serverid() {
  set_changed();
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 pmsg_mail_all::serverid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_all.serverid)
  return serverid_;
}
inline void pmsg_mail_all::set_serverid(::google::protobuf::int32 value) {
  set_changed();
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_all.serverid)
}

// required string title = 4;
inline bool pmsg_mail_all::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_mail_all::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_mail_all::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_mail_all::clear_title() {
  set_changed();
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& pmsg_mail_all::title() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_all.title)
  return title_.GetNoArena();
}
inline void pmsg_mail_all::set_title(const ::std::string& value) {
  set_changed();
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_all.title)
}
#if LANG_CXX11
inline void pmsg_mail_all::set_title(::std::string&& value) {
  set_changed();
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_mail_all.title)
}
#endif
inline void pmsg_mail_all::set_title(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_mail_all.title)
}
inline void pmsg_mail_all::set_title(const char* value, size_t size) {
  set_changed();
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_mail_all.title)
}
inline ::std::string* pmsg_mail_all::mutable_title() {
  set_changed();
  set_has_title();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_mail_all.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_mail_all::release_title() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_mail_all.title)
  if (!has_title()) {
    return NULL;
  }
  clear_has_title();
  return title_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_mail_all::set_allocated_title(::std::string* title) {
  set_changed();
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_mail_all.title)
}

// required string text = 5;
inline bool pmsg_mail_all::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_mail_all::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_mail_all::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_mail_all::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& pmsg_mail_all::text() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_all.text)
  return text_.GetNoArena();
}
inline void pmsg_mail_all::set_text(const ::std::string& value) {
  set_changed();
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_all.text)
}
#if LANG_CXX11
inline void pmsg_mail_all::set_text(::std::string&& value) {
  set_changed();
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_mail_all.text)
}
#endif
inline void pmsg_mail_all::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_mail_all.text)
}
inline void pmsg_mail_all::set_text(const char* value, size_t size) {
  set_changed();
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_mail_all.text)
}
inline ::std::string* pmsg_mail_all::mutable_text() {
  set_changed();
  set_has_text();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_mail_all.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_mail_all::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_mail_all.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_mail_all::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_mail_all.text)
}

// required string sender_name = 6;
inline bool pmsg_mail_all::has_sender_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pmsg_mail_all::set_has_sender_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pmsg_mail_all::clear_has_sender_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pmsg_mail_all::clear_sender_name() {
  set_changed();
  sender_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender_name();
}
inline const ::std::string& pmsg_mail_all::sender_name() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_all.sender_name)
  return sender_name_.GetNoArena();
}
inline void pmsg_mail_all::set_sender_name(const ::std::string& value) {
  set_changed();
  set_has_sender_name();
  sender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_all.sender_name)
}
#if LANG_CXX11
inline void pmsg_mail_all::set_sender_name(::std::string&& value) {
  set_changed();
  set_has_sender_name();
  sender_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_mail_all.sender_name)
}
#endif
inline void pmsg_mail_all::set_sender_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_sender_name();
  sender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_mail_all.sender_name)
}
inline void pmsg_mail_all::set_sender_name(const char* value, size_t size) {
  set_changed();
  set_has_sender_name();
  sender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_mail_all.sender_name)
}
inline ::std::string* pmsg_mail_all::mutable_sender_name() {
  set_changed();
  set_has_sender_name();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_mail_all.sender_name)
  return sender_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_mail_all::release_sender_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_mail_all.sender_name)
  if (!has_sender_name()) {
    return NULL;
  }
  clear_has_sender_name();
  return sender_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_mail_all::set_allocated_sender_name(::std::string* sender_name) {
  set_changed();
  if (sender_name != NULL) {
    set_has_sender_name();
  } else {
    clear_has_sender_name();
  }
  sender_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_mail_all.sender_name)
}

// repeated int32 type = 7;
inline int pmsg_mail_all::type_size() const {
  return type_.size();
}
inline void pmsg_mail_all::clear_type() {
  set_changed();
  type_.Clear();
}
inline ::google::protobuf::int32 pmsg_mail_all::type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_all.type)
  return type_.Get(index);
}
inline void pmsg_mail_all::set_type(int index, ::google::protobuf::int32 value) {
  set_changed();
  type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_all.type)
}
inline void pmsg_mail_all::add_type(::google::protobuf::int32 value) {
  set_changed();
  type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_all.type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_mail_all::type() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_mail_all.type)
  return type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_mail_all::mutable_type() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_mail_all.type)
  return &type_;
}

// repeated int32 value1 = 8;
inline int pmsg_mail_all::value1_size() const {
  return value1_.size();
}
inline void pmsg_mail_all::clear_value1() {
  set_changed();
  value1_.Clear();
}
inline ::google::protobuf::int32 pmsg_mail_all::value1(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_all.value1)
  return value1_.Get(index);
}
inline void pmsg_mail_all::set_value1(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_all.value1)
}
inline void pmsg_mail_all::add_value1(::google::protobuf::int32 value) {
  set_changed();
  value1_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_all.value1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_mail_all::value1() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_mail_all.value1)
  return value1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_mail_all::mutable_value1() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_mail_all.value1)
  return &value1_;
}

// repeated int32 value2 = 9;
inline int pmsg_mail_all::value2_size() const {
  return value2_.size();
}
inline void pmsg_mail_all::clear_value2() {
  set_changed();
  value2_.Clear();
}
inline ::google::protobuf::int32 pmsg_mail_all::value2(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_all.value2)
  return value2_.Get(index);
}
inline void pmsg_mail_all::set_value2(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_all.value2)
}
inline void pmsg_mail_all::add_value2(::google::protobuf::int32 value) {
  set_changed();
  value2_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_all.value2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_mail_all::value2() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_mail_all.value2)
  return value2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_mail_all::mutable_value2() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_mail_all.value2)
  return &value2_;
}

// repeated int32 value3 = 10;
inline int pmsg_mail_all::value3_size() const {
  return value3_.size();
}
inline void pmsg_mail_all::clear_value3() {
  set_changed();
  value3_.Clear();
}
inline ::google::protobuf::int32 pmsg_mail_all::value3(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_mail_all.value3)
  return value3_.Get(index);
}
inline void pmsg_mail_all::set_value3(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_mail_all.value3)
}
inline void pmsg_mail_all::add_value3(::google::protobuf::int32 value) {
  set_changed();
  value3_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_mail_all.value3)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pmsg_mail_all::value3() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_mail_all.value3)
  return value3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pmsg_mail_all::mutable_value3() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_mail_all.value3)
  return &value3_;
}

// -------------------------------------------------------------------

// pmsg_req_recharge

// required string pt = 1;
inline bool pmsg_req_recharge::has_pt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_req_recharge::set_has_pt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_req_recharge::clear_has_pt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_req_recharge::clear_pt() {
  set_changed();
  pt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pt();
}
inline const ::std::string& pmsg_req_recharge::pt() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_req_recharge.pt)
  return pt_.GetNoArena();
}
inline void pmsg_req_recharge::set_pt(const ::std::string& value) {
  set_changed();
  set_has_pt();
  pt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_req_recharge.pt)
}
#if LANG_CXX11
inline void pmsg_req_recharge::set_pt(::std::string&& value) {
  set_changed();
  set_has_pt();
  pt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_req_recharge.pt)
}
#endif
inline void pmsg_req_recharge::set_pt(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_pt();
  pt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_req_recharge.pt)
}
inline void pmsg_req_recharge::set_pt(const char* value, size_t size) {
  set_changed();
  set_has_pt();
  pt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_req_recharge.pt)
}
inline ::std::string* pmsg_req_recharge::mutable_pt() {
  set_changed();
  set_has_pt();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_req_recharge.pt)
  return pt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_req_recharge::release_pt() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_req_recharge.pt)
  if (!has_pt()) {
    return NULL;
  }
  clear_has_pt();
  return pt_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_req_recharge::set_allocated_pt(::std::string* pt) {
  set_changed();
  if (pt != NULL) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pt);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_req_recharge.pt)
}

// repeated string code = 2;
inline int pmsg_req_recharge::code_size() const {
  return code_.size();
}
inline void pmsg_req_recharge::clear_code() {
  set_changed();
  code_.Clear();
}
inline const ::std::string& pmsg_req_recharge::code(int index) const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_req_recharge.code)
  return code_.Get(index);
}
inline ::std::string* pmsg_req_recharge::mutable_code(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_req_recharge.code)
  return code_.Mutable(index);
}
inline void pmsg_req_recharge::set_code(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_req_recharge.code)
  code_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void pmsg_req_recharge::set_code(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_req_recharge.code)
  code_.Mutable(index)->assign(std::move(value));
}
#endif
inline void pmsg_req_recharge::set_code(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  code_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_req_recharge.code)
}
inline void pmsg_req_recharge::set_code(int index, const char* value, size_t size) {
  set_changed();
  code_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_req_recharge.code)
}
inline ::std::string* pmsg_req_recharge::add_code() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.pipe.pmsg_req_recharge.code)
  return code_.Add();
}
inline void pmsg_req_recharge::add_code(const ::std::string& value) {
  set_changed();
  code_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_req_recharge.code)
}
#if LANG_CXX11
inline void pmsg_req_recharge::add_code(::std::string&& value) {
  set_changed();
  code_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.pipe.pmsg_req_recharge.code)
}
#endif
inline void pmsg_req_recharge::add_code(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  code_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.pipe.pmsg_req_recharge.code)
}
inline void pmsg_req_recharge::add_code(const char* value, size_t size) {
  set_changed();
  code_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.pipe.pmsg_req_recharge.code)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
pmsg_req_recharge::code() const {
  // @@protoc_insertion_point(field_list:protocol.pipe.pmsg_req_recharge.code)
  return code_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
pmsg_req_recharge::mutable_code() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.pipe.pmsg_req_recharge.code)
  return &code_;
}

// -------------------------------------------------------------------

// pmsg_recharge_ali

// required uint64 guid = 1;
inline bool pmsg_recharge_ali::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_recharge_ali::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_recharge_ali::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_recharge_ali::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 pmsg_recharge_ali::guid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_recharge_ali.guid)
  return guid_;
}
inline void pmsg_recharge_ali::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_recharge_ali.guid)
}

// required int32 rid = 2;
inline bool pmsg_recharge_ali::has_rid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pmsg_recharge_ali::set_has_rid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pmsg_recharge_ali::clear_has_rid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pmsg_recharge_ali::clear_rid() {
  set_changed();
  rid_ = 0;
  clear_has_rid();
}
inline ::google::protobuf::int32 pmsg_recharge_ali::rid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_recharge_ali.rid)
  return rid_;
}
inline void pmsg_recharge_ali::set_rid(::google::protobuf::int32 value) {
  set_changed();
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_recharge_ali.rid)
}

// required string orderno = 3;
inline bool pmsg_recharge_ali::has_orderno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_recharge_ali::set_has_orderno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_recharge_ali::clear_has_orderno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_recharge_ali::clear_orderno() {
  set_changed();
  orderno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orderno();
}
inline const ::std::string& pmsg_recharge_ali::orderno() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_recharge_ali.orderno)
  return orderno_.GetNoArena();
}
inline void pmsg_recharge_ali::set_orderno(const ::std::string& value) {
  set_changed();
  set_has_orderno();
  orderno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_recharge_ali.orderno)
}
#if LANG_CXX11
inline void pmsg_recharge_ali::set_orderno(::std::string&& value) {
  set_changed();
  set_has_orderno();
  orderno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_recharge_ali.orderno)
}
#endif
inline void pmsg_recharge_ali::set_orderno(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_orderno();
  orderno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_recharge_ali.orderno)
}
inline void pmsg_recharge_ali::set_orderno(const char* value, size_t size) {
  set_changed();
  set_has_orderno();
  orderno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_recharge_ali.orderno)
}
inline ::std::string* pmsg_recharge_ali::mutable_orderno() {
  set_changed();
  set_has_orderno();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_recharge_ali.orderno)
  return orderno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_recharge_ali::release_orderno() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_recharge_ali.orderno)
  if (!has_orderno()) {
    return NULL;
  }
  clear_has_orderno();
  return orderno_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_recharge_ali::set_allocated_orderno(::std::string* orderno) {
  set_changed();
  if (orderno != NULL) {
    set_has_orderno();
  } else {
    clear_has_orderno();
  }
  orderno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderno);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_recharge_ali.orderno)
}

// required float amount = 4;
inline bool pmsg_recharge_ali::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pmsg_recharge_ali::set_has_amount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pmsg_recharge_ali::clear_has_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pmsg_recharge_ali::clear_amount() {
  set_changed();
  amount_ = 0;
  clear_has_amount();
}
inline float pmsg_recharge_ali::amount() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_recharge_ali.amount)
  return amount_;
}
inline void pmsg_recharge_ali::set_amount(float value) {
  set_changed();
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_recharge_ali.amount)
}

// -------------------------------------------------------------------

// pmsg_rep_recharge

// required int32 res = 1;
inline bool pmsg_rep_recharge::has_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pmsg_rep_recharge::set_has_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pmsg_rep_recharge::clear_has_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pmsg_rep_recharge::clear_res() {
  set_changed();
  res_ = 0;
  clear_has_res();
}
inline ::google::protobuf::int32 pmsg_rep_recharge::res() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_recharge.res)
  return res_;
}
inline void pmsg_rep_recharge::set_res(::google::protobuf::int32 value) {
  set_changed();
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_recharge.res)
}

// required string product_id = 2;
inline bool pmsg_rep_recharge::has_product_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_rep_recharge::set_has_product_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_rep_recharge::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_rep_recharge::clear_product_id() {
  set_changed();
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
inline const ::std::string& pmsg_rep_recharge::product_id() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_recharge.product_id)
  return product_id_.GetNoArena();
}
inline void pmsg_rep_recharge::set_product_id(const ::std::string& value) {
  set_changed();
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_recharge.product_id)
}
#if LANG_CXX11
inline void pmsg_rep_recharge::set_product_id(::std::string&& value) {
  set_changed();
  set_has_product_id();
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_rep_recharge.product_id)
}
#endif
inline void pmsg_rep_recharge::set_product_id(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_rep_recharge.product_id)
}
inline void pmsg_rep_recharge::set_product_id(const char* value, size_t size) {
  set_changed();
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_rep_recharge.product_id)
}
inline ::std::string* pmsg_rep_recharge::mutable_product_id() {
  set_changed();
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_rep_recharge.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_rep_recharge::release_product_id() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_rep_recharge.product_id)
  if (!has_product_id()) {
    return NULL;
  }
  clear_has_product_id();
  return product_id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_rep_recharge::set_allocated_product_id(::std::string* product_id) {
  set_changed();
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_rep_recharge.product_id)
}

// required string orderid = 3;
inline bool pmsg_rep_recharge::has_orderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_rep_recharge::set_has_orderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_rep_recharge::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_rep_recharge::clear_orderid() {
  set_changed();
  orderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orderid();
}
inline const ::std::string& pmsg_rep_recharge::orderid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rep_recharge.orderid)
  return orderid_.GetNoArena();
}
inline void pmsg_rep_recharge::set_orderid(const ::std::string& value) {
  set_changed();
  set_has_orderid();
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rep_recharge.orderid)
}
#if LANG_CXX11
inline void pmsg_rep_recharge::set_orderid(::std::string&& value) {
  set_changed();
  set_has_orderid();
  orderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_rep_recharge.orderid)
}
#endif
inline void pmsg_rep_recharge::set_orderid(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_orderid();
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_rep_recharge.orderid)
}
inline void pmsg_rep_recharge::set_orderid(const char* value, size_t size) {
  set_changed();
  set_has_orderid();
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_rep_recharge.orderid)
}
inline ::std::string* pmsg_rep_recharge::mutable_orderid() {
  set_changed();
  set_has_orderid();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_rep_recharge.orderid)
  return orderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_rep_recharge::release_orderid() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_rep_recharge.orderid)
  if (!has_orderid()) {
    return NULL;
  }
  clear_has_orderid();
  return orderid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_rep_recharge::set_allocated_orderid(::std::string* orderid) {
  set_changed();
  if (orderid != NULL) {
    set_has_orderid();
  } else {
    clear_has_orderid();
  }
  orderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderid);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_rep_recharge.orderid)
}

// -------------------------------------------------------------------

// pmsg_recharge_simulation

// required string acc_names = 1;
inline bool pmsg_recharge_simulation::has_acc_names() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_recharge_simulation::set_has_acc_names() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_recharge_simulation::clear_has_acc_names() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_recharge_simulation::clear_acc_names() {
  set_changed();
  acc_names_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_acc_names();
}
inline const ::std::string& pmsg_recharge_simulation::acc_names() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_recharge_simulation.acc_names)
  return acc_names_.GetNoArena();
}
inline void pmsg_recharge_simulation::set_acc_names(const ::std::string& value) {
  set_changed();
  set_has_acc_names();
  acc_names_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_recharge_simulation.acc_names)
}
#if LANG_CXX11
inline void pmsg_recharge_simulation::set_acc_names(::std::string&& value) {
  set_changed();
  set_has_acc_names();
  acc_names_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_recharge_simulation.acc_names)
}
#endif
inline void pmsg_recharge_simulation::set_acc_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_acc_names();
  acc_names_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_recharge_simulation.acc_names)
}
inline void pmsg_recharge_simulation::set_acc_names(const char* value, size_t size) {
  set_changed();
  set_has_acc_names();
  acc_names_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_recharge_simulation.acc_names)
}
inline ::std::string* pmsg_recharge_simulation::mutable_acc_names() {
  set_changed();
  set_has_acc_names();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_recharge_simulation.acc_names)
  return acc_names_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_recharge_simulation::release_acc_names() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_recharge_simulation.acc_names)
  if (!has_acc_names()) {
    return NULL;
  }
  clear_has_acc_names();
  return acc_names_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_recharge_simulation::set_allocated_acc_names(::std::string* acc_names) {
  set_changed();
  if (acc_names != NULL) {
    set_has_acc_names();
  } else {
    clear_has_acc_names();
  }
  acc_names_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acc_names);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_recharge_simulation.acc_names)
}

// required int32 serverid = 2;
inline bool pmsg_recharge_simulation::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_recharge_simulation::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_recharge_simulation::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_recharge_simulation::clear_serverid() {
  set_changed();
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 pmsg_recharge_simulation::serverid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_recharge_simulation.serverid)
  return serverid_;
}
inline void pmsg_recharge_simulation::set_serverid(::google::protobuf::int32 value) {
  set_changed();
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_recharge_simulation.serverid)
}

// required int32 rid = 3;
inline bool pmsg_recharge_simulation::has_rid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pmsg_recharge_simulation::set_has_rid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pmsg_recharge_simulation::clear_has_rid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pmsg_recharge_simulation::clear_rid() {
  set_changed();
  rid_ = 0;
  clear_has_rid();
}
inline ::google::protobuf::int32 pmsg_recharge_simulation::rid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_recharge_simulation.rid)
  return rid_;
}
inline void pmsg_recharge_simulation::set_rid(::google::protobuf::int32 value) {
  set_changed();
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_recharge_simulation.rid)
}

// -------------------------------------------------------------------

// pmsg_recharge_simulation1

// required uint64 guid = 1;
inline bool pmsg_recharge_simulation1::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_recharge_simulation1::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_recharge_simulation1::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_recharge_simulation1::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 pmsg_recharge_simulation1::guid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_recharge_simulation1.guid)
  return guid_;
}
inline void pmsg_recharge_simulation1::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_recharge_simulation1.guid)
}

// required int32 rid = 2;
inline bool pmsg_recharge_simulation1::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_recharge_simulation1::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_recharge_simulation1::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_recharge_simulation1::clear_rid() {
  set_changed();
  rid_ = 0;
  clear_has_rid();
}
inline ::google::protobuf::int32 pmsg_recharge_simulation1::rid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_recharge_simulation1.rid)
  return rid_;
}
inline void pmsg_recharge_simulation1::set_rid(::google::protobuf::int32 value) {
  set_changed();
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_recharge_simulation1.rid)
}

// -------------------------------------------------------------------

// pmsg_rank_forbidden

// required string acc_names = 1;
inline bool pmsg_rank_forbidden::has_acc_names() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_rank_forbidden::set_has_acc_names() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_rank_forbidden::clear_has_acc_names() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_rank_forbidden::clear_acc_names() {
  set_changed();
  acc_names_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_acc_names();
}
inline const ::std::string& pmsg_rank_forbidden::acc_names() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rank_forbidden.acc_names)
  return acc_names_.GetNoArena();
}
inline void pmsg_rank_forbidden::set_acc_names(const ::std::string& value) {
  set_changed();
  set_has_acc_names();
  acc_names_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rank_forbidden.acc_names)
}
#if LANG_CXX11
inline void pmsg_rank_forbidden::set_acc_names(::std::string&& value) {
  set_changed();
  set_has_acc_names();
  acc_names_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.pipe.pmsg_rank_forbidden.acc_names)
}
#endif
inline void pmsg_rank_forbidden::set_acc_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_acc_names();
  acc_names_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.pipe.pmsg_rank_forbidden.acc_names)
}
inline void pmsg_rank_forbidden::set_acc_names(const char* value, size_t size) {
  set_changed();
  set_has_acc_names();
  acc_names_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.pipe.pmsg_rank_forbidden.acc_names)
}
inline ::std::string* pmsg_rank_forbidden::mutable_acc_names() {
  set_changed();
  set_has_acc_names();
  // @@protoc_insertion_point(field_mutable:protocol.pipe.pmsg_rank_forbidden.acc_names)
  return acc_names_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pmsg_rank_forbidden::release_acc_names() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.pipe.pmsg_rank_forbidden.acc_names)
  if (!has_acc_names()) {
    return NULL;
  }
  clear_has_acc_names();
  return acc_names_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pmsg_rank_forbidden::set_allocated_acc_names(::std::string* acc_names) {
  set_changed();
  if (acc_names != NULL) {
    set_has_acc_names();
  } else {
    clear_has_acc_names();
  }
  acc_names_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acc_names);
  // @@protoc_insertion_point(field_set_allocated:protocol.pipe.pmsg_rank_forbidden.acc_names)
}

// required int32 serverid = 2;
inline bool pmsg_rank_forbidden::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pmsg_rank_forbidden::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pmsg_rank_forbidden::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pmsg_rank_forbidden::clear_serverid() {
  set_changed();
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 pmsg_rank_forbidden::serverid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rank_forbidden.serverid)
  return serverid_;
}
inline void pmsg_rank_forbidden::set_serverid(::google::protobuf::int32 value) {
  set_changed();
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rank_forbidden.serverid)
}

// -------------------------------------------------------------------

// pmsg_rank_forbidden1

// required uint64 guid = 1;
inline bool pmsg_rank_forbidden1::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pmsg_rank_forbidden1::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pmsg_rank_forbidden1::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pmsg_rank_forbidden1::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 pmsg_rank_forbidden1::guid() const {
  // @@protoc_insertion_point(field_get:protocol.pipe.pmsg_rank_forbidden1.guid)
  return guid_;
}
inline void pmsg_rank_forbidden1::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.pipe.pmsg_rank_forbidden1.guid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pipe
}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5fpipe_2eproto
