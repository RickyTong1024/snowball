// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_rank.proto

#ifndef PROTOBUF_INCLUDED_msg_5frank_2eproto
#define PROTOBUF_INCLUDED_msg_5frank_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "rank.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5frank_2eproto 

namespace protobuf_msg_5frank_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5frank_2eproto
namespace protocol {
namespace game {
class cmsg_rank;
class cmsg_rankDefaultTypeInternal;
extern cmsg_rankDefaultTypeInternal _cmsg_rank_default_instance_;
class push_hall_rank_forbidden;
class push_hall_rank_forbiddenDefaultTypeInternal;
extern push_hall_rank_forbiddenDefaultTypeInternal _push_hall_rank_forbidden_default_instance_;
class push_hall_rank_update;
class push_hall_rank_updateDefaultTypeInternal;
extern push_hall_rank_updateDefaultTypeInternal _push_hall_rank_update_default_instance_;
class push_rank_hall_cache;
class push_rank_hall_cacheDefaultTypeInternal;
extern push_rank_hall_cacheDefaultTypeInternal _push_rank_hall_cache_default_instance_;
class smsg_rank;
class smsg_rankDefaultTypeInternal;
extern smsg_rankDefaultTypeInternal _smsg_rank_default_instance_;
}  // namespace game
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::game::cmsg_rank* Arena::CreateMaybeMessage<::protocol::game::cmsg_rank>(Arena*);
template<> ::protocol::game::push_hall_rank_forbidden* Arena::CreateMaybeMessage<::protocol::game::push_hall_rank_forbidden>(Arena*);
template<> ::protocol::game::push_hall_rank_update* Arena::CreateMaybeMessage<::protocol::game::push_hall_rank_update>(Arena*);
template<> ::protocol::game::push_rank_hall_cache* Arena::CreateMaybeMessage<::protocol::game::push_rank_hall_cache>(Arena*);
template<> ::protocol::game::smsg_rank* Arena::CreateMaybeMessage<::protocol::game::smsg_rank>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {
namespace game {

// ===================================================================

class push_hall_rank_update : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.push_hall_rank_update) */ {
 public:
  push_hall_rank_update();
  virtual ~push_hall_rank_update();

  push_hall_rank_update(const push_hall_rank_update& from);

  inline push_hall_rank_update& operator=(const push_hall_rank_update& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  push_hall_rank_update(push_hall_rank_update&& from) noexcept
    : push_hall_rank_update() {
    *this = ::std::move(from);
  }

  inline push_hall_rank_update& operator=(push_hall_rank_update&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const push_hall_rank_update& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const push_hall_rank_update* internal_default_instance() {
    return reinterpret_cast<const push_hall_rank_update*>(
               &_push_hall_rank_update_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(push_hall_rank_update* other);
  friend void swap(push_hall_rank_update& a, push_hall_rank_update& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline push_hall_rank_update* New() const final {
    return CreateMaybeMessage<push_hall_rank_update>(NULL);
  }

  push_hall_rank_update* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<push_hall_rank_update>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const push_hall_rank_update& from);
  void MergeFrom(const push_hall_rank_update& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(push_hall_rank_update* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint64 player_guid = 2;
  bool has_player_guid() const;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 sex = 4;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // required int32 level = 5;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 avatar = 6;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 6;
  ::google::protobuf::int32 avatar() const;
  void set_avatar(::google::protobuf::int32 value);

  // required int32 toukuang = 7;
  bool has_toukuang() const;
  void clear_toukuang();
  static const int kToukuangFieldNumber = 7;
  ::google::protobuf::int32 toukuang() const;
  void set_toukuang(::google::protobuf::int32 value);

  // required int32 region_id = 8;
  bool has_region_id() const;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 8;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // required int32 name_color = 9;
  bool has_name_color() const;
  void clear_name_color();
  static const int kNameColorFieldNumber = 9;
  ::google::protobuf::int32 name_color() const;
  void set_name_color(::google::protobuf::int32 value);

  // required int32 value = 10;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 10;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.push_hall_rank_update)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_player_guid();
  void clear_has_player_guid();
  void set_has_name();
  void clear_has_name();
  void set_has_sex();
  void clear_has_sex();
  void set_has_level();
  void clear_has_level();
  void set_has_avatar();
  void clear_has_avatar();
  void set_has_toukuang();
  void clear_has_toukuang();
  void set_has_region_id();
  void clear_has_region_id();
  void set_has_name_color();
  void clear_has_name_color();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 avatar_;
  ::google::protobuf::int32 toukuang_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 name_color_;
  ::google::protobuf::int32 value_;
  friend struct ::protobuf_msg_5frank_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class push_rank_hall_cache : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.push_rank_hall_cache) */ {
 public:
  push_rank_hall_cache();
  virtual ~push_rank_hall_cache();

  push_rank_hall_cache(const push_rank_hall_cache& from);

  inline push_rank_hall_cache& operator=(const push_rank_hall_cache& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  push_rank_hall_cache(push_rank_hall_cache&& from) noexcept
    : push_rank_hall_cache() {
    *this = ::std::move(from);
  }

  inline push_rank_hall_cache& operator=(push_rank_hall_cache&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const push_rank_hall_cache& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const push_rank_hall_cache* internal_default_instance() {
    return reinterpret_cast<const push_rank_hall_cache*>(
               &_push_rank_hall_cache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(push_rank_hall_cache* other);
  friend void swap(push_rank_hall_cache& a, push_rank_hall_cache& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline push_rank_hall_cache* New() const final {
    return CreateMaybeMessage<push_rank_hall_cache>(NULL);
  }

  push_rank_hall_cache* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<push_rank_hall_cache>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const push_rank_hall_cache& from);
  void MergeFrom(const push_rank_hall_cache& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(push_rank_hall_cache* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // repeated .dhc.rank_t ranks = 2;
  int ranks_size() const;
  void clear_ranks();
  static const int kRanksFieldNumber = 2;
  ::dhc::rank_t* mutable_ranks(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::rank_t >*
      mutable_ranks();
  const ::dhc::rank_t& ranks(int index) const;
  ::dhc::rank_t* add_ranks();
  const ::google::protobuf::RepeatedPtrField< ::dhc::rank_t >&
      ranks() const;

  // @@protoc_insertion_point(class_scope:protocol.game.push_rank_hall_cache)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::google::protobuf::RepeatedPtrField< ::dhc::rank_t > ranks_;
  friend struct ::protobuf_msg_5frank_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_rank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_rank) */ {
 public:
  cmsg_rank();
  virtual ~cmsg_rank();

  cmsg_rank(const cmsg_rank& from);

  inline cmsg_rank& operator=(const cmsg_rank& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_rank(cmsg_rank&& from) noexcept
    : cmsg_rank() {
    *this = ::std::move(from);
  }

  inline cmsg_rank& operator=(cmsg_rank&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_rank& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_rank* internal_default_instance() {
    return reinterpret_cast<const cmsg_rank*>(
               &_cmsg_rank_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(cmsg_rank* other);
  friend void swap(cmsg_rank& a, cmsg_rank& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_rank* New() const final {
    return CreateMaybeMessage<cmsg_rank>(NULL);
  }

  cmsg_rank* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_rank>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_rank& from);
  void MergeFrom(const cmsg_rank& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_rank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_rank)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_msg_5frank_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_rank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_rank) */ {
 public:
  smsg_rank();
  virtual ~smsg_rank();

  smsg_rank(const smsg_rank& from);

  inline smsg_rank& operator=(const smsg_rank& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_rank(smsg_rank&& from) noexcept
    : smsg_rank() {
    *this = ::std::move(from);
  }

  inline smsg_rank& operator=(smsg_rank&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_rank& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_rank* internal_default_instance() {
    return reinterpret_cast<const smsg_rank*>(
               &_smsg_rank_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(smsg_rank* other);
  friend void swap(smsg_rank& a, smsg_rank& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_rank* New() const final {
    return CreateMaybeMessage<smsg_rank>(NULL);
  }

  smsg_rank* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_rank>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_rank& from);
  void MergeFrom(const smsg_rank& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_rank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dhc.rank_t rank = 1;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  private:
  const ::dhc::rank_t& _internal_rank() const;
  public:
  const ::dhc::rank_t& rank() const;
  ::dhc::rank_t* release_rank();
  ::dhc::rank_t* mutable_rank();
  void set_allocated_rank(::dhc::rank_t* rank);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_rank)
 private:
  void set_has_rank();
  void clear_has_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::dhc::rank_t* rank_;
  friend struct ::protobuf_msg_5frank_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class push_hall_rank_forbidden : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.push_hall_rank_forbidden) */ {
 public:
  push_hall_rank_forbidden();
  virtual ~push_hall_rank_forbidden();

  push_hall_rank_forbidden(const push_hall_rank_forbidden& from);

  inline push_hall_rank_forbidden& operator=(const push_hall_rank_forbidden& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  push_hall_rank_forbidden(push_hall_rank_forbidden&& from) noexcept
    : push_hall_rank_forbidden() {
    *this = ::std::move(from);
  }

  inline push_hall_rank_forbidden& operator=(push_hall_rank_forbidden&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const push_hall_rank_forbidden& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const push_hall_rank_forbidden* internal_default_instance() {
    return reinterpret_cast<const push_hall_rank_forbidden*>(
               &_push_hall_rank_forbidden_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(push_hall_rank_forbidden* other);
  friend void swap(push_hall_rank_forbidden& a, push_hall_rank_forbidden& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline push_hall_rank_forbidden* New() const final {
    return CreateMaybeMessage<push_hall_rank_forbidden>(NULL);
  }

  push_hall_rank_forbidden* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<push_hall_rank_forbidden>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const push_hall_rank_forbidden& from);
  void MergeFrom(const push_hall_rank_forbidden& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(push_hall_rank_forbidden* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.push_hall_rank_forbidden)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 guid_;
  friend struct ::protobuf_msg_5frank_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// push_hall_rank_update

// required int32 id = 1;
inline bool push_hall_rank_update::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void push_hall_rank_update::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void push_hall_rank_update::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void push_hall_rank_update::clear_id() {
  set_changed();
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 push_hall_rank_update::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.id)
  return id_;
}
inline void push_hall_rank_update::set_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.id)
}

// required uint64 player_guid = 2;
inline bool push_hall_rank_update::has_player_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void push_hall_rank_update::set_has_player_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void push_hall_rank_update::clear_has_player_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void push_hall_rank_update::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_player_guid();
}
inline ::google::protobuf::uint64 push_hall_rank_update::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.player_guid)
  return player_guid_;
}
inline void push_hall_rank_update::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_player_guid();
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.player_guid)
}

// required string name = 3;
inline bool push_hall_rank_update::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void push_hall_rank_update::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void push_hall_rank_update::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void push_hall_rank_update::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& push_hall_rank_update::name() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.name)
  return name_.GetNoArena();
}
inline void push_hall_rank_update::set_name(const ::std::string& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.name)
}
#if LANG_CXX11
inline void push_hall_rank_update::set_name(::std::string&& value) {
  set_changed();
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.push_hall_rank_update.name)
}
#endif
inline void push_hall_rank_update::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.push_hall_rank_update.name)
}
inline void push_hall_rank_update::set_name(const char* value, size_t size) {
  set_changed();
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.push_hall_rank_update.name)
}
inline ::std::string* push_hall_rank_update::mutable_name() {
  set_changed();
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protocol.game.push_hall_rank_update.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* push_hall_rank_update::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.push_hall_rank_update.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void push_hall_rank_update::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.push_hall_rank_update.name)
}

// required int32 sex = 4;
inline bool push_hall_rank_update::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void push_hall_rank_update::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void push_hall_rank_update::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void push_hall_rank_update::clear_sex() {
  set_changed();
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 push_hall_rank_update::sex() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.sex)
  return sex_;
}
inline void push_hall_rank_update::set_sex(::google::protobuf::int32 value) {
  set_changed();
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.sex)
}

// required int32 level = 5;
inline bool push_hall_rank_update::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void push_hall_rank_update::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void push_hall_rank_update::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void push_hall_rank_update::clear_level() {
  set_changed();
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 push_hall_rank_update::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.level)
  return level_;
}
inline void push_hall_rank_update::set_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.level)
}

// required int32 avatar = 6;
inline bool push_hall_rank_update::has_avatar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void push_hall_rank_update::set_has_avatar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void push_hall_rank_update::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void push_hall_rank_update::clear_avatar() {
  set_changed();
  avatar_ = 0;
  clear_has_avatar();
}
inline ::google::protobuf::int32 push_hall_rank_update::avatar() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.avatar)
  return avatar_;
}
inline void push_hall_rank_update::set_avatar(::google::protobuf::int32 value) {
  set_changed();
  set_has_avatar();
  avatar_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.avatar)
}

// required int32 toukuang = 7;
inline bool push_hall_rank_update::has_toukuang() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void push_hall_rank_update::set_has_toukuang() {
  _has_bits_[0] |= 0x00000040u;
}
inline void push_hall_rank_update::clear_has_toukuang() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void push_hall_rank_update::clear_toukuang() {
  set_changed();
  toukuang_ = 0;
  clear_has_toukuang();
}
inline ::google::protobuf::int32 push_hall_rank_update::toukuang() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.toukuang)
  return toukuang_;
}
inline void push_hall_rank_update::set_toukuang(::google::protobuf::int32 value) {
  set_changed();
  set_has_toukuang();
  toukuang_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.toukuang)
}

// required int32 region_id = 8;
inline bool push_hall_rank_update::has_region_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void push_hall_rank_update::set_has_region_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void push_hall_rank_update::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void push_hall_rank_update::clear_region_id() {
  set_changed();
  region_id_ = 0;
  clear_has_region_id();
}
inline ::google::protobuf::int32 push_hall_rank_update::region_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.region_id)
  return region_id_;
}
inline void push_hall_rank_update::set_region_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_region_id();
  region_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.region_id)
}

// required int32 name_color = 9;
inline bool push_hall_rank_update::has_name_color() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void push_hall_rank_update::set_has_name_color() {
  _has_bits_[0] |= 0x00000100u;
}
inline void push_hall_rank_update::clear_has_name_color() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void push_hall_rank_update::clear_name_color() {
  set_changed();
  name_color_ = 0;
  clear_has_name_color();
}
inline ::google::protobuf::int32 push_hall_rank_update::name_color() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.name_color)
  return name_color_;
}
inline void push_hall_rank_update::set_name_color(::google::protobuf::int32 value) {
  set_changed();
  set_has_name_color();
  name_color_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.name_color)
}

// required int32 value = 10;
inline bool push_hall_rank_update::has_value() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void push_hall_rank_update::set_has_value() {
  _has_bits_[0] |= 0x00000200u;
}
inline void push_hall_rank_update::clear_has_value() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void push_hall_rank_update::clear_value() {
  set_changed();
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 push_hall_rank_update::value() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_update.value)
  return value_;
}
inline void push_hall_rank_update::set_value(::google::protobuf::int32 value) {
  set_changed();
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_update.value)
}

// -------------------------------------------------------------------

// push_rank_hall_cache

// repeated int32 id = 1;
inline int push_rank_hall_cache::id_size() const {
  return id_.size();
}
inline void push_rank_hall_cache::clear_id() {
  set_changed();
  id_.Clear();
}
inline ::google::protobuf::int32 push_rank_hall_cache::id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.push_rank_hall_cache.id)
  return id_.Get(index);
}
inline void push_rank_hall_cache::set_id(int index, ::google::protobuf::int32 value) {
  set_changed();
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.push_rank_hall_cache.id)
}
inline void push_rank_hall_cache::add_id(::google::protobuf::int32 value) {
  set_changed();
  id_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.push_rank_hall_cache.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
push_rank_hall_cache::id() const {
  // @@protoc_insertion_point(field_list:protocol.game.push_rank_hall_cache.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
push_rank_hall_cache::mutable_id() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.push_rank_hall_cache.id)
  return &id_;
}

// repeated .dhc.rank_t ranks = 2;
inline int push_rank_hall_cache::ranks_size() const {
  return ranks_.size();
}
inline ::dhc::rank_t* push_rank_hall_cache::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.push_rank_hall_cache.ranks)
  return ranks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::rank_t >*
push_rank_hall_cache::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.push_rank_hall_cache.ranks)
  return &ranks_;
}
inline const ::dhc::rank_t& push_rank_hall_cache::ranks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.push_rank_hall_cache.ranks)
  return ranks_.Get(index);
}
inline ::dhc::rank_t* push_rank_hall_cache::add_ranks() {
  // @@protoc_insertion_point(field_add:protocol.game.push_rank_hall_cache.ranks)
  return ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::rank_t >&
push_rank_hall_cache::ranks() const {
  // @@protoc_insertion_point(field_list:protocol.game.push_rank_hall_cache.ranks)
  return ranks_;
}

// -------------------------------------------------------------------

// cmsg_rank

// required int32 id = 1;
inline bool cmsg_rank::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cmsg_rank::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cmsg_rank::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cmsg_rank::clear_id() {
  set_changed();
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 cmsg_rank::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_rank.id)
  return id_;
}
inline void cmsg_rank::set_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_rank.id)
}

// -------------------------------------------------------------------

// smsg_rank

// required .dhc.rank_t rank = 1;
inline bool smsg_rank::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void smsg_rank::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void smsg_rank::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::dhc::rank_t& smsg_rank::_internal_rank() const {
  return *rank_;
}
inline const ::dhc::rank_t& smsg_rank::rank() const {
  const ::dhc::rank_t* p = rank_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_rank.rank)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::rank_t*>(
      &::dhc::_rank_t_default_instance_);
}
inline ::dhc::rank_t* smsg_rank::release_rank() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_rank.rank)
  clear_has_rank();
  ::dhc::rank_t* temp = rank_;
  rank_ = NULL;
  return temp;
}
inline ::dhc::rank_t* smsg_rank::mutable_rank() {
  set_has_rank();
  if (rank_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::rank_t>(GetArenaNoVirtual());
    rank_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_rank.rank)
  return rank_;
}
inline void smsg_rank::set_allocated_rank(::dhc::rank_t* rank) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rank_);
  }
  if (rank) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rank = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rank, submessage_arena);
    }
    set_has_rank();
  } else {
    clear_has_rank();
  }
  rank_ = rank;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_rank.rank)
}

// -------------------------------------------------------------------

// push_hall_rank_forbidden

// required uint64 guid = 1;
inline bool push_hall_rank_forbidden::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void push_hall_rank_forbidden::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void push_hall_rank_forbidden::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void push_hall_rank_forbidden::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 push_hall_rank_forbidden::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.push_hall_rank_forbidden.guid)
  return guid_;
}
inline void push_hall_rank_forbidden::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.push_hall_rank_forbidden.guid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace game
}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5frank_2eproto
