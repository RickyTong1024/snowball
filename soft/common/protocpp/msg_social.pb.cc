// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_social.proto

#include "msg_social.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_social_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_social_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_social_t;
}  // namespace protobuf_social_2eproto
namespace protocol {
namespace game {
class social_list_player_loadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<social_list_player_load>
      _instance;
} _social_list_player_load_default_instance_;
class smsg_social_dataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_social_data>
      _instance;
} _smsg_social_data_default_instance_;
class smsg_social_statDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_social_stat>
      _instance;
} _smsg_social_stat_default_instance_;
class req_social_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<req_social_login>
      _instance;
} _req_social_login_default_instance_;
class rep_social_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rep_social_login>
      _instance;
} _rep_social_login_default_instance_;
class cmsg_social_lookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_social_look>
      _instance;
} _cmsg_social_look_default_instance_;
class smsg_social_lookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_social_look>
      _instance;
} _smsg_social_look_default_instance_;
class req_social_lookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<req_social_look>
      _instance;
} _req_social_look_default_instance_;
class req_social_deleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<req_social_delete>
      _instance;
} _req_social_delete_default_instance_;
class cmsg_social_deleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_social_delete>
      _instance;
} _cmsg_social_delete_default_instance_;
class smsg_social_deleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_social_delete>
      _instance;
} _smsg_social_delete_default_instance_;
class pmsg_social_deleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pmsg_social_delete>
      _instance;
} _pmsg_social_delete_default_instance_;
class cmsg_social_applyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_social_apply>
      _instance;
} _cmsg_social_apply_default_instance_;
class smsg_social_applyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_social_apply>
      _instance;
} _smsg_social_apply_default_instance_;
class rmsg_social_applyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rmsg_social_apply>
      _instance;
} _rmsg_social_apply_default_instance_;
class rmsg_social_apply_flagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rmsg_social_apply_flag>
      _instance;
} _rmsg_social_apply_flag_default_instance_;
class rmsg_social_rejectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rmsg_social_reject>
      _instance;
} _rmsg_social_reject_default_instance_;
class rmsg_social_addDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rmsg_social_add>
      _instance;
} _rmsg_social_add_default_instance_;
class cmsg_social_addDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_social_add>
      _instance;
} _cmsg_social_add_default_instance_;
class smsg_social_addDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_social_add>
      _instance;
} _smsg_social_add_default_instance_;
class cmsg_social_blackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_social_black>
      _instance;
} _cmsg_social_black_default_instance_;
class rmsg_social_blackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rmsg_social_black>
      _instance;
} _rmsg_social_black_default_instance_;
class cmsg_social_chatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_social_chat>
      _instance;
} _cmsg_social_chat_default_instance_;
class smsg_social_chatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_social_chat>
      _instance;
} _smsg_social_chat_default_instance_;
class pmsg_social_chatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pmsg_social_chat>
      _instance;
} _pmsg_social_chat_default_instance_;
class cmsg_social_giftDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_social_gift>
      _instance;
} _cmsg_social_gift_default_instance_;
class smsg_social_gift_receiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_social_gift_receive>
      _instance;
} _smsg_social_gift_receive_default_instance_;
class pmsg_social_giftDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pmsg_social_gift>
      _instance;
} _pmsg_social_gift_default_instance_;
class pmsg_social_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pmsg_social_login>
      _instance;
} _pmsg_social_login_default_instance_;
class cmsg_soical_searchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmsg_soical_search>
      _instance;
} _cmsg_soical_search_default_instance_;
class req_social_goldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<req_social_gold>
      _instance;
} _req_social_gold_default_instance_;
class rep_social_goldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rep_social_gold>
      _instance;
} _rep_social_gold_default_instance_;
class smsg_social_goldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<smsg_social_gold>
      _instance;
} _smsg_social_gold_default_instance_;
class push_social_fightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<push_social_fight>
      _instance;
} _push_social_fight_default_instance_;
}  // namespace game
}  // namespace protocol
namespace protobuf_msg_5fsocial_2eproto {
static void InitDefaultssocial_list_player_load() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_social_list_player_load_default_instance_;
    new (ptr) ::protocol::game::social_list_player_load();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::social_list_player_load::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_social_list_player_load =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssocial_list_player_load}, {
      &protobuf_social_2eproto::scc_info_social_t.base,}};

static void InitDefaultssmsg_social_data() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_social_data_default_instance_;
    new (ptr) ::protocol::game::smsg_social_data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_social_data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_social_data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_social_data}, {}};

static void InitDefaultssmsg_social_stat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_social_stat_default_instance_;
    new (ptr) ::protocol::game::smsg_social_stat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_social_stat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_social_stat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_social_stat}, {}};

static void InitDefaultsreq_social_login() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_req_social_login_default_instance_;
    new (ptr) ::protocol::game::req_social_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::req_social_login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_req_social_login =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsreq_social_login}, {}};

static void InitDefaultsrep_social_login() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_rep_social_login_default_instance_;
    new (ptr) ::protocol::game::rep_social_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::rep_social_login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_rep_social_login =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsrep_social_login}, {
      &protobuf_social_2eproto::scc_info_social_t.base,}};

static void InitDefaultscmsg_social_look() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_social_look_default_instance_;
    new (ptr) ::protocol::game::cmsg_social_look();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_social_look::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_social_look =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_social_look}, {}};

static void InitDefaultssmsg_social_look() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_social_look_default_instance_;
    new (ptr) ::protocol::game::smsg_social_look();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_social_look::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_social_look =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_social_look}, {
      &protobuf_social_2eproto::scc_info_social_t.base,}};

static void InitDefaultsreq_social_look() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_req_social_look_default_instance_;
    new (ptr) ::protocol::game::req_social_look();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::req_social_look::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_req_social_look =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsreq_social_look}, {}};

static void InitDefaultsreq_social_delete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_req_social_delete_default_instance_;
    new (ptr) ::protocol::game::req_social_delete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::req_social_delete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_req_social_delete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsreq_social_delete}, {}};

static void InitDefaultscmsg_social_delete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_social_delete_default_instance_;
    new (ptr) ::protocol::game::cmsg_social_delete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_social_delete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_social_delete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_social_delete}, {}};

static void InitDefaultssmsg_social_delete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_social_delete_default_instance_;
    new (ptr) ::protocol::game::smsg_social_delete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_social_delete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_social_delete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_social_delete}, {}};

static void InitDefaultspmsg_social_delete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_pmsg_social_delete_default_instance_;
    new (ptr) ::protocol::game::pmsg_social_delete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::pmsg_social_delete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pmsg_social_delete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspmsg_social_delete}, {}};

static void InitDefaultscmsg_social_apply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_social_apply_default_instance_;
    new (ptr) ::protocol::game::cmsg_social_apply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_social_apply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_social_apply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_social_apply}, {}};

static void InitDefaultssmsg_social_apply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_social_apply_default_instance_;
    new (ptr) ::protocol::game::smsg_social_apply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_social_apply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_social_apply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_social_apply}, {}};

static void InitDefaultsrmsg_social_apply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_rmsg_social_apply_default_instance_;
    new (ptr) ::protocol::game::rmsg_social_apply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::rmsg_social_apply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_rmsg_social_apply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsrmsg_social_apply}, {
      &protobuf_social_2eproto::scc_info_social_t.base,}};

static void InitDefaultsrmsg_social_apply_flag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_rmsg_social_apply_flag_default_instance_;
    new (ptr) ::protocol::game::rmsg_social_apply_flag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::rmsg_social_apply_flag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rmsg_social_apply_flag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrmsg_social_apply_flag}, {}};

static void InitDefaultsrmsg_social_reject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_rmsg_social_reject_default_instance_;
    new (ptr) ::protocol::game::rmsg_social_reject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::rmsg_social_reject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rmsg_social_reject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrmsg_social_reject}, {}};

static void InitDefaultsrmsg_social_add() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_rmsg_social_add_default_instance_;
    new (ptr) ::protocol::game::rmsg_social_add();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::rmsg_social_add::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rmsg_social_add =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrmsg_social_add}, {}};

static void InitDefaultscmsg_social_add() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_social_add_default_instance_;
    new (ptr) ::protocol::game::cmsg_social_add();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_social_add::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_social_add =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_social_add}, {}};

static void InitDefaultssmsg_social_add() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_social_add_default_instance_;
    new (ptr) ::protocol::game::smsg_social_add();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_social_add::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_smsg_social_add =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssmsg_social_add}, {
      &protobuf_social_2eproto::scc_info_social_t.base,}};

static void InitDefaultscmsg_social_black() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_social_black_default_instance_;
    new (ptr) ::protocol::game::cmsg_social_black();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_social_black::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_social_black =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_social_black}, {}};

static void InitDefaultsrmsg_social_black() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_rmsg_social_black_default_instance_;
    new (ptr) ::protocol::game::rmsg_social_black();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::rmsg_social_black::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rmsg_social_black =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrmsg_social_black}, {}};

static void InitDefaultscmsg_social_chat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_social_chat_default_instance_;
    new (ptr) ::protocol::game::cmsg_social_chat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_social_chat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_social_chat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_social_chat}, {}};

static void InitDefaultssmsg_social_chat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_social_chat_default_instance_;
    new (ptr) ::protocol::game::smsg_social_chat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_social_chat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_social_chat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_social_chat}, {}};

static void InitDefaultspmsg_social_chat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_pmsg_social_chat_default_instance_;
    new (ptr) ::protocol::game::pmsg_social_chat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::pmsg_social_chat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pmsg_social_chat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspmsg_social_chat}, {}};

static void InitDefaultscmsg_social_gift() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_social_gift_default_instance_;
    new (ptr) ::protocol::game::cmsg_social_gift();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_social_gift::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_social_gift =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_social_gift}, {}};

static void InitDefaultssmsg_social_gift_receive() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_social_gift_receive_default_instance_;
    new (ptr) ::protocol::game::smsg_social_gift_receive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_social_gift_receive::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_social_gift_receive =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_social_gift_receive}, {}};

static void InitDefaultspmsg_social_gift() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_pmsg_social_gift_default_instance_;
    new (ptr) ::protocol::game::pmsg_social_gift();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::pmsg_social_gift::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pmsg_social_gift =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspmsg_social_gift}, {}};

static void InitDefaultspmsg_social_login() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_pmsg_social_login_default_instance_;
    new (ptr) ::protocol::game::pmsg_social_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::pmsg_social_login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pmsg_social_login =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspmsg_social_login}, {}};

static void InitDefaultscmsg_soical_search() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_cmsg_soical_search_default_instance_;
    new (ptr) ::protocol::game::cmsg_soical_search();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::cmsg_soical_search::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cmsg_soical_search =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscmsg_soical_search}, {}};

static void InitDefaultsreq_social_gold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_req_social_gold_default_instance_;
    new (ptr) ::protocol::game::req_social_gold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::req_social_gold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_req_social_gold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsreq_social_gold}, {}};

static void InitDefaultsrep_social_gold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_rep_social_gold_default_instance_;
    new (ptr) ::protocol::game::rep_social_gold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::rep_social_gold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rep_social_gold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrep_social_gold}, {}};

static void InitDefaultssmsg_social_gold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_smsg_social_gold_default_instance_;
    new (ptr) ::protocol::game::smsg_social_gold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::smsg_social_gold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_smsg_social_gold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssmsg_social_gold}, {}};

static void InitDefaultspush_social_fight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::game::_push_social_fight_default_instance_;
    new (ptr) ::protocol::game::push_social_fight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::game::push_social_fight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_push_social_fight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspush_social_fight}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_social_list_player_load.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_social_data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_social_stat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_req_social_login.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rep_social_login.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_social_look.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_social_look.base);
  ::google::protobuf::internal::InitSCC(&scc_info_req_social_look.base);
  ::google::protobuf::internal::InitSCC(&scc_info_req_social_delete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_social_delete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_social_delete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pmsg_social_delete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_social_apply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_social_apply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rmsg_social_apply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rmsg_social_apply_flag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rmsg_social_reject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rmsg_social_add.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_social_add.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_social_add.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_social_black.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rmsg_social_black.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_social_chat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_social_chat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pmsg_social_chat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_social_gift.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_social_gift_receive.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pmsg_social_gift.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pmsg_social_login.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cmsg_soical_search.base);
  ::google::protobuf::internal::InitSCC(&scc_info_req_social_gold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rep_social_gold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_smsg_social_gold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_push_social_fight.base);
}

::google::protobuf::Metadata file_level_metadata[34];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::social_list_player_load, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::social_list_player_load, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::social_list_player_load, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::social_list_player_load, socials_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_data, friend_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_data, black_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_data, apply_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_data, social_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_data, msg_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_data, reject_),
  ~0u,
  ~0u,
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_stat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_stat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_stat, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_stat, stat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_stat, name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, cup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, toukuang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, name_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, achieve_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, max_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, max_sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_login, max_lsha_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_social_login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_social_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_social_login, socials_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_look, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_look, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_look, type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_look, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_look, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_look, socials_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_look, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_look, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_look, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_look, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_delete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_delete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_delete, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_delete, target_guid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_delete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_delete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_delete, target_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_delete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_delete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_delete, target_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_delete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_delete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_delete, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_delete, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_delete, sf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_delete, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_delete, df_),
  0,
  1,
  3,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_apply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_apply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_apply, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_apply, verify_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_apply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_apply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_apply, num_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_apply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_apply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_apply, social_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_apply, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_apply_flag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_apply_flag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_apply_flag, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_apply_flag, num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_reject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_reject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_reject, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_reject, reject_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_add, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_add, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_add, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_add, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_add, agree_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_add, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_add, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_add, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_add, agree_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_add, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_add, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_add, social_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_black, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_black, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_black, target_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_black, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_black, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_black, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rmsg_social_black, target_guid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_chat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_chat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_chat, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_chat, text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_chat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_chat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_chat, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_chat, text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, toukuang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_chat, name_color_),
  2,
  0,
  3,
  4,
  5,
  6,
  7,
  1,
  9,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_gift, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_gift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_gift, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_social_gift, gold_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_gift_receive, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_gift_receive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_gift_receive, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_gift_receive, gold_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_gift, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_gift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_gift, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_gift, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_gift, gold_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_login, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_login, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_login, friend_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::pmsg_social_login, sflags_),
  1,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_soical_search, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_soical_search, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::cmsg_soical_search, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_gold, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_gold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::req_social_gold, player_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_social_gold, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_social_gold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_social_gold, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::rep_social_gold, gold_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_gold, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_gold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::smsg_social_gold, gold_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_social_fight, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_social_fight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_social_fight, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::game::push_social_fight, fight_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::protocol::game::social_list_player_load)},
  { 9, 20, sizeof(::protocol::game::smsg_social_data)},
  { 26, 34, sizeof(::protocol::game::smsg_social_stat)},
  { 37, 54, sizeof(::protocol::game::req_social_login)},
  { 66, 72, sizeof(::protocol::game::rep_social_login)},
  { 73, 79, sizeof(::protocol::game::cmsg_social_look)},
  { 80, 86, sizeof(::protocol::game::smsg_social_look)},
  { 87, 94, sizeof(::protocol::game::req_social_look)},
  { 96, 103, sizeof(::protocol::game::req_social_delete)},
  { 105, 111, sizeof(::protocol::game::cmsg_social_delete)},
  { 112, 118, sizeof(::protocol::game::smsg_social_delete)},
  { 119, 129, sizeof(::protocol::game::pmsg_social_delete)},
  { 134, 141, sizeof(::protocol::game::cmsg_social_apply)},
  { 143, 149, sizeof(::protocol::game::smsg_social_apply)},
  { 150, 157, sizeof(::protocol::game::rmsg_social_apply)},
  { 159, 166, sizeof(::protocol::game::rmsg_social_apply_flag)},
  { 168, 175, sizeof(::protocol::game::rmsg_social_reject)},
  { 177, 185, sizeof(::protocol::game::rmsg_social_add)},
  { 188, 195, sizeof(::protocol::game::cmsg_social_add)},
  { 197, 203, sizeof(::protocol::game::smsg_social_add)},
  { 204, 210, sizeof(::protocol::game::cmsg_social_black)},
  { 211, 218, sizeof(::protocol::game::rmsg_social_black)},
  { 220, 227, sizeof(::protocol::game::cmsg_social_chat)},
  { 229, 236, sizeof(::protocol::game::smsg_social_chat)},
  { 238, 253, sizeof(::protocol::game::pmsg_social_chat)},
  { 263, 270, sizeof(::protocol::game::cmsg_social_gift)},
  { 272, 279, sizeof(::protocol::game::smsg_social_gift_receive)},
  { 281, 289, sizeof(::protocol::game::pmsg_social_gift)},
  { 292, 301, sizeof(::protocol::game::pmsg_social_login)},
  { 305, 311, sizeof(::protocol::game::cmsg_soical_search)},
  { 312, 318, sizeof(::protocol::game::req_social_gold)},
  { 319, 326, sizeof(::protocol::game::rep_social_gold)},
  { 328, 334, sizeof(::protocol::game::smsg_social_gold)},
  { 335, 342, sizeof(::protocol::game::push_social_fight)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_social_list_player_load_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_social_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_social_stat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_req_social_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_rep_social_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_social_look_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_social_look_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_req_social_look_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_req_social_delete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_social_delete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_social_delete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_pmsg_social_delete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_social_apply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_social_apply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_rmsg_social_apply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_rmsg_social_apply_flag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_rmsg_social_reject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_rmsg_social_add_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_social_add_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_social_add_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_social_black_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_rmsg_social_black_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_social_chat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_social_chat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_pmsg_social_chat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_social_gift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_social_gift_receive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_pmsg_social_gift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_pmsg_social_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_cmsg_soical_search_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_req_social_gold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_rep_social_gold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_smsg_social_gold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::game::_push_social_fight_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msg_social.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 34);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020msg_social.proto\022\rprotocol.game\032\014socia"
      "l.proto\"N\n\027social_list_player_load\022\023\n\013pl"
      "ayer_guid\030\001 \002(\004\022\036\n\007socials\030\002 \003(\0132\r.dhc.s"
      "ocial_t\"\206\001\n\020smsg_social_data\022\024\n\014friend_g"
      "uids\030\001 \003(\004\022\023\n\013black_guids\030\002 \003(\004\022\021\n\tapply"
      "_num\030\003 \001(\005\022\023\n\013social_gold\030\004 \001(\010\022\017\n\007msg_n"
      "um\030\005 \001(\005\022\016\n\006reject\030\006 \001(\010\"C\n\020smsg_social_"
      "stat\022\023\n\013target_guid\030\001 \001(\004\022\014\n\004stat\030\002 \001(\005\022"
      "\014\n\004name\030\003 \001(\t\"\347\001\n\020req_social_login\022\023\n\013pl"
      "ayer_guid\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\013\n\003cup\030\003 \001"
      "(\005\022\016\n\006avatar\030\004 \001(\005\022\020\n\010toukuang\030\006 \001(\005\022\021\n\t"
      "region_id\030\007 \001(\005\022\r\n\005level\030\010 \001(\005\022\022\n\nname_c"
      "olor\030\t \001(\005\022\025\n\rachieve_point\030\013 \001(\005\022\021\n\tmax"
      "_score\030\014 \001(\005\022\017\n\007max_sha\030\r \001(\005\022\020\n\010max_lsh"
      "a\030\016 \001(\005\"2\n\020rep_social_login\022\036\n\007socials\030\001"
      " \003(\0132\r.dhc.social_t\" \n\020cmsg_social_look\022"
      "\014\n\004type\030\001 \001(\005\"2\n\020smsg_social_look\022\036\n\007soc"
      "ials\030\001 \003(\0132\r.dhc.social_t\"4\n\017req_social_"
      "look\022\023\n\013player_guid\030\001 \001(\004\022\014\n\004type\030\002 \001(\005\""
      "=\n\021req_social_delete\022\023\n\013player_guid\030\001 \001("
      "\004\022\023\n\013target_guid\030\002 \001(\004\")\n\022cmsg_social_de"
      "lete\022\023\n\013target_guid\030\001 \001(\004\")\n\022smsg_social"
      "_delete\022\023\n\013target_guid\030\001 \001(\004\"d\n\022pmsg_soc"
      "ial_delete\022\023\n\013player_guid\030\001 \001(\004\022\023\n\013targe"
      "t_guid\030\002 \001(\004\022\n\n\002sf\030\003 \001(\010\022\014\n\004gold\030\004 \001(\005\022\n"
      "\n\002df\030\005 \001(\010\"8\n\021cmsg_social_apply\022\023\n\013targe"
      "t_guid\030\001 \001(\004\022\016\n\006verify\030\002 \001(\t\" \n\021smsg_soc"
      "ial_apply\022\013\n\003num\030\001 \001(\005\"@\n\021rmsg_social_ap"
      "ply\022\035\n\006social\030\001 \001(\0132\r.dhc.social_t\022\014\n\004ty"
      "pe\030\002 \001(\005\":\n\026rmsg_social_apply_flag\022\023\n\013pl"
      "ayer_guid\030\001 \001(\004\022\013\n\003num\030\002 \001(\005\"9\n\022rmsg_soc"
      "ial_reject\022\023\n\013player_guid\030\001 \001(\004\022\016\n\006rejec"
      "t\030\002 \001(\010\"J\n\017rmsg_social_add\022\023\n\013player_gui"
      "d\030\001 \001(\004\022\023\n\013target_guid\030\002 \001(\004\022\r\n\005agree\030\003 "
      "\001(\010\"5\n\017cmsg_social_add\022\023\n\013target_guid\030\001 "
      "\001(\004\022\r\n\005agree\030\002 \001(\010\"0\n\017smsg_social_add\022\035\n"
      "\006social\030\001 \001(\0132\r.dhc.social_t\"(\n\021cmsg_soc"
      "ial_black\022\023\n\013target_guid\030\001 \001(\004\"=\n\021rmsg_s"
      "ocial_black\022\023\n\013player_guid\030\001 \001(\004\022\023\n\013targ"
      "et_guid\030\002 \001(\004\"5\n\020cmsg_social_chat\022\023\n\013tar"
      "get_guid\030\001 \001(\004\022\014\n\004text\030\002 \001(\t\"5\n\020smsg_soc"
      "ial_chat\022\023\n\013target_guid\030\001 \001(\004\022\014\n\004text\030\002 "
      "\001(\t\"\266\001\n\020pmsg_social_chat\022\014\n\004guid\030\001 \001(\004\022\014"
      "\n\004name\030\002 \001(\t\022\013\n\003sex\030\003 \001(\005\022\r\n\005level\030\004 \001(\005"
      "\022\016\n\006avatar\030\005 \001(\005\022\020\n\010toukuang\030\007 \001(\005\022\021\n\tre"
      "gion_id\030\010 \001(\005\022\014\n\004text\030\t \001(\t\022\023\n\013player_gu"
      "id\030\n \001(\004\022\022\n\nname_color\030\013 \001(\005\"5\n\020cmsg_soc"
      "ial_gift\022\023\n\013target_guid\030\001 \001(\004\022\014\n\004gold\030\002 "
      "\001(\005\"=\n\030smsg_social_gift_receive\022\023\n\013targe"
      "t_guid\030\001 \001(\004\022\014\n\004gold\030\002 \001(\005\"J\n\020pmsg_socia"
      "l_gift\022\023\n\013player_guid\030\001 \001(\004\022\023\n\013target_gu"
      "id\030\002 \001(\004\022\014\n\004gold\030\003 \001(\005\"\\\n\021pmsg_social_lo"
      "gin\022\023\n\013player_guid\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\024"
      "\n\014friend_guids\030\004 \003(\004\022\016\n\006sflags\030\005 \003(\005\"\"\n\022"
      "cmsg_soical_search\022\014\n\004name\030\001 \001(\t\"&\n\017req_"
      "social_gold\022\023\n\013player_guid\030\001 \001(\004\"4\n\017rep_"
      "social_gold\022\023\n\013player_guid\030\001 \001(\004\022\014\n\004gold"
      "\030\002 \001(\005\" \n\020smsg_social_gold\022\014\n\004gold\030\001 \001(\005"
      "\"7\n\021push_social_fight\022\023\n\013player_guid\030\001 \001"
      "(\004\022\r\n\005fight\030\002 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2377);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_social.proto", &protobuf_RegisterTypes);
  ::protobuf_social_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_5fsocial_2eproto
namespace protocol {
namespace game {

// ===================================================================

void social_list_player_load::InitAsDefaultInstance() {
}
void social_list_player_load::clear_socials() {
  socials_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int social_list_player_load::kPlayerGuidFieldNumber;
const int social_list_player_load::kSocialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

social_list_player_load::social_list_player_load()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_social_list_player_load.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.social_list_player_load)
}
social_list_player_load::social_list_player_load(const social_list_player_load& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      socials_(from.socials_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_guid_ = from.player_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.social_list_player_load)
}

void social_list_player_load::SharedCtor() {
  player_guid_ = GOOGLE_ULONGLONG(0);
}

social_list_player_load::~social_list_player_load() {
  // @@protoc_insertion_point(destructor:protocol.game.social_list_player_load)
  SharedDtor();
}

void social_list_player_load::SharedDtor() {
}

void social_list_player_load::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* social_list_player_load::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const social_list_player_load& social_list_player_load::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_social_list_player_load.base);
  return *internal_default_instance();
}


void social_list_player_load::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.social_list_player_load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  socials_.Clear();
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool social_list_player_load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.social_list_player_load)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dhc.social_t socials = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_socials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.social_list_player_load)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.social_list_player_load)
  return false;
#undef DO_
}

void social_list_player_load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.social_list_player_load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // repeated .dhc.social_t socials = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->socials(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.social_list_player_load)
}

::google::protobuf::uint8* social_list_player_load::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.social_list_player_load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // repeated .dhc.social_t socials = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->socials(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.social_list_player_load)
  return target;
}

size_t social_list_player_load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.social_list_player_load)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 player_guid = 1;
  if (has_player_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }
  // repeated .dhc.social_t socials = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->socials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->socials(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void social_list_player_load::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.social_list_player_load)
  GOOGLE_DCHECK_NE(&from, this);
  const social_list_player_load* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const social_list_player_load>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.social_list_player_load)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.social_list_player_load)
    MergeFrom(*source);
  }
}

void social_list_player_load::MergeFrom(const social_list_player_load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.social_list_player_load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  socials_.MergeFrom(from.socials_);
  if (from.has_player_guid()) {
    set_player_guid(from.player_guid());
  }
}

void social_list_player_load::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.social_list_player_load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void social_list_player_load::CopyFrom(const social_list_player_load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.social_list_player_load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool social_list_player_load::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void social_list_player_load::Swap(social_list_player_load* other) {
  if (other == this) return;
  InternalSwap(other);
}
void social_list_player_load::InternalSwap(social_list_player_load* other) {
  using std::swap;
  CastToBase(&socials_)->InternalSwap(CastToBase(&other->socials_));
  swap(player_guid_, other->player_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata social_list_player_load::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_social_data::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_social_data::kFriendGuidsFieldNumber;
const int smsg_social_data::kBlackGuidsFieldNumber;
const int smsg_social_data::kApplyNumFieldNumber;
const int smsg_social_data::kSocialGoldFieldNumber;
const int smsg_social_data::kMsgNumFieldNumber;
const int smsg_social_data::kRejectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_social_data::smsg_social_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_social_data)
}
smsg_social_data::smsg_social_data(const smsg_social_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      friend_guids_(from.friend_guids_),
      black_guids_(from.black_guids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apply_num_, &from.apply_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&reject_) -
    reinterpret_cast<char*>(&apply_num_)) + sizeof(reject_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_social_data)
}

void smsg_social_data::SharedCtor() {
  ::memset(&apply_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reject_) -
      reinterpret_cast<char*>(&apply_num_)) + sizeof(reject_));
}

smsg_social_data::~smsg_social_data() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_social_data)
  SharedDtor();
}

void smsg_social_data::SharedDtor() {
}

void smsg_social_data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_social_data::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_social_data& smsg_social_data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_data.base);
  return *internal_default_instance();
}


void smsg_social_data::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_social_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  friend_guids_.Clear();
  set_changed();
  black_guids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&apply_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reject_) -
        reinterpret_cast<char*>(&apply_num_)) + sizeof(reject_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_social_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_social_data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 friend_guids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_friend_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_friend_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 black_guids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_black_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_black_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 apply_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_apply_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apply_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool social_gold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_social_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &social_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 msg_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_msg_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reject = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_reject();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_social_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_social_data)
  return false;
#undef DO_
}

void smsg_social_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_social_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 friend_guids = 1;
  for (int i = 0, n = this->friend_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->friend_guids(i), output);
  }

  // repeated uint64 black_guids = 2;
  for (int i = 0, n = this->black_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->black_guids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 apply_num = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->apply_num(), output);
  }

  // optional bool social_gold = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->social_gold(), output);
  }

  // optional int32 msg_num = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->msg_num(), output);
  }

  // optional bool reject = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->reject(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_social_data)
}

::google::protobuf::uint8* smsg_social_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_social_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 friend_guids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->friend_guids_, target);

  // repeated uint64 black_guids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->black_guids_, target);

  cached_has_bits = _has_bits_[0];
  // optional int32 apply_num = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->apply_num(), target);
  }

  // optional bool social_gold = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->social_gold(), target);
  }

  // optional int32 msg_num = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->msg_num(), target);
  }

  // optional bool reject = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->reject(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_social_data)
  return target;
}

size_t smsg_social_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_social_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 friend_guids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->friend_guids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->friend_guids_size());
    total_size += data_size;
  }

  // repeated uint64 black_guids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->black_guids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->black_guids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 apply_num = 3;
    if (has_apply_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->apply_num());
    }

    // optional int32 msg_num = 5;
    if (has_msg_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_num());
    }

    // optional bool social_gold = 4;
    if (has_social_gold()) {
      total_size += 1 + 1;
    }

    // optional bool reject = 6;
    if (has_reject()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_social_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_social_data)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_social_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_social_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_social_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_social_data)
    MergeFrom(*source);
  }
}

void smsg_social_data::MergeFrom(const smsg_social_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_social_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_guids_.MergeFrom(from.friend_guids_);
  black_guids_.MergeFrom(from.black_guids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      apply_num_ = from.apply_num_;
    }
    if (cached_has_bits & 0x00000002u) {
      msg_num_ = from.msg_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      social_gold_ = from.social_gold_;
    }
    if (cached_has_bits & 0x00000008u) {
      reject_ = from.reject_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_social_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_social_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_social_data::CopyFrom(const smsg_social_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_social_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_social_data::IsInitialized() const {
  return true;
}

void smsg_social_data::Swap(smsg_social_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_social_data::InternalSwap(smsg_social_data* other) {
  using std::swap;
  friend_guids_.InternalSwap(&other->friend_guids_);
  black_guids_.InternalSwap(&other->black_guids_);
  swap(apply_num_, other->apply_num_);
  swap(msg_num_, other->msg_num_);
  swap(social_gold_, other->social_gold_);
  swap(reject_, other->reject_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_social_data::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_social_stat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_social_stat::kTargetGuidFieldNumber;
const int smsg_social_stat::kStatFieldNumber;
const int smsg_social_stat::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_social_stat::smsg_social_stat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_stat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_social_stat)
}
smsg_social_stat::smsg_social_stat(const smsg_social_stat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&target_guid_, &from.target_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_) -
    reinterpret_cast<char*>(&target_guid_)) + sizeof(stat_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_social_stat)
}

void smsg_social_stat::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_) -
      reinterpret_cast<char*>(&target_guid_)) + sizeof(stat_));
}

smsg_social_stat::~smsg_social_stat() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_social_stat)
  SharedDtor();
}

void smsg_social_stat::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void smsg_social_stat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_social_stat::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_social_stat& smsg_social_stat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_stat.base);
  return *internal_default_instance();
}


void smsg_social_stat::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_social_stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&target_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stat_) -
        reinterpret_cast<char*>(&target_guid_)) + sizeof(stat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_social_stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_social_stat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.smsg_social_stat.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_social_stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_social_stat)
  return false;
#undef DO_
}

void smsg_social_stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_social_stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  // optional int32 stat = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stat(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_social_stat.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_social_stat)
}

::google::protobuf::uint8* smsg_social_stat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_social_stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  // optional int32 stat = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stat(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_social_stat.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_social_stat)
  return target;
}

size_t smsg_social_stat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_social_stat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 target_guid = 1;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

    // optional int32 stat = 2;
    if (has_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stat());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_social_stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_social_stat)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_social_stat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_social_stat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_social_stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_social_stat)
    MergeFrom(*source);
  }
}

void smsg_social_stat::MergeFrom(const smsg_social_stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_social_stat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      target_guid_ = from.target_guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      stat_ = from.stat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_social_stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_social_stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_social_stat::CopyFrom(const smsg_social_stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_social_stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_social_stat::IsInitialized() const {
  return true;
}

void smsg_social_stat::Swap(smsg_social_stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_social_stat::InternalSwap(smsg_social_stat* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_guid_, other->target_guid_);
  swap(stat_, other->stat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_social_stat::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void req_social_login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_social_login::kPlayerGuidFieldNumber;
const int req_social_login::kNameFieldNumber;
const int req_social_login::kCupFieldNumber;
const int req_social_login::kAvatarFieldNumber;
const int req_social_login::kToukuangFieldNumber;
const int req_social_login::kRegionIdFieldNumber;
const int req_social_login::kLevelFieldNumber;
const int req_social_login::kNameColorFieldNumber;
const int req_social_login::kAchievePointFieldNumber;
const int req_social_login::kMaxScoreFieldNumber;
const int req_social_login::kMaxShaFieldNumber;
const int req_social_login::kMaxLshaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_social_login::req_social_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_req_social_login.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.req_social_login)
}
req_social_login::req_social_login(const req_social_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_lsha_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(max_lsha_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.req_social_login)
}

void req_social_login::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_lsha_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(max_lsha_));
}

req_social_login::~req_social_login() {
  // @@protoc_insertion_point(destructor:protocol.game.req_social_login)
  SharedDtor();
}

void req_social_login::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_social_login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* req_social_login::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_social_login& req_social_login::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_req_social_login.base);
  return *internal_default_instance();
}


void req_social_login::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.req_social_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&name_color_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(name_color_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&achieve_point_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_lsha_) -
        reinterpret_cast<char*>(&achieve_point_)) + sizeof(max_lsha_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool req_social_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.req_social_login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.req_social_login.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cup = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 avatar = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_avatar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 toukuang = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_toukuang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toukuang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 region_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 name_color = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_name_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 achieve_point = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_achieve_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_score = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_max_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_sha = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_max_sha();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_sha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_lsha = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_max_lsha();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_lsha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.req_social_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.req_social_login)
  return false;
#undef DO_
}

void req_social_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.req_social_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.req_social_login.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 cup = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cup(), output);
  }

  // optional int32 avatar = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->avatar(), output);
  }

  // optional int32 toukuang = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->toukuang(), output);
  }

  // optional int32 region_id = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->region_id(), output);
  }

  // optional int32 level = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->level(), output);
  }

  // optional int32 name_color = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->name_color(), output);
  }

  // optional int32 achieve_point = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->achieve_point(), output);
  }

  // optional int32 max_score = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->max_score(), output);
  }

  // optional int32 max_sha = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->max_sha(), output);
  }

  // optional int32 max_lsha = 14;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->max_lsha(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.req_social_login)
}

::google::protobuf::uint8* req_social_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.req_social_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.req_social_login.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 cup = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cup(), target);
  }

  // optional int32 avatar = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->avatar(), target);
  }

  // optional int32 toukuang = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->toukuang(), target);
  }

  // optional int32 region_id = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->region_id(), target);
  }

  // optional int32 level = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->level(), target);
  }

  // optional int32 name_color = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->name_color(), target);
  }

  // optional int32 achieve_point = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->achieve_point(), target);
  }

  // optional int32 max_score = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->max_score(), target);
  }

  // optional int32 max_sha = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->max_sha(), target);
  }

  // optional int32 max_lsha = 14;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->max_lsha(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.req_social_login)
  return target;
}

size_t req_social_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.req_social_login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional int32 cup = 3;
    if (has_cup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cup());
    }

    // optional int32 avatar = 4;
    if (has_avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->avatar());
    }

    // optional int32 toukuang = 6;
    if (has_toukuang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toukuang());
    }

    // optional int32 region_id = 7;
    if (has_region_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->region_id());
    }

    // optional int32 level = 8;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 name_color = 9;
    if (has_name_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->name_color());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional int32 achieve_point = 11;
    if (has_achieve_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achieve_point());
    }

    // optional int32 max_score = 12;
    if (has_max_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_score());
    }

    // optional int32 max_sha = 13;
    if (has_max_sha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_sha());
    }

    // optional int32 max_lsha = 14;
    if (has_max_lsha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_lsha());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void req_social_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.req_social_login)
  GOOGLE_DCHECK_NE(&from, this);
  const req_social_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_social_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.req_social_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.req_social_login)
    MergeFrom(*source);
  }
}

void req_social_login::MergeFrom(const req_social_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.req_social_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      cup_ = from.cup_;
    }
    if (cached_has_bits & 0x00000008u) {
      avatar_ = from.avatar_;
    }
    if (cached_has_bits & 0x00000010u) {
      toukuang_ = from.toukuang_;
    }
    if (cached_has_bits & 0x00000020u) {
      region_id_ = from.region_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000080u) {
      name_color_ = from.name_color_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      achieve_point_ = from.achieve_point_;
    }
    if (cached_has_bits & 0x00000200u) {
      max_score_ = from.max_score_;
    }
    if (cached_has_bits & 0x00000400u) {
      max_sha_ = from.max_sha_;
    }
    if (cached_has_bits & 0x00000800u) {
      max_lsha_ = from.max_lsha_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void req_social_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.req_social_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_social_login::CopyFrom(const req_social_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.req_social_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_social_login::IsInitialized() const {
  return true;
}

void req_social_login::Swap(req_social_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_social_login::InternalSwap(req_social_login* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_guid_, other->player_guid_);
  swap(cup_, other->cup_);
  swap(avatar_, other->avatar_);
  swap(toukuang_, other->toukuang_);
  swap(region_id_, other->region_id_);
  swap(level_, other->level_);
  swap(name_color_, other->name_color_);
  swap(achieve_point_, other->achieve_point_);
  swap(max_score_, other->max_score_);
  swap(max_sha_, other->max_sha_);
  swap(max_lsha_, other->max_lsha_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata req_social_login::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rep_social_login::InitAsDefaultInstance() {
}
void rep_social_login::clear_socials() {
  socials_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rep_social_login::kSocialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rep_social_login::rep_social_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_rep_social_login.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.rep_social_login)
}
rep_social_login::rep_social_login(const rep_social_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      socials_(from.socials_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.rep_social_login)
}

void rep_social_login::SharedCtor() {
}

rep_social_login::~rep_social_login() {
  // @@protoc_insertion_point(destructor:protocol.game.rep_social_login)
  SharedDtor();
}

void rep_social_login::SharedDtor() {
}

void rep_social_login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rep_social_login::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rep_social_login& rep_social_login::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_rep_social_login.base);
  return *internal_default_instance();
}


void rep_social_login::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.rep_social_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  socials_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rep_social_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.rep_social_login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.social_t socials = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_socials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.rep_social_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.rep_social_login)
  return false;
#undef DO_
}

void rep_social_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.rep_social_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.social_t socials = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->socials(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.rep_social_login)
}

::google::protobuf::uint8* rep_social_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.rep_social_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.social_t socials = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->socials(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.rep_social_login)
  return target;
}

size_t rep_social_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.rep_social_login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.social_t socials = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->socials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->socials(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rep_social_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.rep_social_login)
  GOOGLE_DCHECK_NE(&from, this);
  const rep_social_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rep_social_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.rep_social_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.rep_social_login)
    MergeFrom(*source);
  }
}

void rep_social_login::MergeFrom(const rep_social_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.rep_social_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  socials_.MergeFrom(from.socials_);
}

void rep_social_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.rep_social_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rep_social_login::CopyFrom(const rep_social_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.rep_social_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rep_social_login::IsInitialized() const {
  return true;
}

void rep_social_login::Swap(rep_social_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rep_social_login::InternalSwap(rep_social_login* other) {
  using std::swap;
  CastToBase(&socials_)->InternalSwap(CastToBase(&other->socials_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rep_social_login::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_social_look::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_social_look::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_social_look::cmsg_social_look()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_look.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_social_look)
}
cmsg_social_look::cmsg_social_look(const cmsg_social_look& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_social_look)
}

void cmsg_social_look::SharedCtor() {
  type_ = 0;
}

cmsg_social_look::~cmsg_social_look() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_social_look)
  SharedDtor();
}

void cmsg_social_look::SharedDtor() {
}

void cmsg_social_look::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_social_look::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_social_look& cmsg_social_look::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_look.base);
  return *internal_default_instance();
}


void cmsg_social_look::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_social_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_social_look::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_social_look)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_social_look)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_social_look)
  return false;
#undef DO_
}

void cmsg_social_look::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_social_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_social_look)
}

::google::protobuf::uint8* cmsg_social_look::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_social_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_social_look)
  return target;
}

size_t cmsg_social_look::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_social_look)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_social_look::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_social_look)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_social_look* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_social_look>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_social_look)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_social_look)
    MergeFrom(*source);
  }
}

void cmsg_social_look::MergeFrom(const cmsg_social_look& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_social_look)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
}

void cmsg_social_look::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_social_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_social_look::CopyFrom(const cmsg_social_look& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_social_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_social_look::IsInitialized() const {
  return true;
}

void cmsg_social_look::Swap(cmsg_social_look* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_social_look::InternalSwap(cmsg_social_look* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_social_look::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_social_look::InitAsDefaultInstance() {
}
void smsg_social_look::clear_socials() {
  socials_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_social_look::kSocialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_social_look::smsg_social_look()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_look.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_social_look)
}
smsg_social_look::smsg_social_look(const smsg_social_look& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      socials_(from.socials_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_social_look)
}

void smsg_social_look::SharedCtor() {
}

smsg_social_look::~smsg_social_look() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_social_look)
  SharedDtor();
}

void smsg_social_look::SharedDtor() {
}

void smsg_social_look::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_social_look::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_social_look& smsg_social_look::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_look.base);
  return *internal_default_instance();
}


void smsg_social_look::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_social_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  socials_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_social_look::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_social_look)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dhc.social_t socials = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_socials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_social_look)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_social_look)
  return false;
#undef DO_
}

void smsg_social_look::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_social_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.social_t socials = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->socials(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_social_look)
}

::google::protobuf::uint8* smsg_social_look::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_social_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dhc.social_t socials = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->socials(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_social_look)
  return target;
}

size_t smsg_social_look::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_social_look)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dhc.social_t socials = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->socials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->socials(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_social_look::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_social_look)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_social_look* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_social_look>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_social_look)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_social_look)
    MergeFrom(*source);
  }
}

void smsg_social_look::MergeFrom(const smsg_social_look& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_social_look)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  socials_.MergeFrom(from.socials_);
}

void smsg_social_look::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_social_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_social_look::CopyFrom(const smsg_social_look& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_social_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_social_look::IsInitialized() const {
  return true;
}

void smsg_social_look::Swap(smsg_social_look* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_social_look::InternalSwap(smsg_social_look* other) {
  using std::swap;
  CastToBase(&socials_)->InternalSwap(CastToBase(&other->socials_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_social_look::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void req_social_look::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_social_look::kPlayerGuidFieldNumber;
const int req_social_look::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_social_look::req_social_look()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_req_social_look.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.req_social_look)
}
req_social_look::req_social_look(const req_social_look& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.req_social_look)
}

void req_social_look::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(type_));
}

req_social_look::~req_social_look() {
  // @@protoc_insertion_point(destructor:protocol.game.req_social_look)
  SharedDtor();
}

void req_social_look::SharedDtor() {
}

void req_social_look::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* req_social_look::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_social_look& req_social_look::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_req_social_look.base);
  return *internal_default_instance();
}


void req_social_look::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.req_social_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool req_social_look::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.req_social_look)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.req_social_look)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.req_social_look)
  return false;
#undef DO_
}

void req_social_look::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.req_social_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.req_social_look)
}

::google::protobuf::uint8* req_social_look::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.req_social_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.req_social_look)
  return target;
}

size_t req_social_look::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.req_social_look)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void req_social_look::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.req_social_look)
  GOOGLE_DCHECK_NE(&from, this);
  const req_social_look* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_social_look>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.req_social_look)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.req_social_look)
    MergeFrom(*source);
  }
}

void req_social_look::MergeFrom(const req_social_look& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.req_social_look)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void req_social_look::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.req_social_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_social_look::CopyFrom(const req_social_look& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.req_social_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_social_look::IsInitialized() const {
  return true;
}

void req_social_look::Swap(req_social_look* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_social_look::InternalSwap(req_social_look* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata req_social_look::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void req_social_delete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_social_delete::kPlayerGuidFieldNumber;
const int req_social_delete::kTargetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_social_delete::req_social_delete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_req_social_delete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.req_social_delete)
}
req_social_delete::req_social_delete(const req_social_delete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_guid_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(target_guid_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.req_social_delete)
}

void req_social_delete::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_guid_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(target_guid_));
}

req_social_delete::~req_social_delete() {
  // @@protoc_insertion_point(destructor:protocol.game.req_social_delete)
  SharedDtor();
}

void req_social_delete::SharedDtor() {
}

void req_social_delete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* req_social_delete::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_social_delete& req_social_delete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_req_social_delete.base);
  return *internal_default_instance();
}


void req_social_delete::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.req_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_guid_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(target_guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool req_social_delete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.req_social_delete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 target_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.req_social_delete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.req_social_delete)
  return false;
#undef DO_
}

void req_social_delete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.req_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->target_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.req_social_delete)
}

::google::protobuf::uint8* req_social_delete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.req_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->target_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.req_social_delete)
  return target;
}

size_t req_social_delete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.req_social_delete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional uint64 target_guid = 2;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void req_social_delete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.req_social_delete)
  GOOGLE_DCHECK_NE(&from, this);
  const req_social_delete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_social_delete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.req_social_delete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.req_social_delete)
    MergeFrom(*source);
  }
}

void req_social_delete::MergeFrom(const req_social_delete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.req_social_delete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_guid_ = from.target_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void req_social_delete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.req_social_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_social_delete::CopyFrom(const req_social_delete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.req_social_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_social_delete::IsInitialized() const {
  return true;
}

void req_social_delete::Swap(req_social_delete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_social_delete::InternalSwap(req_social_delete* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(target_guid_, other->target_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata req_social_delete::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_social_delete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_social_delete::kTargetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_social_delete::cmsg_social_delete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_delete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_social_delete)
}
cmsg_social_delete::cmsg_social_delete(const cmsg_social_delete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_guid_ = from.target_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_social_delete)
}

void cmsg_social_delete::SharedCtor() {
  target_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_social_delete::~cmsg_social_delete() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_social_delete)
  SharedDtor();
}

void cmsg_social_delete::SharedDtor() {
}

void cmsg_social_delete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_social_delete::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_social_delete& cmsg_social_delete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_delete.base);
  return *internal_default_instance();
}


void cmsg_social_delete::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_social_delete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_social_delete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_social_delete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_social_delete)
  return false;
#undef DO_
}

void cmsg_social_delete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_social_delete)
}

::google::protobuf::uint8* cmsg_social_delete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_social_delete)
  return target;
}

size_t cmsg_social_delete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_social_delete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 target_guid = 1;
  if (has_target_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_social_delete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_social_delete)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_social_delete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_social_delete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_social_delete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_social_delete)
    MergeFrom(*source);
  }
}

void cmsg_social_delete::MergeFrom(const cmsg_social_delete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_social_delete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_guid()) {
    set_target_guid(from.target_guid());
  }
}

void cmsg_social_delete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_social_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_social_delete::CopyFrom(const cmsg_social_delete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_social_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_social_delete::IsInitialized() const {
  return true;
}

void cmsg_social_delete::Swap(cmsg_social_delete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_social_delete::InternalSwap(cmsg_social_delete* other) {
  using std::swap;
  swap(target_guid_, other->target_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_social_delete::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_social_delete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_social_delete::kTargetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_social_delete::smsg_social_delete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_delete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_social_delete)
}
smsg_social_delete::smsg_social_delete(const smsg_social_delete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_guid_ = from.target_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_social_delete)
}

void smsg_social_delete::SharedCtor() {
  target_guid_ = GOOGLE_ULONGLONG(0);
}

smsg_social_delete::~smsg_social_delete() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_social_delete)
  SharedDtor();
}

void smsg_social_delete::SharedDtor() {
}

void smsg_social_delete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_social_delete::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_social_delete& smsg_social_delete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_delete.base);
  return *internal_default_instance();
}


void smsg_social_delete::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_social_delete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_social_delete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_social_delete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_social_delete)
  return false;
#undef DO_
}

void smsg_social_delete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_social_delete)
}

::google::protobuf::uint8* smsg_social_delete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_social_delete)
  return target;
}

size_t smsg_social_delete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_social_delete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 target_guid = 1;
  if (has_target_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_social_delete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_social_delete)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_social_delete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_social_delete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_social_delete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_social_delete)
    MergeFrom(*source);
  }
}

void smsg_social_delete::MergeFrom(const smsg_social_delete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_social_delete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_guid()) {
    set_target_guid(from.target_guid());
  }
}

void smsg_social_delete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_social_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_social_delete::CopyFrom(const smsg_social_delete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_social_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_social_delete::IsInitialized() const {
  return true;
}

void smsg_social_delete::Swap(smsg_social_delete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_social_delete::InternalSwap(smsg_social_delete* other) {
  using std::swap;
  swap(target_guid_, other->target_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_social_delete::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pmsg_social_delete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pmsg_social_delete::kPlayerGuidFieldNumber;
const int pmsg_social_delete::kTargetGuidFieldNumber;
const int pmsg_social_delete::kSfFieldNumber;
const int pmsg_social_delete::kGoldFieldNumber;
const int pmsg_social_delete::kDfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pmsg_social_delete::pmsg_social_delete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_pmsg_social_delete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.pmsg_social_delete)
}
pmsg_social_delete::pmsg_social_delete(const pmsg_social_delete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&df_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(df_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.pmsg_social_delete)
}

void pmsg_social_delete::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&df_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(df_));
}

pmsg_social_delete::~pmsg_social_delete() {
  // @@protoc_insertion_point(destructor:protocol.game.pmsg_social_delete)
  SharedDtor();
}

void pmsg_social_delete::SharedDtor() {
}

void pmsg_social_delete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pmsg_social_delete::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pmsg_social_delete& pmsg_social_delete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_pmsg_social_delete.base);
  return *internal_default_instance();
}


void pmsg_social_delete::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.pmsg_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&df_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(df_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool pmsg_social_delete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.pmsg_social_delete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 target_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sf();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool df = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_df();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &df_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.pmsg_social_delete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.pmsg_social_delete)
  return false;
#undef DO_
}

void pmsg_social_delete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.pmsg_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->target_guid(), output);
  }

  // optional bool sf = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->sf(), output);
  }

  // optional int32 gold = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->gold(), output);
  }

  // optional bool df = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->df(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.pmsg_social_delete)
}

::google::protobuf::uint8* pmsg_social_delete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.pmsg_social_delete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->target_guid(), target);
  }

  // optional bool sf = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->sf(), target);
  }

  // optional int32 gold = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->gold(), target);
  }

  // optional bool df = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->df(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.pmsg_social_delete)
  return target;
}

size_t pmsg_social_delete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.pmsg_social_delete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional uint64 target_guid = 2;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

    // optional int32 gold = 4;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional bool sf = 3;
    if (has_sf()) {
      total_size += 1 + 1;
    }

    // optional bool df = 5;
    if (has_df()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pmsg_social_delete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.pmsg_social_delete)
  GOOGLE_DCHECK_NE(&from, this);
  const pmsg_social_delete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pmsg_social_delete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.pmsg_social_delete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.pmsg_social_delete)
    MergeFrom(*source);
  }
}

void pmsg_social_delete::MergeFrom(const pmsg_social_delete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.pmsg_social_delete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_guid_ = from.target_guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00000008u) {
      sf_ = from.sf_;
    }
    if (cached_has_bits & 0x00000010u) {
      df_ = from.df_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void pmsg_social_delete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.pmsg_social_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pmsg_social_delete::CopyFrom(const pmsg_social_delete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.pmsg_social_delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pmsg_social_delete::IsInitialized() const {
  return true;
}

void pmsg_social_delete::Swap(pmsg_social_delete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pmsg_social_delete::InternalSwap(pmsg_social_delete* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(target_guid_, other->target_guid_);
  swap(gold_, other->gold_);
  swap(sf_, other->sf_);
  swap(df_, other->df_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pmsg_social_delete::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_social_apply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_social_apply::kTargetGuidFieldNumber;
const int cmsg_social_apply::kVerifyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_social_apply::cmsg_social_apply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_apply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_social_apply)
}
cmsg_social_apply::cmsg_social_apply(const cmsg_social_apply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  verify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verify()) {
    verify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_);
  }
  target_guid_ = from.target_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_social_apply)
}

void cmsg_social_apply::SharedCtor() {
  verify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_social_apply::~cmsg_social_apply() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_social_apply)
  SharedDtor();
}

void cmsg_social_apply::SharedDtor() {
  verify_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_social_apply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_social_apply::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_social_apply& cmsg_social_apply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_apply.base);
  return *internal_default_instance();
}


void cmsg_social_apply::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_social_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    verify_.ClearNonDefaultToEmptyNoArena();
  }
  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_social_apply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_social_apply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string verify = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verify().data(), static_cast<int>(this->verify().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_social_apply.verify");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_social_apply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_social_apply)
  return false;
#undef DO_
}

void cmsg_social_apply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_social_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  // optional string verify = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verify().data(), static_cast<int>(this->verify().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_social_apply.verify");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->verify(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_social_apply)
}

::google::protobuf::uint8* cmsg_social_apply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_social_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  // optional string verify = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verify().data(), static_cast<int>(this->verify().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_social_apply.verify");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->verify(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_social_apply)
  return target;
}

size_t cmsg_social_apply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_social_apply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string verify = 2;
    if (has_verify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verify());
    }

    // optional uint64 target_guid = 1;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_social_apply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_social_apply)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_social_apply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_social_apply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_social_apply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_social_apply)
    MergeFrom(*source);
  }
}

void cmsg_social_apply::MergeFrom(const cmsg_social_apply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_social_apply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_verify();
      verify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_);
    }
    if (cached_has_bits & 0x00000002u) {
      target_guid_ = from.target_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_social_apply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_social_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_social_apply::CopyFrom(const cmsg_social_apply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_social_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_social_apply::IsInitialized() const {
  return true;
}

void cmsg_social_apply::Swap(cmsg_social_apply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_social_apply::InternalSwap(cmsg_social_apply* other) {
  using std::swap;
  verify_.Swap(&other->verify_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_guid_, other->target_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_social_apply::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_social_apply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_social_apply::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_social_apply::smsg_social_apply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_apply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_social_apply)
}
smsg_social_apply::smsg_social_apply(const smsg_social_apply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_social_apply)
}

void smsg_social_apply::SharedCtor() {
  num_ = 0;
}

smsg_social_apply::~smsg_social_apply() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_social_apply)
  SharedDtor();
}

void smsg_social_apply::SharedDtor() {
}

void smsg_social_apply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_social_apply::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_social_apply& smsg_social_apply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_apply.base);
  return *internal_default_instance();
}


void smsg_social_apply::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_social_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  num_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_social_apply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_social_apply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_social_apply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_social_apply)
  return false;
#undef DO_
}

void smsg_social_apply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_social_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_social_apply)
}

::google::protobuf::uint8* smsg_social_apply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_social_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_social_apply)
  return target;
}

size_t smsg_social_apply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_social_apply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 num = 1;
  if (has_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_social_apply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_social_apply)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_social_apply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_social_apply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_social_apply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_social_apply)
    MergeFrom(*source);
  }
}

void smsg_social_apply::MergeFrom(const smsg_social_apply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_social_apply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_num()) {
    set_num(from.num());
  }
}

void smsg_social_apply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_social_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_social_apply::CopyFrom(const smsg_social_apply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_social_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_social_apply::IsInitialized() const {
  return true;
}

void smsg_social_apply::Swap(smsg_social_apply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_social_apply::InternalSwap(smsg_social_apply* other) {
  using std::swap;
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_social_apply::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rmsg_social_apply::InitAsDefaultInstance() {
  ::protocol::game::_rmsg_social_apply_default_instance_._instance.get_mutable()->social_ = const_cast< ::dhc::social_t*>(
      ::dhc::social_t::internal_default_instance());
}
void rmsg_social_apply::clear_social() {
  if (social_ != NULL) social_->Clear();
  clear_has_social();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rmsg_social_apply::kSocialFieldNumber;
const int rmsg_social_apply::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rmsg_social_apply::rmsg_social_apply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_apply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.rmsg_social_apply)
}
rmsg_social_apply::rmsg_social_apply(const rmsg_social_apply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_social()) {
    social_ = new ::dhc::social_t(*from.social_);
  } else {
    social_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.rmsg_social_apply)
}

void rmsg_social_apply::SharedCtor() {
  ::memset(&social_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&social_)) + sizeof(type_));
}

rmsg_social_apply::~rmsg_social_apply() {
  // @@protoc_insertion_point(destructor:protocol.game.rmsg_social_apply)
  SharedDtor();
}

void rmsg_social_apply::SharedDtor() {
  if (this != internal_default_instance()) delete social_;
}

void rmsg_social_apply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rmsg_social_apply::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rmsg_social_apply& rmsg_social_apply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_apply.base);
  return *internal_default_instance();
}


void rmsg_social_apply::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.rmsg_social_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(social_ != NULL);
    social_->Clear();
  }
  set_changed();
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rmsg_social_apply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.rmsg_social_apply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dhc.social_t social = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_social()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.rmsg_social_apply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.rmsg_social_apply)
  return false;
#undef DO_
}

void rmsg_social_apply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.rmsg_social_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .dhc.social_t social = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_social(), output);
  }

  // optional int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.rmsg_social_apply)
}

::google::protobuf::uint8* rmsg_social_apply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.rmsg_social_apply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .dhc.social_t social = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_social(), deterministic, target);
  }

  // optional int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.rmsg_social_apply)
  return target;
}

size_t rmsg_social_apply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.rmsg_social_apply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .dhc.social_t social = 1;
    if (has_social()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *social_);
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rmsg_social_apply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.rmsg_social_apply)
  GOOGLE_DCHECK_NE(&from, this);
  const rmsg_social_apply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rmsg_social_apply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.rmsg_social_apply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.rmsg_social_apply)
    MergeFrom(*source);
  }
}

void rmsg_social_apply::MergeFrom(const rmsg_social_apply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.rmsg_social_apply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_social()->::dhc::social_t::MergeFrom(from.social());
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rmsg_social_apply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.rmsg_social_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rmsg_social_apply::CopyFrom(const rmsg_social_apply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.rmsg_social_apply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rmsg_social_apply::IsInitialized() const {
  return true;
}

void rmsg_social_apply::Swap(rmsg_social_apply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rmsg_social_apply::InternalSwap(rmsg_social_apply* other) {
  using std::swap;
  swap(social_, other->social_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rmsg_social_apply::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rmsg_social_apply_flag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rmsg_social_apply_flag::kPlayerGuidFieldNumber;
const int rmsg_social_apply_flag::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rmsg_social_apply_flag::rmsg_social_apply_flag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_apply_flag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.rmsg_social_apply_flag)
}
rmsg_social_apply_flag::rmsg_social_apply_flag(const rmsg_social_apply_flag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.rmsg_social_apply_flag)
}

void rmsg_social_apply_flag::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(num_));
}

rmsg_social_apply_flag::~rmsg_social_apply_flag() {
  // @@protoc_insertion_point(destructor:protocol.game.rmsg_social_apply_flag)
  SharedDtor();
}

void rmsg_social_apply_flag::SharedDtor() {
}

void rmsg_social_apply_flag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rmsg_social_apply_flag::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rmsg_social_apply_flag& rmsg_social_apply_flag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_apply_flag.base);
  return *internal_default_instance();
}


void rmsg_social_apply_flag::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.rmsg_social_apply_flag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rmsg_social_apply_flag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.rmsg_social_apply_flag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.rmsg_social_apply_flag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.rmsg_social_apply_flag)
  return false;
#undef DO_
}

void rmsg_social_apply_flag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.rmsg_social_apply_flag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.rmsg_social_apply_flag)
}

::google::protobuf::uint8* rmsg_social_apply_flag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.rmsg_social_apply_flag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.rmsg_social_apply_flag)
  return target;
}

size_t rmsg_social_apply_flag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.rmsg_social_apply_flag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rmsg_social_apply_flag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.rmsg_social_apply_flag)
  GOOGLE_DCHECK_NE(&from, this);
  const rmsg_social_apply_flag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rmsg_social_apply_flag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.rmsg_social_apply_flag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.rmsg_social_apply_flag)
    MergeFrom(*source);
  }
}

void rmsg_social_apply_flag::MergeFrom(const rmsg_social_apply_flag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.rmsg_social_apply_flag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rmsg_social_apply_flag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.rmsg_social_apply_flag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rmsg_social_apply_flag::CopyFrom(const rmsg_social_apply_flag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.rmsg_social_apply_flag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rmsg_social_apply_flag::IsInitialized() const {
  return true;
}

void rmsg_social_apply_flag::Swap(rmsg_social_apply_flag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rmsg_social_apply_flag::InternalSwap(rmsg_social_apply_flag* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rmsg_social_apply_flag::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rmsg_social_reject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rmsg_social_reject::kPlayerGuidFieldNumber;
const int rmsg_social_reject::kRejectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rmsg_social_reject::rmsg_social_reject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_reject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.rmsg_social_reject)
}
rmsg_social_reject::rmsg_social_reject(const rmsg_social_reject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reject_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(reject_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.rmsg_social_reject)
}

void rmsg_social_reject::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reject_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(reject_));
}

rmsg_social_reject::~rmsg_social_reject() {
  // @@protoc_insertion_point(destructor:protocol.game.rmsg_social_reject)
  SharedDtor();
}

void rmsg_social_reject::SharedDtor() {
}

void rmsg_social_reject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rmsg_social_reject::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rmsg_social_reject& rmsg_social_reject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_reject.base);
  return *internal_default_instance();
}


void rmsg_social_reject::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.rmsg_social_reject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reject_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(reject_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rmsg_social_reject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.rmsg_social_reject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_reject();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.rmsg_social_reject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.rmsg_social_reject)
  return false;
#undef DO_
}

void rmsg_social_reject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.rmsg_social_reject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional bool reject = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reject(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.rmsg_social_reject)
}

::google::protobuf::uint8* rmsg_social_reject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.rmsg_social_reject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional bool reject = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reject(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.rmsg_social_reject)
  return target;
}

size_t rmsg_social_reject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.rmsg_social_reject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional bool reject = 2;
    if (has_reject()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rmsg_social_reject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.rmsg_social_reject)
  GOOGLE_DCHECK_NE(&from, this);
  const rmsg_social_reject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rmsg_social_reject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.rmsg_social_reject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.rmsg_social_reject)
    MergeFrom(*source);
  }
}

void rmsg_social_reject::MergeFrom(const rmsg_social_reject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.rmsg_social_reject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      reject_ = from.reject_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rmsg_social_reject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.rmsg_social_reject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rmsg_social_reject::CopyFrom(const rmsg_social_reject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.rmsg_social_reject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rmsg_social_reject::IsInitialized() const {
  return true;
}

void rmsg_social_reject::Swap(rmsg_social_reject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rmsg_social_reject::InternalSwap(rmsg_social_reject* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(reject_, other->reject_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rmsg_social_reject::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rmsg_social_add::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rmsg_social_add::kPlayerGuidFieldNumber;
const int rmsg_social_add::kTargetGuidFieldNumber;
const int rmsg_social_add::kAgreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rmsg_social_add::rmsg_social_add()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_add.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.rmsg_social_add)
}
rmsg_social_add::rmsg_social_add(const rmsg_social_add& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&agree_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(agree_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.rmsg_social_add)
}

void rmsg_social_add::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&agree_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(agree_));
}

rmsg_social_add::~rmsg_social_add() {
  // @@protoc_insertion_point(destructor:protocol.game.rmsg_social_add)
  SharedDtor();
}

void rmsg_social_add::SharedDtor() {
}

void rmsg_social_add::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rmsg_social_add::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rmsg_social_add& rmsg_social_add::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_add.base);
  return *internal_default_instance();
}


void rmsg_social_add::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.rmsg_social_add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&agree_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(agree_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rmsg_social_add::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.rmsg_social_add)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 target_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool agree = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_agree();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &agree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.rmsg_social_add)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.rmsg_social_add)
  return false;
#undef DO_
}

void rmsg_social_add::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.rmsg_social_add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->target_guid(), output);
  }

  // optional bool agree = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->agree(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.rmsg_social_add)
}

::google::protobuf::uint8* rmsg_social_add::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.rmsg_social_add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->target_guid(), target);
  }

  // optional bool agree = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->agree(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.rmsg_social_add)
  return target;
}

size_t rmsg_social_add::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.rmsg_social_add)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional uint64 target_guid = 2;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

    // optional bool agree = 3;
    if (has_agree()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rmsg_social_add::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.rmsg_social_add)
  GOOGLE_DCHECK_NE(&from, this);
  const rmsg_social_add* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rmsg_social_add>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.rmsg_social_add)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.rmsg_social_add)
    MergeFrom(*source);
  }
}

void rmsg_social_add::MergeFrom(const rmsg_social_add& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.rmsg_social_add)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_guid_ = from.target_guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      agree_ = from.agree_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rmsg_social_add::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.rmsg_social_add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rmsg_social_add::CopyFrom(const rmsg_social_add& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.rmsg_social_add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rmsg_social_add::IsInitialized() const {
  return true;
}

void rmsg_social_add::Swap(rmsg_social_add* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rmsg_social_add::InternalSwap(rmsg_social_add* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(target_guid_, other->target_guid_);
  swap(agree_, other->agree_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rmsg_social_add::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_social_add::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_social_add::kTargetGuidFieldNumber;
const int cmsg_social_add::kAgreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_social_add::cmsg_social_add()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_add.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_social_add)
}
cmsg_social_add::cmsg_social_add(const cmsg_social_add& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_guid_, &from.target_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&agree_) -
    reinterpret_cast<char*>(&target_guid_)) + sizeof(agree_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_social_add)
}

void cmsg_social_add::SharedCtor() {
  ::memset(&target_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&agree_) -
      reinterpret_cast<char*>(&target_guid_)) + sizeof(agree_));
}

cmsg_social_add::~cmsg_social_add() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_social_add)
  SharedDtor();
}

void cmsg_social_add::SharedDtor() {
}

void cmsg_social_add::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_social_add::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_social_add& cmsg_social_add::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_add.base);
  return *internal_default_instance();
}


void cmsg_social_add::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_social_add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&target_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&agree_) -
        reinterpret_cast<char*>(&target_guid_)) + sizeof(agree_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_social_add::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_social_add)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool agree = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_agree();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &agree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_social_add)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_social_add)
  return false;
#undef DO_
}

void cmsg_social_add::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_social_add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  // optional bool agree = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->agree(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_social_add)
}

::google::protobuf::uint8* cmsg_social_add::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_social_add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  // optional bool agree = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->agree(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_social_add)
  return target;
}

size_t cmsg_social_add::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_social_add)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 target_guid = 1;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

    // optional bool agree = 2;
    if (has_agree()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_social_add::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_social_add)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_social_add* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_social_add>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_social_add)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_social_add)
    MergeFrom(*source);
  }
}

void cmsg_social_add::MergeFrom(const cmsg_social_add& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_social_add)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      target_guid_ = from.target_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      agree_ = from.agree_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_social_add::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_social_add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_social_add::CopyFrom(const cmsg_social_add& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_social_add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_social_add::IsInitialized() const {
  return true;
}

void cmsg_social_add::Swap(cmsg_social_add* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_social_add::InternalSwap(cmsg_social_add* other) {
  using std::swap;
  swap(target_guid_, other->target_guid_);
  swap(agree_, other->agree_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_social_add::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_social_add::InitAsDefaultInstance() {
  ::protocol::game::_smsg_social_add_default_instance_._instance.get_mutable()->social_ = const_cast< ::dhc::social_t*>(
      ::dhc::social_t::internal_default_instance());
}
void smsg_social_add::clear_social() {
  if (social_ != NULL) social_->Clear();
  clear_has_social();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_social_add::kSocialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_social_add::smsg_social_add()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_add.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_social_add)
}
smsg_social_add::smsg_social_add(const smsg_social_add& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_social()) {
    social_ = new ::dhc::social_t(*from.social_);
  } else {
    social_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_social_add)
}

void smsg_social_add::SharedCtor() {
  social_ = NULL;
}

smsg_social_add::~smsg_social_add() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_social_add)
  SharedDtor();
}

void smsg_social_add::SharedDtor() {
  if (this != internal_default_instance()) delete social_;
}

void smsg_social_add::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_social_add::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_social_add& smsg_social_add::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_add.base);
  return *internal_default_instance();
}


void smsg_social_add::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_social_add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(social_ != NULL);
    social_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_social_add::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_social_add)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dhc.social_t social = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_social()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_social_add)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_social_add)
  return false;
#undef DO_
}

void smsg_social_add::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_social_add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .dhc.social_t social = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_social(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_social_add)
}

::google::protobuf::uint8* smsg_social_add::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_social_add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .dhc.social_t social = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_social(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_social_add)
  return target;
}

size_t smsg_social_add::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_social_add)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .dhc.social_t social = 1;
  if (has_social()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *social_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_social_add::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_social_add)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_social_add* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_social_add>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_social_add)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_social_add)
    MergeFrom(*source);
  }
}

void smsg_social_add::MergeFrom(const smsg_social_add& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_social_add)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_social()) {
    mutable_social()->::dhc::social_t::MergeFrom(from.social());
  }
}

void smsg_social_add::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_social_add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_social_add::CopyFrom(const smsg_social_add& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_social_add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_social_add::IsInitialized() const {
  return true;
}

void smsg_social_add::Swap(smsg_social_add* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_social_add::InternalSwap(smsg_social_add* other) {
  using std::swap;
  swap(social_, other->social_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_social_add::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_social_black::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_social_black::kTargetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_social_black::cmsg_social_black()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_black.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_social_black)
}
cmsg_social_black::cmsg_social_black(const cmsg_social_black& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_guid_ = from.target_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_social_black)
}

void cmsg_social_black::SharedCtor() {
  target_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_social_black::~cmsg_social_black() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_social_black)
  SharedDtor();
}

void cmsg_social_black::SharedDtor() {
}

void cmsg_social_black::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_social_black::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_social_black& cmsg_social_black::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_black.base);
  return *internal_default_instance();
}


void cmsg_social_black::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_social_black)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_social_black::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_social_black)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_social_black)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_social_black)
  return false;
#undef DO_
}

void cmsg_social_black::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_social_black)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_social_black)
}

::google::protobuf::uint8* cmsg_social_black::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_social_black)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_social_black)
  return target;
}

size_t cmsg_social_black::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_social_black)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 target_guid = 1;
  if (has_target_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_social_black::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_social_black)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_social_black* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_social_black>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_social_black)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_social_black)
    MergeFrom(*source);
  }
}

void cmsg_social_black::MergeFrom(const cmsg_social_black& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_social_black)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_guid()) {
    set_target_guid(from.target_guid());
  }
}

void cmsg_social_black::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_social_black)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_social_black::CopyFrom(const cmsg_social_black& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_social_black)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_social_black::IsInitialized() const {
  return true;
}

void cmsg_social_black::Swap(cmsg_social_black* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_social_black::InternalSwap(cmsg_social_black* other) {
  using std::swap;
  swap(target_guid_, other->target_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_social_black::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rmsg_social_black::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rmsg_social_black::kPlayerGuidFieldNumber;
const int rmsg_social_black::kTargetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rmsg_social_black::rmsg_social_black()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_black.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.rmsg_social_black)
}
rmsg_social_black::rmsg_social_black(const rmsg_social_black& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_guid_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(target_guid_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.rmsg_social_black)
}

void rmsg_social_black::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_guid_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(target_guid_));
}

rmsg_social_black::~rmsg_social_black() {
  // @@protoc_insertion_point(destructor:protocol.game.rmsg_social_black)
  SharedDtor();
}

void rmsg_social_black::SharedDtor() {
}

void rmsg_social_black::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rmsg_social_black::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rmsg_social_black& rmsg_social_black::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_rmsg_social_black.base);
  return *internal_default_instance();
}


void rmsg_social_black::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.rmsg_social_black)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_guid_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(target_guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rmsg_social_black::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.rmsg_social_black)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 target_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.rmsg_social_black)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.rmsg_social_black)
  return false;
#undef DO_
}

void rmsg_social_black::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.rmsg_social_black)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->target_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.rmsg_social_black)
}

::google::protobuf::uint8* rmsg_social_black::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.rmsg_social_black)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->target_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.rmsg_social_black)
  return target;
}

size_t rmsg_social_black::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.rmsg_social_black)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional uint64 target_guid = 2;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rmsg_social_black::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.rmsg_social_black)
  GOOGLE_DCHECK_NE(&from, this);
  const rmsg_social_black* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rmsg_social_black>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.rmsg_social_black)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.rmsg_social_black)
    MergeFrom(*source);
  }
}

void rmsg_social_black::MergeFrom(const rmsg_social_black& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.rmsg_social_black)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_guid_ = from.target_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rmsg_social_black::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.rmsg_social_black)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rmsg_social_black::CopyFrom(const rmsg_social_black& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.rmsg_social_black)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rmsg_social_black::IsInitialized() const {
  return true;
}

void rmsg_social_black::Swap(rmsg_social_black* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rmsg_social_black::InternalSwap(rmsg_social_black* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(target_guid_, other->target_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rmsg_social_black::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_social_chat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_social_chat::kTargetGuidFieldNumber;
const int cmsg_social_chat::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_social_chat::cmsg_social_chat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_chat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_social_chat)
}
cmsg_social_chat::cmsg_social_chat(const cmsg_social_chat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  target_guid_ = from.target_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_social_chat)
}

void cmsg_social_chat::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_guid_ = GOOGLE_ULONGLONG(0);
}

cmsg_social_chat::~cmsg_social_chat() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_social_chat)
  SharedDtor();
}

void cmsg_social_chat::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_social_chat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_social_chat::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_social_chat& cmsg_social_chat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_chat.base);
  return *internal_default_instance();
}


void cmsg_social_chat::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_social_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    text_.ClearNonDefaultToEmptyNoArena();
  }
  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_social_chat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_social_chat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_social_chat.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_social_chat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_social_chat)
  return false;
#undef DO_
}

void cmsg_social_chat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_social_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_social_chat.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_social_chat)
}

::google::protobuf::uint8* cmsg_social_chat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_social_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_social_chat.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_social_chat)
  return target;
}

size_t cmsg_social_chat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_social_chat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint64 target_guid = 1;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_social_chat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_social_chat)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_social_chat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_social_chat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_social_chat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_social_chat)
    MergeFrom(*source);
  }
}

void cmsg_social_chat::MergeFrom(const cmsg_social_chat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_social_chat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      target_guid_ = from.target_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_social_chat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_social_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_social_chat::CopyFrom(const cmsg_social_chat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_social_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_social_chat::IsInitialized() const {
  return true;
}

void cmsg_social_chat::Swap(cmsg_social_chat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_social_chat::InternalSwap(cmsg_social_chat* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_guid_, other->target_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_social_chat::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_social_chat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_social_chat::kTargetGuidFieldNumber;
const int smsg_social_chat::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_social_chat::smsg_social_chat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_chat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_social_chat)
}
smsg_social_chat::smsg_social_chat(const smsg_social_chat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  target_guid_ = from.target_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_social_chat)
}

void smsg_social_chat::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_guid_ = GOOGLE_ULONGLONG(0);
}

smsg_social_chat::~smsg_social_chat() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_social_chat)
  SharedDtor();
}

void smsg_social_chat::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void smsg_social_chat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_social_chat::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_social_chat& smsg_social_chat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_chat.base);
  return *internal_default_instance();
}


void smsg_social_chat::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_social_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    text_.ClearNonDefaultToEmptyNoArena();
  }
  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_social_chat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_social_chat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.smsg_social_chat.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_social_chat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_social_chat)
  return false;
#undef DO_
}

void smsg_social_chat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_social_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_social_chat.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_social_chat)
}

::google::protobuf::uint8* smsg_social_chat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_social_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.smsg_social_chat.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_social_chat)
  return target;
}

size_t smsg_social_chat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_social_chat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint64 target_guid = 1;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_social_chat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_social_chat)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_social_chat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_social_chat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_social_chat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_social_chat)
    MergeFrom(*source);
  }
}

void smsg_social_chat::MergeFrom(const smsg_social_chat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_social_chat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      target_guid_ = from.target_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_social_chat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_social_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_social_chat::CopyFrom(const smsg_social_chat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_social_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_social_chat::IsInitialized() const {
  return true;
}

void smsg_social_chat::Swap(smsg_social_chat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_social_chat::InternalSwap(smsg_social_chat* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_guid_, other->target_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_social_chat::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pmsg_social_chat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pmsg_social_chat::kGuidFieldNumber;
const int pmsg_social_chat::kNameFieldNumber;
const int pmsg_social_chat::kSexFieldNumber;
const int pmsg_social_chat::kLevelFieldNumber;
const int pmsg_social_chat::kAvatarFieldNumber;
const int pmsg_social_chat::kToukuangFieldNumber;
const int pmsg_social_chat::kRegionIdFieldNumber;
const int pmsg_social_chat::kTextFieldNumber;
const int pmsg_social_chat::kPlayerGuidFieldNumber;
const int pmsg_social_chat::kNameColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pmsg_social_chat::pmsg_social_chat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_pmsg_social_chat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.pmsg_social_chat)
}
pmsg_social_chat::pmsg_social_chat(const pmsg_social_chat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_guid_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(player_guid_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.pmsg_social_chat)
}

void pmsg_social_chat::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_guid_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(player_guid_));
}

pmsg_social_chat::~pmsg_social_chat() {
  // @@protoc_insertion_point(destructor:protocol.game.pmsg_social_chat)
  SharedDtor();
}

void pmsg_social_chat::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pmsg_social_chat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pmsg_social_chat::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pmsg_social_chat& pmsg_social_chat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_pmsg_social_chat.base);
  return *internal_default_instance();
}


void pmsg_social_chat::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.pmsg_social_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_changed();
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      set_changed();
      text_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&region_id_) -
        reinterpret_cast<char*>(&guid_)) + sizeof(region_id_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&name_color_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&player_guid_) -
        reinterpret_cast<char*>(&name_color_)) + sizeof(player_guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool pmsg_social_chat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.pmsg_social_chat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.pmsg_social_chat.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 avatar = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_avatar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 toukuang = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_toukuang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toukuang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 region_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.pmsg_social_chat.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 player_guid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 name_color = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_name_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.pmsg_social_chat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.pmsg_social_chat)
  return false;
#undef DO_
}

void pmsg_social_chat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.pmsg_social_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.pmsg_social_chat.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 sex = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }

  // optional int32 level = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // optional int32 avatar = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->avatar(), output);
  }

  // optional int32 toukuang = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->toukuang(), output);
  }

  // optional int32 region_id = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->region_id(), output);
  }

  // optional string text = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.pmsg_social_chat.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->text(), output);
  }

  // optional uint64 player_guid = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->player_guid(), output);
  }

  // optional int32 name_color = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->name_color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.pmsg_social_chat)
}

::google::protobuf::uint8* pmsg_social_chat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.pmsg_social_chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.pmsg_social_chat.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 sex = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }

  // optional int32 level = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // optional int32 avatar = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->avatar(), target);
  }

  // optional int32 toukuang = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->toukuang(), target);
  }

  // optional int32 region_id = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->region_id(), target);
  }

  // optional string text = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.pmsg_social_chat.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->text(), target);
  }

  // optional uint64 player_guid = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->player_guid(), target);
  }

  // optional int32 name_color = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->name_color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.pmsg_social_chat)
  return target;
}

size_t pmsg_social_chat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.pmsg_social_chat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string text = 9;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint64 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional int32 sex = 3;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 avatar = 5;
    if (has_avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->avatar());
    }

    // optional int32 toukuang = 7;
    if (has_toukuang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toukuang());
    }

    // optional int32 region_id = 8;
    if (has_region_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->region_id());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 name_color = 11;
    if (has_name_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->name_color());
    }

    // optional uint64 player_guid = 10;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pmsg_social_chat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.pmsg_social_chat)
  GOOGLE_DCHECK_NE(&from, this);
  const pmsg_social_chat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pmsg_social_chat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.pmsg_social_chat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.pmsg_social_chat)
    MergeFrom(*source);
  }
}

void pmsg_social_chat::MergeFrom(const pmsg_social_chat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.pmsg_social_chat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000004u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000020u) {
      avatar_ = from.avatar_;
    }
    if (cached_has_bits & 0x00000040u) {
      toukuang_ = from.toukuang_;
    }
    if (cached_has_bits & 0x00000080u) {
      region_id_ = from.region_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      name_color_ = from.name_color_;
    }
    if (cached_has_bits & 0x00000200u) {
      player_guid_ = from.player_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void pmsg_social_chat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.pmsg_social_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pmsg_social_chat::CopyFrom(const pmsg_social_chat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.pmsg_social_chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pmsg_social_chat::IsInitialized() const {
  return true;
}

void pmsg_social_chat::Swap(pmsg_social_chat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pmsg_social_chat::InternalSwap(pmsg_social_chat* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(sex_, other->sex_);
  swap(level_, other->level_);
  swap(avatar_, other->avatar_);
  swap(toukuang_, other->toukuang_);
  swap(region_id_, other->region_id_);
  swap(name_color_, other->name_color_);
  swap(player_guid_, other->player_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pmsg_social_chat::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_social_gift::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_social_gift::kTargetGuidFieldNumber;
const int cmsg_social_gift::kGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_social_gift::cmsg_social_gift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_gift.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_social_gift)
}
cmsg_social_gift::cmsg_social_gift(const cmsg_social_gift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_guid_, &from.target_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&target_guid_)) + sizeof(gold_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_social_gift)
}

void cmsg_social_gift::SharedCtor() {
  ::memset(&target_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gold_) -
      reinterpret_cast<char*>(&target_guid_)) + sizeof(gold_));
}

cmsg_social_gift::~cmsg_social_gift() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_social_gift)
  SharedDtor();
}

void cmsg_social_gift::SharedDtor() {
}

void cmsg_social_gift::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_social_gift::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_social_gift& cmsg_social_gift::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_cmsg_social_gift.base);
  return *internal_default_instance();
}


void cmsg_social_gift::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_social_gift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&target_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gold_) -
        reinterpret_cast<char*>(&target_guid_)) + sizeof(gold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_social_gift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_social_gift)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_social_gift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_social_gift)
  return false;
#undef DO_
}

void cmsg_social_gift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_social_gift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  // optional int32 gold = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_social_gift)
}

::google::protobuf::uint8* cmsg_social_gift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_social_gift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  // optional int32 gold = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_social_gift)
  return target;
}

size_t cmsg_social_gift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_social_gift)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 target_guid = 1;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

    // optional int32 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_social_gift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_social_gift)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_social_gift* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_social_gift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_social_gift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_social_gift)
    MergeFrom(*source);
  }
}

void cmsg_social_gift::MergeFrom(const cmsg_social_gift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_social_gift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      target_guid_ = from.target_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      gold_ = from.gold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cmsg_social_gift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_social_gift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_social_gift::CopyFrom(const cmsg_social_gift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_social_gift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_social_gift::IsInitialized() const {
  return true;
}

void cmsg_social_gift::Swap(cmsg_social_gift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_social_gift::InternalSwap(cmsg_social_gift* other) {
  using std::swap;
  swap(target_guid_, other->target_guid_);
  swap(gold_, other->gold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_social_gift::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_social_gift_receive::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_social_gift_receive::kTargetGuidFieldNumber;
const int smsg_social_gift_receive::kGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_social_gift_receive::smsg_social_gift_receive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_gift_receive.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_social_gift_receive)
}
smsg_social_gift_receive::smsg_social_gift_receive(const smsg_social_gift_receive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_guid_, &from.target_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&target_guid_)) + sizeof(gold_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_social_gift_receive)
}

void smsg_social_gift_receive::SharedCtor() {
  ::memset(&target_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gold_) -
      reinterpret_cast<char*>(&target_guid_)) + sizeof(gold_));
}

smsg_social_gift_receive::~smsg_social_gift_receive() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_social_gift_receive)
  SharedDtor();
}

void smsg_social_gift_receive::SharedDtor() {
}

void smsg_social_gift_receive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_social_gift_receive::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_social_gift_receive& smsg_social_gift_receive::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_gift_receive.base);
  return *internal_default_instance();
}


void smsg_social_gift_receive::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_social_gift_receive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&target_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gold_) -
        reinterpret_cast<char*>(&target_guid_)) + sizeof(gold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_social_gift_receive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_social_gift_receive)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_social_gift_receive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_social_gift_receive)
  return false;
#undef DO_
}

void smsg_social_gift_receive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_social_gift_receive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_guid(), output);
  }

  // optional int32 gold = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_social_gift_receive)
}

::google::protobuf::uint8* smsg_social_gift_receive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_social_gift_receive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 target_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_guid(), target);
  }

  // optional int32 gold = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_social_gift_receive)
  return target;
}

size_t smsg_social_gift_receive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_social_gift_receive)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 target_guid = 1;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

    // optional int32 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_social_gift_receive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_social_gift_receive)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_social_gift_receive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_social_gift_receive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_social_gift_receive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_social_gift_receive)
    MergeFrom(*source);
  }
}

void smsg_social_gift_receive::MergeFrom(const smsg_social_gift_receive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_social_gift_receive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      target_guid_ = from.target_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      gold_ = from.gold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void smsg_social_gift_receive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_social_gift_receive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_social_gift_receive::CopyFrom(const smsg_social_gift_receive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_social_gift_receive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_social_gift_receive::IsInitialized() const {
  return true;
}

void smsg_social_gift_receive::Swap(smsg_social_gift_receive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_social_gift_receive::InternalSwap(smsg_social_gift_receive* other) {
  using std::swap;
  swap(target_guid_, other->target_guid_);
  swap(gold_, other->gold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_social_gift_receive::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pmsg_social_gift::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pmsg_social_gift::kPlayerGuidFieldNumber;
const int pmsg_social_gift::kTargetGuidFieldNumber;
const int pmsg_social_gift::kGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pmsg_social_gift::pmsg_social_gift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_pmsg_social_gift.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.pmsg_social_gift)
}
pmsg_social_gift::pmsg_social_gift(const pmsg_social_gift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(gold_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.pmsg_social_gift)
}

void pmsg_social_gift::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gold_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(gold_));
}

pmsg_social_gift::~pmsg_social_gift() {
  // @@protoc_insertion_point(destructor:protocol.game.pmsg_social_gift)
  SharedDtor();
}

void pmsg_social_gift::SharedDtor() {
}

void pmsg_social_gift::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pmsg_social_gift::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pmsg_social_gift& pmsg_social_gift::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_pmsg_social_gift.base);
  return *internal_default_instance();
}


void pmsg_social_gift::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.pmsg_social_gift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gold_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(gold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool pmsg_social_gift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.pmsg_social_gift)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 target_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.pmsg_social_gift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.pmsg_social_gift)
  return false;
#undef DO_
}

void pmsg_social_gift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.pmsg_social_gift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->target_guid(), output);
  }

  // optional int32 gold = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.pmsg_social_gift)
}

::google::protobuf::uint8* pmsg_social_gift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.pmsg_social_gift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional uint64 target_guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->target_guid(), target);
  }

  // optional int32 gold = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.pmsg_social_gift)
  return target;
}

size_t pmsg_social_gift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.pmsg_social_gift)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional uint64 target_guid = 2;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

    // optional int32 gold = 3;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pmsg_social_gift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.pmsg_social_gift)
  GOOGLE_DCHECK_NE(&from, this);
  const pmsg_social_gift* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pmsg_social_gift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.pmsg_social_gift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.pmsg_social_gift)
    MergeFrom(*source);
  }
}

void pmsg_social_gift::MergeFrom(const pmsg_social_gift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.pmsg_social_gift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_guid_ = from.target_guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      gold_ = from.gold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void pmsg_social_gift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.pmsg_social_gift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pmsg_social_gift::CopyFrom(const pmsg_social_gift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.pmsg_social_gift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pmsg_social_gift::IsInitialized() const {
  return true;
}

void pmsg_social_gift::Swap(pmsg_social_gift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pmsg_social_gift::InternalSwap(pmsg_social_gift* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(target_guid_, other->target_guid_);
  swap(gold_, other->gold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pmsg_social_gift::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pmsg_social_login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pmsg_social_login::kPlayerGuidFieldNumber;
const int pmsg_social_login::kNameFieldNumber;
const int pmsg_social_login::kFriendGuidsFieldNumber;
const int pmsg_social_login::kSflagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pmsg_social_login::pmsg_social_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_pmsg_social_login.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.pmsg_social_login)
}
pmsg_social_login::pmsg_social_login(const pmsg_social_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      friend_guids_(from.friend_guids_),
      sflags_(from.sflags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  player_guid_ = from.player_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.pmsg_social_login)
}

void pmsg_social_login::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_guid_ = GOOGLE_ULONGLONG(0);
}

pmsg_social_login::~pmsg_social_login() {
  // @@protoc_insertion_point(destructor:protocol.game.pmsg_social_login)
  SharedDtor();
}

void pmsg_social_login::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pmsg_social_login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pmsg_social_login::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pmsg_social_login& pmsg_social_login::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_pmsg_social_login.base);
  return *internal_default_instance();
}


void pmsg_social_login::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.pmsg_social_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  friend_guids_.Clear();
  set_changed();
  sflags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    name_.ClearNonDefaultToEmptyNoArena();
  }
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool pmsg_social_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.pmsg_social_login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.pmsg_social_login.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 friend_guids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32u, input, this->mutable_friend_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_friend_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 sflags = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_sflags())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_sflags())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.pmsg_social_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.pmsg_social_login)
  return false;
#undef DO_
}

void pmsg_social_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.pmsg_social_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.pmsg_social_login.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated uint64 friend_guids = 4;
  for (int i = 0, n = this->friend_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->friend_guids(i), output);
  }

  // repeated int32 sflags = 5;
  for (int i = 0, n = this->sflags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->sflags(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.pmsg_social_login)
}

::google::protobuf::uint8* pmsg_social_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.pmsg_social_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.pmsg_social_login.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated uint64 friend_guids = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(4, this->friend_guids_, target);

  // repeated int32 sflags = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->sflags_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.pmsg_social_login)
  return target;
}

size_t pmsg_social_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.pmsg_social_login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 friend_guids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->friend_guids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->friend_guids_size());
    total_size += data_size;
  }

  // repeated int32 sflags = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->sflags_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->sflags_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pmsg_social_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.pmsg_social_login)
  GOOGLE_DCHECK_NE(&from, this);
  const pmsg_social_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pmsg_social_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.pmsg_social_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.pmsg_social_login)
    MergeFrom(*source);
  }
}

void pmsg_social_login::MergeFrom(const pmsg_social_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.pmsg_social_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_guids_.MergeFrom(from.friend_guids_);
  sflags_.MergeFrom(from.sflags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_guid_ = from.player_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void pmsg_social_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.pmsg_social_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pmsg_social_login::CopyFrom(const pmsg_social_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.pmsg_social_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pmsg_social_login::IsInitialized() const {
  return true;
}

void pmsg_social_login::Swap(pmsg_social_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pmsg_social_login::InternalSwap(pmsg_social_login* other) {
  using std::swap;
  friend_guids_.InternalSwap(&other->friend_guids_);
  sflags_.InternalSwap(&other->sflags_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_guid_, other->player_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pmsg_social_login::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmsg_soical_search::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmsg_soical_search::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmsg_soical_search::cmsg_soical_search()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_cmsg_soical_search.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.cmsg_soical_search)
}
cmsg_soical_search::cmsg_soical_search(const cmsg_soical_search& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.game.cmsg_soical_search)
}

void cmsg_soical_search::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

cmsg_soical_search::~cmsg_soical_search() {
  // @@protoc_insertion_point(destructor:protocol.game.cmsg_soical_search)
  SharedDtor();
}

void cmsg_soical_search::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmsg_soical_search::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cmsg_soical_search::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmsg_soical_search& cmsg_soical_search::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_cmsg_soical_search.base);
  return *internal_default_instance();
}


void cmsg_soical_search::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.cmsg_soical_search)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    set_changed();
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cmsg_soical_search::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.cmsg_soical_search)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.game.cmsg_soical_search.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.cmsg_soical_search)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.cmsg_soical_search)
  return false;
#undef DO_
}

void cmsg_soical_search::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.cmsg_soical_search)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_soical_search.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.cmsg_soical_search)
}

::google::protobuf::uint8* cmsg_soical_search::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.cmsg_soical_search)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.game.cmsg_soical_search.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.cmsg_soical_search)
  return target;
}

size_t cmsg_soical_search::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.cmsg_soical_search)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cmsg_soical_search::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.cmsg_soical_search)
  GOOGLE_DCHECK_NE(&from, this);
  const cmsg_soical_search* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmsg_soical_search>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.cmsg_soical_search)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.cmsg_soical_search)
    MergeFrom(*source);
  }
}

void cmsg_soical_search::MergeFrom(const cmsg_soical_search& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.cmsg_soical_search)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void cmsg_soical_search::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.cmsg_soical_search)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmsg_soical_search::CopyFrom(const cmsg_soical_search& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.cmsg_soical_search)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmsg_soical_search::IsInitialized() const {
  return true;
}

void cmsg_soical_search::Swap(cmsg_soical_search* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmsg_soical_search::InternalSwap(cmsg_soical_search* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cmsg_soical_search::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void req_social_gold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_social_gold::kPlayerGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_social_gold::req_social_gold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_req_social_gold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.req_social_gold)
}
req_social_gold::req_social_gold(const req_social_gold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_guid_ = from.player_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.req_social_gold)
}

void req_social_gold::SharedCtor() {
  player_guid_ = GOOGLE_ULONGLONG(0);
}

req_social_gold::~req_social_gold() {
  // @@protoc_insertion_point(destructor:protocol.game.req_social_gold)
  SharedDtor();
}

void req_social_gold::SharedDtor() {
}

void req_social_gold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* req_social_gold::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_social_gold& req_social_gold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_req_social_gold.base);
  return *internal_default_instance();
}


void req_social_gold::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.req_social_gold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool req_social_gold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.req_social_gold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.req_social_gold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.req_social_gold)
  return false;
#undef DO_
}

void req_social_gold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.req_social_gold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.req_social_gold)
}

::google::protobuf::uint8* req_social_gold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.req_social_gold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.req_social_gold)
  return target;
}

size_t req_social_gold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.req_social_gold)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 player_guid = 1;
  if (has_player_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void req_social_gold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.req_social_gold)
  GOOGLE_DCHECK_NE(&from, this);
  const req_social_gold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_social_gold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.req_social_gold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.req_social_gold)
    MergeFrom(*source);
  }
}

void req_social_gold::MergeFrom(const req_social_gold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.req_social_gold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player_guid()) {
    set_player_guid(from.player_guid());
  }
}

void req_social_gold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.req_social_gold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_social_gold::CopyFrom(const req_social_gold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.req_social_gold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_social_gold::IsInitialized() const {
  return true;
}

void req_social_gold::Swap(req_social_gold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_social_gold::InternalSwap(req_social_gold* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata req_social_gold::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rep_social_gold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rep_social_gold::kPlayerGuidFieldNumber;
const int rep_social_gold::kGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rep_social_gold::rep_social_gold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_rep_social_gold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.rep_social_gold)
}
rep_social_gold::rep_social_gold(const rep_social_gold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(gold_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.rep_social_gold)
}

void rep_social_gold::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gold_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(gold_));
}

rep_social_gold::~rep_social_gold() {
  // @@protoc_insertion_point(destructor:protocol.game.rep_social_gold)
  SharedDtor();
}

void rep_social_gold::SharedDtor() {
}

void rep_social_gold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rep_social_gold::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rep_social_gold& rep_social_gold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_rep_social_gold.base);
  return *internal_default_instance();
}


void rep_social_gold::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.rep_social_gold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gold_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(gold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rep_social_gold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.rep_social_gold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.rep_social_gold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.rep_social_gold)
  return false;
#undef DO_
}

void rep_social_gold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.rep_social_gold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional int32 gold = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.rep_social_gold)
}

::google::protobuf::uint8* rep_social_gold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.rep_social_gold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional int32 gold = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.rep_social_gold)
  return target;
}

size_t rep_social_gold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.rep_social_gold)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional int32 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rep_social_gold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.rep_social_gold)
  GOOGLE_DCHECK_NE(&from, this);
  const rep_social_gold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rep_social_gold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.rep_social_gold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.rep_social_gold)
    MergeFrom(*source);
  }
}

void rep_social_gold::MergeFrom(const rep_social_gold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.rep_social_gold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      gold_ = from.gold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rep_social_gold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.rep_social_gold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rep_social_gold::CopyFrom(const rep_social_gold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.rep_social_gold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rep_social_gold::IsInitialized() const {
  return true;
}

void rep_social_gold::Swap(rep_social_gold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rep_social_gold::InternalSwap(rep_social_gold* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(gold_, other->gold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rep_social_gold::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void smsg_social_gold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int smsg_social_gold::kGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

smsg_social_gold::smsg_social_gold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_gold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.smsg_social_gold)
}
smsg_social_gold::smsg_social_gold(const smsg_social_gold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gold_ = from.gold_;
  // @@protoc_insertion_point(copy_constructor:protocol.game.smsg_social_gold)
}

void smsg_social_gold::SharedCtor() {
  gold_ = 0;
}

smsg_social_gold::~smsg_social_gold() {
  // @@protoc_insertion_point(destructor:protocol.game.smsg_social_gold)
  SharedDtor();
}

void smsg_social_gold::SharedDtor() {
}

void smsg_social_gold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* smsg_social_gold::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const smsg_social_gold& smsg_social_gold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_smsg_social_gold.base);
  return *internal_default_instance();
}


void smsg_social_gold::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.smsg_social_gold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  gold_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool smsg_social_gold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.smsg_social_gold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.smsg_social_gold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.smsg_social_gold)
  return false;
#undef DO_
}

void smsg_social_gold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.smsg_social_gold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 gold = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.smsg_social_gold)
}

::google::protobuf::uint8* smsg_social_gold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.smsg_social_gold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 gold = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.smsg_social_gold)
  return target;
}

size_t smsg_social_gold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.smsg_social_gold)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 gold = 1;
  if (has_gold()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void smsg_social_gold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.smsg_social_gold)
  GOOGLE_DCHECK_NE(&from, this);
  const smsg_social_gold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const smsg_social_gold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.smsg_social_gold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.smsg_social_gold)
    MergeFrom(*source);
  }
}

void smsg_social_gold::MergeFrom(const smsg_social_gold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.smsg_social_gold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gold()) {
    set_gold(from.gold());
  }
}

void smsg_social_gold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.smsg_social_gold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void smsg_social_gold::CopyFrom(const smsg_social_gold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.smsg_social_gold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool smsg_social_gold::IsInitialized() const {
  return true;
}

void smsg_social_gold::Swap(smsg_social_gold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void smsg_social_gold::InternalSwap(smsg_social_gold* other) {
  using std::swap;
  swap(gold_, other->gold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata smsg_social_gold::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void push_social_fight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int push_social_fight::kPlayerGuidFieldNumber;
const int push_social_fight::kFightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

push_social_fight::push_social_fight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fsocial_2eproto::scc_info_push_social_fight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.game.push_social_fight)
}
push_social_fight::push_social_fight(const push_social_fight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&fight_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(fight_));
  // @@protoc_insertion_point(copy_constructor:protocol.game.push_social_fight)
}

void push_social_fight::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fight_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(fight_));
}

push_social_fight::~push_social_fight() {
  // @@protoc_insertion_point(destructor:protocol.game.push_social_fight)
  SharedDtor();
}

void push_social_fight::SharedDtor() {
}

void push_social_fight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* push_social_fight::descriptor() {
  ::protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const push_social_fight& push_social_fight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fsocial_2eproto::scc_info_push_social_fight.base);
  return *internal_default_instance();
}


void push_social_fight::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.game.push_social_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fight_) -
        reinterpret_cast<char*>(&player_guid_)) + sizeof(fight_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool push_social_fight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.game.push_social_fight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.game.push_social_fight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.game.push_social_fight)
  return false;
#undef DO_
}

void push_social_fight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.game.push_social_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // optional int32 fight = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.game.push_social_fight)
}

::google::protobuf::uint8* push_social_fight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.game.push_social_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 player_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // optional int32 fight = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.game.push_social_fight)
  return target;
}

size_t push_social_fight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.game.push_social_fight)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 player_guid = 1;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional int32 fight = 2;
    if (has_fight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void push_social_fight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.game.push_social_fight)
  GOOGLE_DCHECK_NE(&from, this);
  const push_social_fight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const push_social_fight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.game.push_social_fight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.game.push_social_fight)
    MergeFrom(*source);
  }
}

void push_social_fight::MergeFrom(const push_social_fight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.game.push_social_fight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      fight_ = from.fight_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void push_social_fight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.game.push_social_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void push_social_fight::CopyFrom(const push_social_fight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.game.push_social_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool push_social_fight::IsInitialized() const {
  return true;
}

void push_social_fight::Swap(push_social_fight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void push_social_fight::InternalSwap(push_social_fight* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(fight_, other->fight_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata push_social_fight::GetMetadata() const {
  protobuf_msg_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace game
}  // namespace protocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::social_list_player_load* Arena::CreateMaybeMessage< ::protocol::game::social_list_player_load >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::social_list_player_load >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_social_data* Arena::CreateMaybeMessage< ::protocol::game::smsg_social_data >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_social_data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_social_stat* Arena::CreateMaybeMessage< ::protocol::game::smsg_social_stat >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_social_stat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::req_social_login* Arena::CreateMaybeMessage< ::protocol::game::req_social_login >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::req_social_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::rep_social_login* Arena::CreateMaybeMessage< ::protocol::game::rep_social_login >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::rep_social_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_social_look* Arena::CreateMaybeMessage< ::protocol::game::cmsg_social_look >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_social_look >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_social_look* Arena::CreateMaybeMessage< ::protocol::game::smsg_social_look >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_social_look >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::req_social_look* Arena::CreateMaybeMessage< ::protocol::game::req_social_look >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::req_social_look >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::req_social_delete* Arena::CreateMaybeMessage< ::protocol::game::req_social_delete >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::req_social_delete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_social_delete* Arena::CreateMaybeMessage< ::protocol::game::cmsg_social_delete >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_social_delete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_social_delete* Arena::CreateMaybeMessage< ::protocol::game::smsg_social_delete >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_social_delete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::pmsg_social_delete* Arena::CreateMaybeMessage< ::protocol::game::pmsg_social_delete >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::pmsg_social_delete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_social_apply* Arena::CreateMaybeMessage< ::protocol::game::cmsg_social_apply >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_social_apply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_social_apply* Arena::CreateMaybeMessage< ::protocol::game::smsg_social_apply >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_social_apply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::rmsg_social_apply* Arena::CreateMaybeMessage< ::protocol::game::rmsg_social_apply >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::rmsg_social_apply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::rmsg_social_apply_flag* Arena::CreateMaybeMessage< ::protocol::game::rmsg_social_apply_flag >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::rmsg_social_apply_flag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::rmsg_social_reject* Arena::CreateMaybeMessage< ::protocol::game::rmsg_social_reject >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::rmsg_social_reject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::rmsg_social_add* Arena::CreateMaybeMessage< ::protocol::game::rmsg_social_add >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::rmsg_social_add >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_social_add* Arena::CreateMaybeMessage< ::protocol::game::cmsg_social_add >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_social_add >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_social_add* Arena::CreateMaybeMessage< ::protocol::game::smsg_social_add >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_social_add >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_social_black* Arena::CreateMaybeMessage< ::protocol::game::cmsg_social_black >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_social_black >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::rmsg_social_black* Arena::CreateMaybeMessage< ::protocol::game::rmsg_social_black >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::rmsg_social_black >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_social_chat* Arena::CreateMaybeMessage< ::protocol::game::cmsg_social_chat >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_social_chat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_social_chat* Arena::CreateMaybeMessage< ::protocol::game::smsg_social_chat >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_social_chat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::pmsg_social_chat* Arena::CreateMaybeMessage< ::protocol::game::pmsg_social_chat >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::pmsg_social_chat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_social_gift* Arena::CreateMaybeMessage< ::protocol::game::cmsg_social_gift >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_social_gift >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_social_gift_receive* Arena::CreateMaybeMessage< ::protocol::game::smsg_social_gift_receive >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_social_gift_receive >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::pmsg_social_gift* Arena::CreateMaybeMessage< ::protocol::game::pmsg_social_gift >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::pmsg_social_gift >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::pmsg_social_login* Arena::CreateMaybeMessage< ::protocol::game::pmsg_social_login >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::pmsg_social_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::cmsg_soical_search* Arena::CreateMaybeMessage< ::protocol::game::cmsg_soical_search >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::cmsg_soical_search >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::req_social_gold* Arena::CreateMaybeMessage< ::protocol::game::req_social_gold >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::req_social_gold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::rep_social_gold* Arena::CreateMaybeMessage< ::protocol::game::rep_social_gold >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::rep_social_gold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::smsg_social_gold* Arena::CreateMaybeMessage< ::protocol::game::smsg_social_gold >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::smsg_social_gold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::game::push_social_fight* Arena::CreateMaybeMessage< ::protocol::game::push_social_fight >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::game::push_social_fight >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
