// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#include "player.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class player_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<player_t>
      _instance;
} _player_t_default_instance_;
}  // namespace dhc
namespace protobuf_player_2eproto {
static void InitDefaultsplayer_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_player_t_default_instance_;
    new (ptr) ::dhc::player_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::player_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_player_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsplayer_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_player_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, infomation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, birth_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, last_daily_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, last_week_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, last_month_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, last_login_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, last_check_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, is_guide_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, jewel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, cup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, snow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, battle_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, max_cup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, max_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, max_sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, max_lsha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, box_zd_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, box_zd_opened_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, box_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, box_open_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, box_open_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, sign_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, sign_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, sign_finish_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, role_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, role_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, item_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, avatar_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, battle_his_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, post_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, achieve_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, achieve_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, achieve_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, achieve_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, achieve_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, achieve_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, toukuang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, toukuang_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, toukuang_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, task_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, task_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, fashion_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, fashion_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, daily_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, daily_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, daily_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, daily_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, daily_get_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, level_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, social_golds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, total_recharge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, total_spend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, change_name_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, fenxiang_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, fenxiang_total_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, fenxiang_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, libao_nums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, battle_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, offline_battle_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, first_recharge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, yue_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, yue_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, yue_first_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, nian_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, nian_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, nian_first_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, duobao_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, duobao_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, advertisement_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::player_t, advertisement_time_),
  2,
  3,
  0,
  4,
  1,
  8,
  5,
  6,
  7,
  10,
  11,
  12,
  9,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  ~0u,
  26,
  27,
  28,
  29,
  30,
  ~0u,
  32,
  ~0u,
  ~0u,
  ~0u,
  33,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  34,
  35,
  ~0u,
  ~0u,
  36,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  37,
  ~0u,
  ~0u,
  ~0u,
  38,
  39,
  40,
  41,
  42,
  43,
  ~0u,
  44,
  45,
  47,
  46,
  48,
  50,
  49,
  51,
  52,
  ~0u,
  53,
  31,
  54,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 86, sizeof(::dhc::player_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_player_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "player.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014player.proto\022\003dhc\"\213\r\n\010player_t\022\014\n\004guid"
      "\030\001 \001(\004\022\020\n\010serverid\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\022\021"
      "\n\tregion_id\030\004 \001(\005\022\022\n\ninfomation\030\005 \001(\t\022\013\n"
      "\003sex\030\006 \001(\005\022\022\n\nbirth_time\030\007 \001(\004\022\027\n\017last_d"
      "aily_time\030\010 \001(\004\022\026\n\016last_week_time\030\t \001(\004\022"
      "\027\n\017last_month_time\030\n \001(\004\022\027\n\017last_login_t"
      "ime\030\013 \001(\004\022\027\n\017last_check_time\030\014 \001(\004\022\020\n\010is"
      "_guide\030\r \001(\005\022\014\n\004gold\030\024 \001(\005\022\r\n\005jewel\030\025 \001("
      "\005\022\r\n\005level\030\026 \001(\005\022\013\n\003exp\030\027 \001(\005\022\013\n\003cup\030\030 \001"
      "(\005\022\014\n\004snow\030\031 \001(\005\022\023\n\013battle_gold\030\032 \001(\005\022\017\n"
      "\007max_cup\030\033 \001(\005\022\021\n\tmax_score\030\034 \001(\005\022\017\n\007max"
      "_sha\030\035 \001(\005\022\020\n\010max_lsha\030\036 \001(\005\022\022\n\nbox_zd_n"
      "um\0302 \001(\005\022\025\n\rbox_zd_opened\0303 \001(\005\022\017\n\007box_i"
      "ds\0304 \003(\005\022\025\n\rbox_open_slot\0305 \001(\005\022\025\n\rbox_o"
      "pen_time\0306 \001(\004\022\021\n\tsign_time\0307 \001(\004\022\022\n\nsig"
      "n_index\0308 \001(\005\022\023\n\013sign_finish\0309 \001(\005\022\021\n\tro"
      "le_guid\030d \003(\004\022\017\n\007role_on\030e \001(\004\022\017\n\007item_i"
      "d\030f \003(\005\022\020\n\010item_num\030g \003(\005\022\016\n\006avatar\030h \003("
      "\005\022\021\n\tavatar_on\030j \001(\005\022\030\n\020battle_his_guids"
      "\030k \003(\004\022\022\n\npost_guids\030m \003(\004\022\022\n\nachieve_id"
      "\030n \003(\005\022\023\n\013achieve_num\030o \003(\005\022\026\n\016achieve_r"
      "eward\030p \003(\005\022\024\n\014achieve_time\030q \003(\004\022\025\n\rach"
      "ieve_point\030r \001(\005\022\025\n\rachieve_index\030s \001(\005\022"
      "\020\n\010toukuang\030t \003(\005\022\025\n\rtoukuang_time\030u \003(\004"
      "\022\023\n\013toukuang_on\030v \001(\005\022\017\n\007task_id\030w \003(\005\022\020"
      "\n\010task_num\030x \003(\005\022\023\n\013task_reward\030y \003(\005\022\022\n"
      "\nfashion_id\030z \003(\005\022\022\n\nfashion_on\030{ \003(\005\022\020\n"
      "\010daily_id\030| \003(\005\022\021\n\tdaily_num\030} \003(\005\022\024\n\014da"
      "ily_reward\030~ \003(\005\022\023\n\013daily_point\030\177 \001(\005\022\025\n"
      "\014daily_get_id\030\200\001 \003(\005\022\025\n\014level_reward\030\201\001 "
      "\003(\005\022\025\n\014social_golds\030\202\001 \003(\004\022\027\n\016total_rech"
      "arge\030\255\002 \001(\005\022\024\n\013total_spend\030\256\002 \001(\005\022\030\n\017cha"
      "nge_name_num\030\257\002 \001(\005\022\025\n\014fenxiang_num\030\260\002 \001"
      "(\005\022\033\n\022fenxiang_total_num\030\261\002 \001(\005\022\027\n\016fenxi"
      "ang_state\030\262\002 \001(\005\022\023\n\nlibao_nums\030\263\002 \003(\005\022\023\n"
      "\nbattle_num\030\264\002 \001(\005\022\034\n\023offline_battle_tim"
      "e\030\265\002 \001(\004\022\027\n\016first_recharge\030\266\002 \001(\005\022\021\n\010yue"
      "_time\030\267\002 \001(\004\022\023\n\nyue_reward\030\270\002 \001(\005\022\022\n\tyue"
      "_first\030\271\002 \001(\005\022\022\n\tnian_time\030\272\002 \001(\004\022\024\n\013nia"
      "n_reward\030\273\002 \001(\005\022\023\n\nnian_first\030\274\002 \001(\005\022\025\n\014"
      "duobao_items\030\275\002 \003(\005\022\023\n\nduobao_num\030\276\002 \001(\005"
      "\022\032\n\021advertisement_num\030\277\002 \001(\005\022\033\n\022advertis"
      "ement_time\030\300\002 \001(\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1697);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_player_2eproto
namespace dhc {

// ===================================================================

void player_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_t::kGuidFieldNumber;
const int player_t::kServeridFieldNumber;
const int player_t::kNameFieldNumber;
const int player_t::kRegionIdFieldNumber;
const int player_t::kInfomationFieldNumber;
const int player_t::kSexFieldNumber;
const int player_t::kBirthTimeFieldNumber;
const int player_t::kLastDailyTimeFieldNumber;
const int player_t::kLastWeekTimeFieldNumber;
const int player_t::kLastMonthTimeFieldNumber;
const int player_t::kLastLoginTimeFieldNumber;
const int player_t::kLastCheckTimeFieldNumber;
const int player_t::kIsGuideFieldNumber;
const int player_t::kGoldFieldNumber;
const int player_t::kJewelFieldNumber;
const int player_t::kLevelFieldNumber;
const int player_t::kExpFieldNumber;
const int player_t::kCupFieldNumber;
const int player_t::kSnowFieldNumber;
const int player_t::kBattleGoldFieldNumber;
const int player_t::kMaxCupFieldNumber;
const int player_t::kMaxScoreFieldNumber;
const int player_t::kMaxShaFieldNumber;
const int player_t::kMaxLshaFieldNumber;
const int player_t::kBoxZdNumFieldNumber;
const int player_t::kBoxZdOpenedFieldNumber;
const int player_t::kBoxIdsFieldNumber;
const int player_t::kBoxOpenSlotFieldNumber;
const int player_t::kBoxOpenTimeFieldNumber;
const int player_t::kSignTimeFieldNumber;
const int player_t::kSignIndexFieldNumber;
const int player_t::kSignFinishFieldNumber;
const int player_t::kRoleGuidFieldNumber;
const int player_t::kRoleOnFieldNumber;
const int player_t::kItemIdFieldNumber;
const int player_t::kItemNumFieldNumber;
const int player_t::kAvatarFieldNumber;
const int player_t::kAvatarOnFieldNumber;
const int player_t::kBattleHisGuidsFieldNumber;
const int player_t::kPostGuidsFieldNumber;
const int player_t::kAchieveIdFieldNumber;
const int player_t::kAchieveNumFieldNumber;
const int player_t::kAchieveRewardFieldNumber;
const int player_t::kAchieveTimeFieldNumber;
const int player_t::kAchievePointFieldNumber;
const int player_t::kAchieveIndexFieldNumber;
const int player_t::kToukuangFieldNumber;
const int player_t::kToukuangTimeFieldNumber;
const int player_t::kToukuangOnFieldNumber;
const int player_t::kTaskIdFieldNumber;
const int player_t::kTaskNumFieldNumber;
const int player_t::kTaskRewardFieldNumber;
const int player_t::kFashionIdFieldNumber;
const int player_t::kFashionOnFieldNumber;
const int player_t::kDailyIdFieldNumber;
const int player_t::kDailyNumFieldNumber;
const int player_t::kDailyRewardFieldNumber;
const int player_t::kDailyPointFieldNumber;
const int player_t::kDailyGetIdFieldNumber;
const int player_t::kLevelRewardFieldNumber;
const int player_t::kSocialGoldsFieldNumber;
const int player_t::kTotalRechargeFieldNumber;
const int player_t::kTotalSpendFieldNumber;
const int player_t::kChangeNameNumFieldNumber;
const int player_t::kFenxiangNumFieldNumber;
const int player_t::kFenxiangTotalNumFieldNumber;
const int player_t::kFenxiangStateFieldNumber;
const int player_t::kLibaoNumsFieldNumber;
const int player_t::kBattleNumFieldNumber;
const int player_t::kOfflineBattleTimeFieldNumber;
const int player_t::kFirstRechargeFieldNumber;
const int player_t::kYueTimeFieldNumber;
const int player_t::kYueRewardFieldNumber;
const int player_t::kYueFirstFieldNumber;
const int player_t::kNianTimeFieldNumber;
const int player_t::kNianRewardFieldNumber;
const int player_t::kNianFirstFieldNumber;
const int player_t::kDuobaoItemsFieldNumber;
const int player_t::kDuobaoNumFieldNumber;
const int player_t::kAdvertisementNumFieldNumber;
const int player_t::kAdvertisementTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_t::player_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_player_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.player_t)
}
player_t::player_t(const player_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      box_ids_(from.box_ids_),
      role_guid_(from.role_guid_),
      item_id_(from.item_id_),
      item_num_(from.item_num_),
      avatar_(from.avatar_),
      battle_his_guids_(from.battle_his_guids_),
      post_guids_(from.post_guids_),
      achieve_id_(from.achieve_id_),
      achieve_num_(from.achieve_num_),
      achieve_reward_(from.achieve_reward_),
      achieve_time_(from.achieve_time_),
      toukuang_(from.toukuang_),
      toukuang_time_(from.toukuang_time_),
      task_id_(from.task_id_),
      task_num_(from.task_num_),
      task_reward_(from.task_reward_),
      fashion_id_(from.fashion_id_),
      fashion_on_(from.fashion_on_),
      daily_id_(from.daily_id_),
      daily_num_(from.daily_num_),
      daily_reward_(from.daily_reward_),
      daily_get_id_(from.daily_get_id_),
      level_reward_(from.level_reward_),
      social_golds_(from.social_golds_),
      libao_nums_(from.libao_nums_),
      duobao_items_(from.duobao_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_infomation()) {
    infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&advertisement_time_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(advertisement_time_));
  // @@protoc_insertion_point(copy_constructor:dhc.player_t)
}

void player_t::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  infomation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advertisement_time_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(advertisement_time_));
}

player_t::~player_t() {
  // @@protoc_insertion_point(destructor:dhc.player_t)
  SharedDtor();
}

void player_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  infomation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void player_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* player_t::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_t& player_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_player_t.base);
  return *internal_default_instance();
}


void player_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.player_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  box_ids_.Clear();
  set_changed();
  role_guid_.Clear();
  set_changed();
  item_id_.Clear();
  set_changed();
  item_num_.Clear();
  set_changed();
  avatar_.Clear();
  set_changed();
  battle_his_guids_.Clear();
  set_changed();
  post_guids_.Clear();
  set_changed();
  achieve_id_.Clear();
  set_changed();
  achieve_num_.Clear();
  set_changed();
  achieve_reward_.Clear();
  set_changed();
  achieve_time_.Clear();
  set_changed();
  toukuang_.Clear();
  set_changed();
  toukuang_time_.Clear();
  set_changed();
  task_id_.Clear();
  set_changed();
  task_num_.Clear();
  set_changed();
  task_reward_.Clear();
  set_changed();
  fashion_id_.Clear();
  set_changed();
  fashion_on_.Clear();
  set_changed();
  daily_id_.Clear();
  set_changed();
  daily_num_.Clear();
  set_changed();
  daily_reward_.Clear();
  set_changed();
  daily_get_id_.Clear();
  set_changed();
  level_reward_.Clear();
  set_changed();
  social_golds_.Clear();
  set_changed();
  libao_nums_.Clear();
  set_changed();
  duobao_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_changed();
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      set_changed();
      infomation_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_week_time_) -
        reinterpret_cast<char*>(&guid_)) + sizeof(last_week_time_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&sex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_) -
        reinterpret_cast<char*>(&sex_)) + sizeof(level_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&exp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_lsha_) -
        reinterpret_cast<char*>(&exp_)) + sizeof(max_lsha_));
  }
  if (cached_has_bits & 4278190080u) {
    ::memset(&box_zd_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&advertisement_num_) -
        reinterpret_cast<char*>(&box_zd_num_)) + sizeof(advertisement_num_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 255u) {
    ::memset(&role_on_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_spend_) -
        reinterpret_cast<char*>(&role_on_)) + sizeof(total_spend_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&change_name_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&first_recharge_) -
        reinterpret_cast<char*>(&change_name_num_)) + sizeof(first_recharge_));
  }
  if (cached_has_bits & 8323072u) {
    ::memset(&yue_reward_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&advertisement_time_) -
        reinterpret_cast<char*>(&yue_reward_)) + sizeof(advertisement_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.player_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dhc.player_t.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 region_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string infomation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_infomation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->infomation().data(), static_cast<int>(this->infomation().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dhc.player_t.infomation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 birth_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_birth_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &birth_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_daily_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_last_daily_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_daily_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_week_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_last_week_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_week_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_month_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_last_month_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_month_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_login_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_last_login_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_login_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_check_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_last_check_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_check_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 is_guide = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_is_guide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_guide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 jewel = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_jewel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jewel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exp = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cup = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_cup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 snow = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_snow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 battle_gold = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          set_has_battle_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_cup = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_max_cup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_cup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_score = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_max_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_sha = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          set_has_max_sha();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_sha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_lsha = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_max_lsha();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_lsha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 box_zd_num = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_box_zd_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &box_zd_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 box_zd_opened = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {
          set_has_box_zd_opened();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &box_zd_opened_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 box_ids = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 416 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 416u, input, this->mutable_box_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_box_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 box_open_slot = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 424 & 0xFF */)) {
          set_has_box_open_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &box_open_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 box_open_time = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 432 & 0xFF */)) {
          set_has_box_open_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &box_open_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 sign_time = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 440 & 0xFF */)) {
          set_has_sign_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sign_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sign_index = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 448 & 0xFF */)) {
          set_has_sign_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sign_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sign_finish = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 456 & 0xFF */)) {
          set_has_sign_finish();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sign_finish_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 role_guid = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 800u, input, this->mutable_role_guid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_role_guid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 role_on = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 808 & 0xFF */)) {
          set_has_role_on();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_on_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 item_id = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 816 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 816u, input, this->mutable_item_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 item_num = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 824 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 824u, input, this->mutable_item_num())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_num())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 avatar = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 832 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 832u, input, this->mutable_avatar())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 834 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_avatar())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 avatar_on = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 848 & 0xFF */)) {
          set_has_avatar_on();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avatar_on_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 battle_his_guids = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 856 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 856u, input, this->mutable_battle_his_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 858 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_battle_his_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 post_guids = 109;
      case 109: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 872 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 872u, input, this->mutable_post_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 874 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_post_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 achieve_id = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 880 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 880u, input, this->mutable_achieve_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 882 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_achieve_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 achieve_num = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 888 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 888u, input, this->mutable_achieve_num())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 890 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_achieve_num())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 achieve_reward = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 896 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 896u, input, this->mutable_achieve_reward())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 898 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_achieve_reward())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 achieve_time = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 904 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 904u, input, this->mutable_achieve_time())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 906 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_achieve_time())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 achieve_point = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 912 & 0xFF */)) {
          set_has_achieve_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 achieve_index = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 920 & 0xFF */)) {
          set_has_achieve_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 toukuang = 116;
      case 116: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 928 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 928u, input, this->mutable_toukuang())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 930 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_toukuang())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 toukuang_time = 117;
      case 117: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 936 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 936u, input, this->mutable_toukuang_time())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 938 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_toukuang_time())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 toukuang_on = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 944 & 0xFF */)) {
          set_has_toukuang_on();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toukuang_on_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 task_id = 119;
      case 119: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 952 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 952u, input, this->mutable_task_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 954 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_task_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 task_num = 120;
      case 120: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 960 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 960u, input, this->mutable_task_num())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 962 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_task_num())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 task_reward = 121;
      case 121: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 968 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 968u, input, this->mutable_task_reward())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 970 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_task_reward())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 fashion_id = 122;
      case 122: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 976 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 976u, input, this->mutable_fashion_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 978 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fashion_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 fashion_on = 123;
      case 123: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 984 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 984u, input, this->mutable_fashion_on())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 986 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fashion_on())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 daily_id = 124;
      case 124: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 992 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 992u, input, this->mutable_daily_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 994 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_daily_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 daily_num = 125;
      case 125: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 1000 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 1000u, input, this->mutable_daily_num())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1002 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_daily_num())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 daily_reward = 126;
      case 126: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 1008 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 1008u, input, this->mutable_daily_reward())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1010 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_daily_reward())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 daily_point = 127;
      case 127: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 1016 & 0xFF */)) {
          set_has_daily_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 daily_get_id = 128;
      case 128: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 1024 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 1024u, input, this->mutable_daily_get_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 1026 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_daily_get_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 level_reward = 129;
      case 129: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 1032 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 1032u, input, this->mutable_level_reward())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1034 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_level_reward())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 social_golds = 130;
      case 130: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 1040 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 1040u, input, this->mutable_social_golds())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1042 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_social_golds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total_recharge = 301;
      case 301: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 2408 & 0xFF */)) {
          set_has_total_recharge();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_recharge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total_spend = 302;
      case 302: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 2416 & 0xFF */)) {
          set_has_total_spend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_spend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 change_name_num = 303;
      case 303: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 2424 & 0xFF */)) {
          set_has_change_name_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_name_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fenxiang_num = 304;
      case 304: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 2432 & 0xFF */)) {
          set_has_fenxiang_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fenxiang_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fenxiang_total_num = 305;
      case 305: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 2440 & 0xFF */)) {
          set_has_fenxiang_total_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fenxiang_total_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fenxiang_state = 306;
      case 306: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 2448 & 0xFF */)) {
          set_has_fenxiang_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fenxiang_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 libao_nums = 307;
      case 307: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 2456 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 2456u, input, this->mutable_libao_nums())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2458 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_libao_nums())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 battle_num = 308;
      case 308: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 2464 & 0xFF */)) {
          set_has_battle_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offline_battle_time = 309;
      case 309: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 2472 & 0xFF */)) {
          set_has_offline_battle_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offline_battle_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_recharge = 310;
      case 310: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 2480 & 0xFF */)) {
          set_has_first_recharge();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_recharge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 yue_time = 311;
      case 311: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 2488 & 0xFF */)) {
          set_has_yue_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &yue_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 yue_reward = 312;
      case 312: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 2496 & 0xFF */)) {
          set_has_yue_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yue_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 yue_first = 313;
      case 313: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 2504 & 0xFF */)) {
          set_has_yue_first();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yue_first_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 nian_time = 314;
      case 314: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 2512 & 0xFF */)) {
          set_has_nian_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nian_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nian_reward = 315;
      case 315: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 2520 & 0xFF */)) {
          set_has_nian_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nian_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nian_first = 316;
      case 316: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 2528 & 0xFF */)) {
          set_has_nian_first();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nian_first_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 duobao_items = 317;
      case 317: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 2536 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 2536u, input, this->mutable_duobao_items())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 2538 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_duobao_items())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duobao_num = 318;
      case 318: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 2544 & 0xFF */)) {
          set_has_duobao_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duobao_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 advertisement_num = 319;
      case 319: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 2552 & 0xFF */)) {
          set_has_advertisement_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advertisement_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 advertisement_time = 320;
      case 320: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 2560 & 0xFF */)) {
          set_has_advertisement_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &advertisement_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.player_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.player_t)
  return false;
#undef DO_
}

void player_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.player_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // optional int32 serverid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverid(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.player_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional int32 region_id = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->region_id(), output);
  }

  // optional string infomation = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), static_cast<int>(this->infomation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.player_t.infomation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->infomation(), output);
  }

  // optional int32 sex = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sex(), output);
  }

  // optional uint64 birth_time = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->birth_time(), output);
  }

  // optional uint64 last_daily_time = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->last_daily_time(), output);
  }

  // optional uint64 last_week_time = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->last_week_time(), output);
  }

  // optional uint64 last_month_time = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->last_month_time(), output);
  }

  // optional uint64 last_login_time = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->last_login_time(), output);
  }

  // optional uint64 last_check_time = 12;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->last_check_time(), output);
  }

  // optional int32 is_guide = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->is_guide(), output);
  }

  // optional int32 gold = 20;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->gold(), output);
  }

  // optional int32 jewel = 21;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->jewel(), output);
  }

  // optional int32 level = 22;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->level(), output);
  }

  // optional int32 exp = 23;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->exp(), output);
  }

  // optional int32 cup = 24;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->cup(), output);
  }

  // optional int32 snow = 25;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->snow(), output);
  }

  // optional int32 battle_gold = 26;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->battle_gold(), output);
  }

  // optional int32 max_cup = 27;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->max_cup(), output);
  }

  // optional int32 max_score = 28;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->max_score(), output);
  }

  // optional int32 max_sha = 29;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->max_sha(), output);
  }

  // optional int32 max_lsha = 30;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->max_lsha(), output);
  }

  // optional int32 box_zd_num = 50;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->box_zd_num(), output);
  }

  // optional int32 box_zd_opened = 51;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(51, this->box_zd_opened(), output);
  }

  // repeated int32 box_ids = 52;
  for (int i = 0, n = this->box_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      52, this->box_ids(i), output);
  }

  // optional int32 box_open_slot = 53;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(53, this->box_open_slot(), output);
  }

  // optional uint64 box_open_time = 54;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(54, this->box_open_time(), output);
  }

  // optional uint64 sign_time = 55;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(55, this->sign_time(), output);
  }

  // optional int32 sign_index = 56;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(56, this->sign_index(), output);
  }

  // optional int32 sign_finish = 57;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(57, this->sign_finish(), output);
  }

  // repeated uint64 role_guid = 100;
  for (int i = 0, n = this->role_guid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      100, this->role_guid(i), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint64 role_on = 101;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(101, this->role_on(), output);
  }

  // repeated int32 item_id = 102;
  for (int i = 0, n = this->item_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      102, this->item_id(i), output);
  }

  // repeated int32 item_num = 103;
  for (int i = 0, n = this->item_num_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      103, this->item_num(i), output);
  }

  // repeated int32 avatar = 104;
  for (int i = 0, n = this->avatar_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      104, this->avatar(i), output);
  }

  // optional int32 avatar_on = 106;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(106, this->avatar_on(), output);
  }

  // repeated uint64 battle_his_guids = 107;
  for (int i = 0, n = this->battle_his_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      107, this->battle_his_guids(i), output);
  }

  // repeated uint64 post_guids = 109;
  for (int i = 0, n = this->post_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      109, this->post_guids(i), output);
  }

  // repeated int32 achieve_id = 110;
  for (int i = 0, n = this->achieve_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      110, this->achieve_id(i), output);
  }

  // repeated int32 achieve_num = 111;
  for (int i = 0, n = this->achieve_num_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      111, this->achieve_num(i), output);
  }

  // repeated int32 achieve_reward = 112;
  for (int i = 0, n = this->achieve_reward_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      112, this->achieve_reward(i), output);
  }

  // repeated uint64 achieve_time = 113;
  for (int i = 0, n = this->achieve_time_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      113, this->achieve_time(i), output);
  }

  // optional int32 achieve_point = 114;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(114, this->achieve_point(), output);
  }

  // optional int32 achieve_index = 115;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(115, this->achieve_index(), output);
  }

  // repeated int32 toukuang = 116;
  for (int i = 0, n = this->toukuang_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      116, this->toukuang(i), output);
  }

  // repeated uint64 toukuang_time = 117;
  for (int i = 0, n = this->toukuang_time_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      117, this->toukuang_time(i), output);
  }

  // optional int32 toukuang_on = 118;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(118, this->toukuang_on(), output);
  }

  // repeated int32 task_id = 119;
  for (int i = 0, n = this->task_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      119, this->task_id(i), output);
  }

  // repeated int32 task_num = 120;
  for (int i = 0, n = this->task_num_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      120, this->task_num(i), output);
  }

  // repeated int32 task_reward = 121;
  for (int i = 0, n = this->task_reward_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      121, this->task_reward(i), output);
  }

  // repeated int32 fashion_id = 122;
  for (int i = 0, n = this->fashion_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      122, this->fashion_id(i), output);
  }

  // repeated int32 fashion_on = 123;
  for (int i = 0, n = this->fashion_on_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      123, this->fashion_on(i), output);
  }

  // repeated int32 daily_id = 124;
  for (int i = 0, n = this->daily_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      124, this->daily_id(i), output);
  }

  // repeated int32 daily_num = 125;
  for (int i = 0, n = this->daily_num_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      125, this->daily_num(i), output);
  }

  // repeated int32 daily_reward = 126;
  for (int i = 0, n = this->daily_reward_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      126, this->daily_reward(i), output);
  }

  // optional int32 daily_point = 127;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(127, this->daily_point(), output);
  }

  // repeated int32 daily_get_id = 128;
  for (int i = 0, n = this->daily_get_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      128, this->daily_get_id(i), output);
  }

  // repeated int32 level_reward = 129;
  for (int i = 0, n = this->level_reward_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      129, this->level_reward(i), output);
  }

  // repeated uint64 social_golds = 130;
  for (int i = 0, n = this->social_golds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      130, this->social_golds(i), output);
  }

  // optional int32 total_recharge = 301;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(301, this->total_recharge(), output);
  }

  // optional int32 total_spend = 302;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(302, this->total_spend(), output);
  }

  // optional int32 change_name_num = 303;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(303, this->change_name_num(), output);
  }

  // optional int32 fenxiang_num = 304;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(304, this->fenxiang_num(), output);
  }

  // optional int32 fenxiang_total_num = 305;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(305, this->fenxiang_total_num(), output);
  }

  // optional int32 fenxiang_state = 306;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(306, this->fenxiang_state(), output);
  }

  // repeated int32 libao_nums = 307;
  for (int i = 0, n = this->libao_nums_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      307, this->libao_nums(i), output);
  }

  // optional int32 battle_num = 308;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(308, this->battle_num(), output);
  }

  // optional uint64 offline_battle_time = 309;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(309, this->offline_battle_time(), output);
  }

  // optional int32 first_recharge = 310;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(310, this->first_recharge(), output);
  }

  // optional uint64 yue_time = 311;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(311, this->yue_time(), output);
  }

  // optional int32 yue_reward = 312;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(312, this->yue_reward(), output);
  }

  // optional int32 yue_first = 313;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(313, this->yue_first(), output);
  }

  // optional uint64 nian_time = 314;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(314, this->nian_time(), output);
  }

  // optional int32 nian_reward = 315;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(315, this->nian_reward(), output);
  }

  // optional int32 nian_first = 316;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(316, this->nian_first(), output);
  }

  // repeated int32 duobao_items = 317;
  for (int i = 0, n = this->duobao_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      317, this->duobao_items(i), output);
  }

  // optional int32 duobao_num = 318;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(318, this->duobao_num(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 advertisement_num = 319;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(319, this->advertisement_num(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint64 advertisement_time = 320;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(320, this->advertisement_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.player_t)
}

::google::protobuf::uint8* player_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.player_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // optional int32 serverid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverid(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.player_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional int32 region_id = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->region_id(), target);
  }

  // optional string infomation = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomation().data(), static_cast<int>(this->infomation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.player_t.infomation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->infomation(), target);
  }

  // optional int32 sex = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sex(), target);
  }

  // optional uint64 birth_time = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->birth_time(), target);
  }

  // optional uint64 last_daily_time = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->last_daily_time(), target);
  }

  // optional uint64 last_week_time = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->last_week_time(), target);
  }

  // optional uint64 last_month_time = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->last_month_time(), target);
  }

  // optional uint64 last_login_time = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->last_login_time(), target);
  }

  // optional uint64 last_check_time = 12;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->last_check_time(), target);
  }

  // optional int32 is_guide = 13;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->is_guide(), target);
  }

  // optional int32 gold = 20;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->gold(), target);
  }

  // optional int32 jewel = 21;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->jewel(), target);
  }

  // optional int32 level = 22;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->level(), target);
  }

  // optional int32 exp = 23;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->exp(), target);
  }

  // optional int32 cup = 24;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->cup(), target);
  }

  // optional int32 snow = 25;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->snow(), target);
  }

  // optional int32 battle_gold = 26;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->battle_gold(), target);
  }

  // optional int32 max_cup = 27;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->max_cup(), target);
  }

  // optional int32 max_score = 28;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->max_score(), target);
  }

  // optional int32 max_sha = 29;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->max_sha(), target);
  }

  // optional int32 max_lsha = 30;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->max_lsha(), target);
  }

  // optional int32 box_zd_num = 50;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->box_zd_num(), target);
  }

  // optional int32 box_zd_opened = 51;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(51, this->box_zd_opened(), target);
  }

  // repeated int32 box_ids = 52;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(52, this->box_ids_, target);

  // optional int32 box_open_slot = 53;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(53, this->box_open_slot(), target);
  }

  // optional uint64 box_open_time = 54;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(54, this->box_open_time(), target);
  }

  // optional uint64 sign_time = 55;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(55, this->sign_time(), target);
  }

  // optional int32 sign_index = 56;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(56, this->sign_index(), target);
  }

  // optional int32 sign_finish = 57;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(57, this->sign_finish(), target);
  }

  // repeated uint64 role_guid = 100;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(100, this->role_guid_, target);

  cached_has_bits = _has_bits_[1];
  // optional uint64 role_on = 101;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(101, this->role_on(), target);
  }

  // repeated int32 item_id = 102;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(102, this->item_id_, target);

  // repeated int32 item_num = 103;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(103, this->item_num_, target);

  // repeated int32 avatar = 104;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(104, this->avatar_, target);

  // optional int32 avatar_on = 106;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(106, this->avatar_on(), target);
  }

  // repeated uint64 battle_his_guids = 107;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(107, this->battle_his_guids_, target);

  // repeated uint64 post_guids = 109;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(109, this->post_guids_, target);

  // repeated int32 achieve_id = 110;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(110, this->achieve_id_, target);

  // repeated int32 achieve_num = 111;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(111, this->achieve_num_, target);

  // repeated int32 achieve_reward = 112;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(112, this->achieve_reward_, target);

  // repeated uint64 achieve_time = 113;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(113, this->achieve_time_, target);

  // optional int32 achieve_point = 114;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(114, this->achieve_point(), target);
  }

  // optional int32 achieve_index = 115;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(115, this->achieve_index(), target);
  }

  // repeated int32 toukuang = 116;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(116, this->toukuang_, target);

  // repeated uint64 toukuang_time = 117;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(117, this->toukuang_time_, target);

  // optional int32 toukuang_on = 118;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(118, this->toukuang_on(), target);
  }

  // repeated int32 task_id = 119;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(119, this->task_id_, target);

  // repeated int32 task_num = 120;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(120, this->task_num_, target);

  // repeated int32 task_reward = 121;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(121, this->task_reward_, target);

  // repeated int32 fashion_id = 122;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(122, this->fashion_id_, target);

  // repeated int32 fashion_on = 123;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(123, this->fashion_on_, target);

  // repeated int32 daily_id = 124;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(124, this->daily_id_, target);

  // repeated int32 daily_num = 125;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(125, this->daily_num_, target);

  // repeated int32 daily_reward = 126;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(126, this->daily_reward_, target);

  // optional int32 daily_point = 127;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(127, this->daily_point(), target);
  }

  // repeated int32 daily_get_id = 128;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(128, this->daily_get_id_, target);

  // repeated int32 level_reward = 129;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(129, this->level_reward_, target);

  // repeated uint64 social_golds = 130;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(130, this->social_golds_, target);

  // optional int32 total_recharge = 301;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(301, this->total_recharge(), target);
  }

  // optional int32 total_spend = 302;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(302, this->total_spend(), target);
  }

  // optional int32 change_name_num = 303;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(303, this->change_name_num(), target);
  }

  // optional int32 fenxiang_num = 304;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(304, this->fenxiang_num(), target);
  }

  // optional int32 fenxiang_total_num = 305;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(305, this->fenxiang_total_num(), target);
  }

  // optional int32 fenxiang_state = 306;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(306, this->fenxiang_state(), target);
  }

  // repeated int32 libao_nums = 307;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(307, this->libao_nums_, target);

  // optional int32 battle_num = 308;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(308, this->battle_num(), target);
  }

  // optional uint64 offline_battle_time = 309;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(309, this->offline_battle_time(), target);
  }

  // optional int32 first_recharge = 310;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(310, this->first_recharge(), target);
  }

  // optional uint64 yue_time = 311;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(311, this->yue_time(), target);
  }

  // optional int32 yue_reward = 312;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(312, this->yue_reward(), target);
  }

  // optional int32 yue_first = 313;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(313, this->yue_first(), target);
  }

  // optional uint64 nian_time = 314;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(314, this->nian_time(), target);
  }

  // optional int32 nian_reward = 315;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(315, this->nian_reward(), target);
  }

  // optional int32 nian_first = 316;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(316, this->nian_first(), target);
  }

  // repeated int32 duobao_items = 317;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(317, this->duobao_items_, target);

  // optional int32 duobao_num = 318;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(318, this->duobao_num(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 advertisement_num = 319;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(319, this->advertisement_num(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint64 advertisement_time = 320;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(320, this->advertisement_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.player_t)
  return target;
}

size_t player_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.player_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 box_ids = 52;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->box_ids_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->box_ids_size());
    total_size += data_size;
  }

  // repeated uint64 role_guid = 100;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->role_guid_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->role_guid_size());
    total_size += data_size;
  }

  // repeated int32 item_id = 102;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->item_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->item_id_size());
    total_size += data_size;
  }

  // repeated int32 item_num = 103;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->item_num_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->item_num_size());
    total_size += data_size;
  }

  // repeated int32 avatar = 104;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->avatar_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->avatar_size());
    total_size += data_size;
  }

  // repeated uint64 battle_his_guids = 107;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->battle_his_guids_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->battle_his_guids_size());
    total_size += data_size;
  }

  // repeated uint64 post_guids = 109;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->post_guids_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->post_guids_size());
    total_size += data_size;
  }

  // repeated int32 achieve_id = 110;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->achieve_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->achieve_id_size());
    total_size += data_size;
  }

  // repeated int32 achieve_num = 111;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->achieve_num_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->achieve_num_size());
    total_size += data_size;
  }

  // repeated int32 achieve_reward = 112;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->achieve_reward_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->achieve_reward_size());
    total_size += data_size;
  }

  // repeated uint64 achieve_time = 113;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->achieve_time_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->achieve_time_size());
    total_size += data_size;
  }

  // repeated int32 toukuang = 116;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->toukuang_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->toukuang_size());
    total_size += data_size;
  }

  // repeated uint64 toukuang_time = 117;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->toukuang_time_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->toukuang_time_size());
    total_size += data_size;
  }

  // repeated int32 task_id = 119;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->task_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->task_id_size());
    total_size += data_size;
  }

  // repeated int32 task_num = 120;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->task_num_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->task_num_size());
    total_size += data_size;
  }

  // repeated int32 task_reward = 121;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->task_reward_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->task_reward_size());
    total_size += data_size;
  }

  // repeated int32 fashion_id = 122;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->fashion_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->fashion_id_size());
    total_size += data_size;
  }

  // repeated int32 fashion_on = 123;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->fashion_on_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->fashion_on_size());
    total_size += data_size;
  }

  // repeated int32 daily_id = 124;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->daily_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->daily_id_size());
    total_size += data_size;
  }

  // repeated int32 daily_num = 125;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->daily_num_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->daily_num_size());
    total_size += data_size;
  }

  // repeated int32 daily_reward = 126;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->daily_reward_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->daily_reward_size());
    total_size += data_size;
  }

  // repeated int32 daily_get_id = 128;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->daily_get_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->daily_get_id_size());
    total_size += data_size;
  }

  // repeated int32 level_reward = 129;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->level_reward_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->level_reward_size());
    total_size += data_size;
  }

  // repeated uint64 social_golds = 130;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->social_golds_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->social_golds_size());
    total_size += data_size;
  }

  // repeated int32 libao_nums = 307;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->libao_nums_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->libao_nums_size());
    total_size += data_size;
  }

  // repeated int32 duobao_items = 317;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->duobao_items_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->duobao_items_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string infomation = 5;
    if (has_infomation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->infomation());
    }

    // optional uint64 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional int32 serverid = 2;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serverid());
    }

    // optional int32 region_id = 4;
    if (has_region_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->region_id());
    }

    // optional uint64 birth_time = 7;
    if (has_birth_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->birth_time());
    }

    // optional uint64 last_daily_time = 8;
    if (has_last_daily_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_daily_time());
    }

    // optional uint64 last_week_time = 9;
    if (has_last_week_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_week_time());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 sex = 6;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 is_guide = 13;
    if (has_is_guide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_guide());
    }

    // optional uint64 last_month_time = 10;
    if (has_last_month_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_month_time());
    }

    // optional uint64 last_login_time = 11;
    if (has_last_login_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_login_time());
    }

    // optional uint64 last_check_time = 12;
    if (has_last_check_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_check_time());
    }

    // optional int32 gold = 20;
    if (has_gold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional int32 jewel = 21;
    if (has_jewel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jewel());
    }

    // optional int32 level = 22;
    if (has_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional int32 exp = 23;
    if (has_exp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

    // optional int32 cup = 24;
    if (has_cup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cup());
    }

    // optional int32 snow = 25;
    if (has_snow()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->snow());
    }

    // optional int32 battle_gold = 26;
    if (has_battle_gold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->battle_gold());
    }

    // optional int32 max_cup = 27;
    if (has_max_cup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_cup());
    }

    // optional int32 max_score = 28;
    if (has_max_score()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_score());
    }

    // optional int32 max_sha = 29;
    if (has_max_sha()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_sha());
    }

    // optional int32 max_lsha = 30;
    if (has_max_lsha()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_lsha());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional int32 box_zd_num = 50;
    if (has_box_zd_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->box_zd_num());
    }

    // optional int32 box_zd_opened = 51;
    if (has_box_zd_opened()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->box_zd_opened());
    }

    // optional int32 box_open_slot = 53;
    if (has_box_open_slot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->box_open_slot());
    }

    // optional uint64 box_open_time = 54;
    if (has_box_open_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->box_open_time());
    }

    // optional uint64 sign_time = 55;
    if (has_sign_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sign_time());
    }

    // optional int32 sign_index = 56;
    if (has_sign_index()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sign_index());
    }

    // optional int32 sign_finish = 57;
    if (has_sign_finish()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sign_finish());
    }

    // optional int32 advertisement_num = 319;
    if (has_advertisement_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advertisement_num());
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional uint64 role_on = 101;
    if (has_role_on()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->role_on());
    }

    // optional int32 avatar_on = 106;
    if (has_avatar_on()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->avatar_on());
    }

    // optional int32 achieve_point = 114;
    if (has_achieve_point()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achieve_point());
    }

    // optional int32 achieve_index = 115;
    if (has_achieve_index()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achieve_index());
    }

    // optional int32 toukuang_on = 118;
    if (has_toukuang_on()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toukuang_on());
    }

    // optional int32 daily_point = 127;
    if (has_daily_point()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daily_point());
    }

    // optional int32 total_recharge = 301;
    if (has_total_recharge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_recharge());
    }

    // optional int32 total_spend = 302;
    if (has_total_spend()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_spend());
    }

  }
  if (_has_bits_[40 / 32] & 65280u) {
    // optional int32 change_name_num = 303;
    if (has_change_name_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change_name_num());
    }

    // optional int32 fenxiang_num = 304;
    if (has_fenxiang_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fenxiang_num());
    }

    // optional int32 fenxiang_total_num = 305;
    if (has_fenxiang_total_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fenxiang_total_num());
    }

    // optional int32 fenxiang_state = 306;
    if (has_fenxiang_state()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fenxiang_state());
    }

    // optional int32 battle_num = 308;
    if (has_battle_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->battle_num());
    }

    // optional uint64 offline_battle_time = 309;
    if (has_offline_battle_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offline_battle_time());
    }

    // optional uint64 yue_time = 311;
    if (has_yue_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->yue_time());
    }

    // optional int32 first_recharge = 310;
    if (has_first_recharge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_recharge());
    }

  }
  if (_has_bits_[48 / 32] & 8323072u) {
    // optional int32 yue_reward = 312;
    if (has_yue_reward()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yue_reward());
    }

    // optional uint64 nian_time = 314;
    if (has_nian_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nian_time());
    }

    // optional int32 yue_first = 313;
    if (has_yue_first()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yue_first());
    }

    // optional int32 nian_reward = 315;
    if (has_nian_reward()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nian_reward());
    }

    // optional int32 nian_first = 316;
    if (has_nian_first()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nian_first());
    }

    // optional int32 duobao_num = 318;
    if (has_duobao_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duobao_num());
    }

    // optional uint64 advertisement_time = 320;
    if (has_advertisement_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->advertisement_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void player_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.player_t)
  GOOGLE_DCHECK_NE(&from, this);
  const player_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.player_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.player_t)
    MergeFrom(*source);
  }
}

void player_t::MergeFrom(const player_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.player_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  box_ids_.MergeFrom(from.box_ids_);
  role_guid_.MergeFrom(from.role_guid_);
  item_id_.MergeFrom(from.item_id_);
  item_num_.MergeFrom(from.item_num_);
  avatar_.MergeFrom(from.avatar_);
  battle_his_guids_.MergeFrom(from.battle_his_guids_);
  post_guids_.MergeFrom(from.post_guids_);
  achieve_id_.MergeFrom(from.achieve_id_);
  achieve_num_.MergeFrom(from.achieve_num_);
  achieve_reward_.MergeFrom(from.achieve_reward_);
  achieve_time_.MergeFrom(from.achieve_time_);
  toukuang_.MergeFrom(from.toukuang_);
  toukuang_time_.MergeFrom(from.toukuang_time_);
  task_id_.MergeFrom(from.task_id_);
  task_num_.MergeFrom(from.task_num_);
  task_reward_.MergeFrom(from.task_reward_);
  fashion_id_.MergeFrom(from.fashion_id_);
  fashion_on_.MergeFrom(from.fashion_on_);
  daily_id_.MergeFrom(from.daily_id_);
  daily_num_.MergeFrom(from.daily_num_);
  daily_reward_.MergeFrom(from.daily_reward_);
  daily_get_id_.MergeFrom(from.daily_get_id_);
  level_reward_.MergeFrom(from.level_reward_);
  social_golds_.MergeFrom(from.social_golds_);
  libao_nums_.MergeFrom(from.libao_nums_);
  duobao_items_.MergeFrom(from.duobao_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_infomation();
      infomation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomation_);
    }
    if (cached_has_bits & 0x00000004u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      serverid_ = from.serverid_;
    }
    if (cached_has_bits & 0x00000010u) {
      region_id_ = from.region_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      birth_time_ = from.birth_time_;
    }
    if (cached_has_bits & 0x00000040u) {
      last_daily_time_ = from.last_daily_time_;
    }
    if (cached_has_bits & 0x00000080u) {
      last_week_time_ = from.last_week_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_guide_ = from.is_guide_;
    }
    if (cached_has_bits & 0x00000400u) {
      last_month_time_ = from.last_month_time_;
    }
    if (cached_has_bits & 0x00000800u) {
      last_login_time_ = from.last_login_time_;
    }
    if (cached_has_bits & 0x00001000u) {
      last_check_time_ = from.last_check_time_;
    }
    if (cached_has_bits & 0x00002000u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00004000u) {
      jewel_ = from.jewel_;
    }
    if (cached_has_bits & 0x00008000u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00020000u) {
      cup_ = from.cup_;
    }
    if (cached_has_bits & 0x00040000u) {
      snow_ = from.snow_;
    }
    if (cached_has_bits & 0x00080000u) {
      battle_gold_ = from.battle_gold_;
    }
    if (cached_has_bits & 0x00100000u) {
      max_cup_ = from.max_cup_;
    }
    if (cached_has_bits & 0x00200000u) {
      max_score_ = from.max_score_;
    }
    if (cached_has_bits & 0x00400000u) {
      max_sha_ = from.max_sha_;
    }
    if (cached_has_bits & 0x00800000u) {
      max_lsha_ = from.max_lsha_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      box_zd_num_ = from.box_zd_num_;
    }
    if (cached_has_bits & 0x02000000u) {
      box_zd_opened_ = from.box_zd_opened_;
    }
    if (cached_has_bits & 0x04000000u) {
      box_open_slot_ = from.box_open_slot_;
    }
    if (cached_has_bits & 0x08000000u) {
      box_open_time_ = from.box_open_time_;
    }
    if (cached_has_bits & 0x10000000u) {
      sign_time_ = from.sign_time_;
    }
    if (cached_has_bits & 0x20000000u) {
      sign_index_ = from.sign_index_;
    }
    if (cached_has_bits & 0x40000000u) {
      sign_finish_ = from.sign_finish_;
    }
    if (cached_has_bits & 0x80000000u) {
      advertisement_num_ = from.advertisement_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      role_on_ = from.role_on_;
    }
    if (cached_has_bits & 0x00000002u) {
      avatar_on_ = from.avatar_on_;
    }
    if (cached_has_bits & 0x00000004u) {
      achieve_point_ = from.achieve_point_;
    }
    if (cached_has_bits & 0x00000008u) {
      achieve_index_ = from.achieve_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      toukuang_on_ = from.toukuang_on_;
    }
    if (cached_has_bits & 0x00000020u) {
      daily_point_ = from.daily_point_;
    }
    if (cached_has_bits & 0x00000040u) {
      total_recharge_ = from.total_recharge_;
    }
    if (cached_has_bits & 0x00000080u) {
      total_spend_ = from.total_spend_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      change_name_num_ = from.change_name_num_;
    }
    if (cached_has_bits & 0x00000200u) {
      fenxiang_num_ = from.fenxiang_num_;
    }
    if (cached_has_bits & 0x00000400u) {
      fenxiang_total_num_ = from.fenxiang_total_num_;
    }
    if (cached_has_bits & 0x00000800u) {
      fenxiang_state_ = from.fenxiang_state_;
    }
    if (cached_has_bits & 0x00001000u) {
      battle_num_ = from.battle_num_;
    }
    if (cached_has_bits & 0x00002000u) {
      offline_battle_time_ = from.offline_battle_time_;
    }
    if (cached_has_bits & 0x00004000u) {
      yue_time_ = from.yue_time_;
    }
    if (cached_has_bits & 0x00008000u) {
      first_recharge_ = from.first_recharge_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 8323072u) {
    if (cached_has_bits & 0x00010000u) {
      yue_reward_ = from.yue_reward_;
    }
    if (cached_has_bits & 0x00020000u) {
      nian_time_ = from.nian_time_;
    }
    if (cached_has_bits & 0x00040000u) {
      yue_first_ = from.yue_first_;
    }
    if (cached_has_bits & 0x00080000u) {
      nian_reward_ = from.nian_reward_;
    }
    if (cached_has_bits & 0x00100000u) {
      nian_first_ = from.nian_first_;
    }
    if (cached_has_bits & 0x00200000u) {
      duobao_num_ = from.duobao_num_;
    }
    if (cached_has_bits & 0x00400000u) {
      advertisement_time_ = from.advertisement_time_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void player_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.player_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_t::CopyFrom(const player_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.player_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_t::IsInitialized() const {
  return true;
}

void player_t::Swap(player_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_t::InternalSwap(player_t* other) {
  using std::swap;
  box_ids_.InternalSwap(&other->box_ids_);
  role_guid_.InternalSwap(&other->role_guid_);
  item_id_.InternalSwap(&other->item_id_);
  item_num_.InternalSwap(&other->item_num_);
  avatar_.InternalSwap(&other->avatar_);
  battle_his_guids_.InternalSwap(&other->battle_his_guids_);
  post_guids_.InternalSwap(&other->post_guids_);
  achieve_id_.InternalSwap(&other->achieve_id_);
  achieve_num_.InternalSwap(&other->achieve_num_);
  achieve_reward_.InternalSwap(&other->achieve_reward_);
  achieve_time_.InternalSwap(&other->achieve_time_);
  toukuang_.InternalSwap(&other->toukuang_);
  toukuang_time_.InternalSwap(&other->toukuang_time_);
  task_id_.InternalSwap(&other->task_id_);
  task_num_.InternalSwap(&other->task_num_);
  task_reward_.InternalSwap(&other->task_reward_);
  fashion_id_.InternalSwap(&other->fashion_id_);
  fashion_on_.InternalSwap(&other->fashion_on_);
  daily_id_.InternalSwap(&other->daily_id_);
  daily_num_.InternalSwap(&other->daily_num_);
  daily_reward_.InternalSwap(&other->daily_reward_);
  daily_get_id_.InternalSwap(&other->daily_get_id_);
  level_reward_.InternalSwap(&other->level_reward_);
  social_golds_.InternalSwap(&other->social_golds_);
  libao_nums_.InternalSwap(&other->libao_nums_);
  duobao_items_.InternalSwap(&other->duobao_items_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  infomation_.Swap(&other->infomation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(serverid_, other->serverid_);
  swap(region_id_, other->region_id_);
  swap(birth_time_, other->birth_time_);
  swap(last_daily_time_, other->last_daily_time_);
  swap(last_week_time_, other->last_week_time_);
  swap(sex_, other->sex_);
  swap(is_guide_, other->is_guide_);
  swap(last_month_time_, other->last_month_time_);
  swap(last_login_time_, other->last_login_time_);
  swap(last_check_time_, other->last_check_time_);
  swap(gold_, other->gold_);
  swap(jewel_, other->jewel_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(cup_, other->cup_);
  swap(snow_, other->snow_);
  swap(battle_gold_, other->battle_gold_);
  swap(max_cup_, other->max_cup_);
  swap(max_score_, other->max_score_);
  swap(max_sha_, other->max_sha_);
  swap(max_lsha_, other->max_lsha_);
  swap(box_zd_num_, other->box_zd_num_);
  swap(box_zd_opened_, other->box_zd_opened_);
  swap(box_open_slot_, other->box_open_slot_);
  swap(box_open_time_, other->box_open_time_);
  swap(sign_time_, other->sign_time_);
  swap(sign_index_, other->sign_index_);
  swap(sign_finish_, other->sign_finish_);
  swap(advertisement_num_, other->advertisement_num_);
  swap(role_on_, other->role_on_);
  swap(avatar_on_, other->avatar_on_);
  swap(achieve_point_, other->achieve_point_);
  swap(achieve_index_, other->achieve_index_);
  swap(toukuang_on_, other->toukuang_on_);
  swap(daily_point_, other->daily_point_);
  swap(total_recharge_, other->total_recharge_);
  swap(total_spend_, other->total_spend_);
  swap(change_name_num_, other->change_name_num_);
  swap(fenxiang_num_, other->fenxiang_num_);
  swap(fenxiang_total_num_, other->fenxiang_total_num_);
  swap(fenxiang_state_, other->fenxiang_state_);
  swap(battle_num_, other->battle_num_);
  swap(offline_battle_time_, other->offline_battle_time_);
  swap(yue_time_, other->yue_time_);
  swap(first_recharge_, other->first_recharge_);
  swap(yue_reward_, other->yue_reward_);
  swap(nian_time_, other->nian_time_);
  swap(yue_first_, other->yue_first_);
  swap(nian_reward_, other->nian_reward_);
  swap(nian_first_, other->nian_first_);
  swap(duobao_num_, other->duobao_num_);
  swap(advertisement_time_, other->advertisement_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata player_t::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::player_t* Arena::CreateMaybeMessage< ::dhc::player_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::player_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
