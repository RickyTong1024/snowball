// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role.proto

#ifndef PROTOBUF_INCLUDED_role_2eproto
#define PROTOBUF_INCLUDED_role_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_role_2eproto 

namespace protobuf_role_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_role_2eproto
namespace dhc {
class role_t;
class role_tDefaultTypeInternal;
extern role_tDefaultTypeInternal _role_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::role_t* Arena::CreateMaybeMessage<::dhc::role_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class role_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.role_t) */ {
 public:
  role_t();
  virtual ~role_t();

  role_t(const role_t& from);

  inline role_t& operator=(const role_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  role_t(role_t&& from) noexcept
    : role_t() {
    *this = ::std::move(from);
  }

  inline role_t& operator=(role_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const role_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const role_t* internal_default_instance() {
    return reinterpret_cast<const role_t*>(
               &_role_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(role_t* other);
  friend void swap(role_t& a, role_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline role_t* New() const final {
    return CreateMaybeMessage<role_t>(NULL);
  }

  role_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<role_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const role_t& from);
  void MergeFrom(const role_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(role_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // optional uint64 player_guid = 2;
  bool has_player_guid() const;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // optional int32 template_id = 3;
  bool has_template_id() const;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 3;
  ::google::protobuf::int32 template_id() const;
  void set_template_id(::google::protobuf::int32 value);

  // optional int32 level = 4;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dhc.role_t)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_player_guid();
  void clear_has_player_guid();
  void set_has_template_id();
  void clear_has_template_id();
  void set_has_level();
  void clear_has_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::int32 level_;
  friend struct ::protobuf_role_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// role_t

// optional uint64 guid = 1;
inline bool role_t::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void role_t::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void role_t::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void role_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 role_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.role_t.guid)
  return guid_;
}
inline void role_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.role_t.guid)
}

// optional uint64 player_guid = 2;
inline bool role_t::has_player_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void role_t::set_has_player_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void role_t::clear_has_player_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void role_t::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_player_guid();
}
inline ::google::protobuf::uint64 role_t::player_guid() const {
  // @@protoc_insertion_point(field_get:dhc.role_t.player_guid)
  return player_guid_;
}
inline void role_t::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  set_has_player_guid();
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.role_t.player_guid)
}

// optional int32 template_id = 3;
inline bool role_t::has_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void role_t::set_has_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void role_t::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void role_t::clear_template_id() {
  set_changed();
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 role_t::template_id() const {
  // @@protoc_insertion_point(field_get:dhc.role_t.template_id)
  return template_id_;
}
inline void role_t::set_template_id(::google::protobuf::int32 value) {
  set_changed();
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:dhc.role_t.template_id)
}

// optional int32 level = 4;
inline bool role_t::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void role_t::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void role_t::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void role_t::clear_level() {
  set_changed();
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 role_t::level() const {
  // @@protoc_insertion_point(field_get:dhc.role_t.level)
  return level_;
}
inline void role_t::set_level(::google::protobuf::int32 value) {
  set_changed();
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:dhc.role_t.level)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_role_2eproto
