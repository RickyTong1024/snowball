// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: social.proto

#include "social.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class social_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<social_t>
      _instance;
} _social_t_default_instance_;
}  // namespace dhc
namespace protobuf_social_2eproto {
static void InitDefaultssocial_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_social_t_default_instance_;
    new (ptr) ::dhc::social_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::social_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_social_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssocial_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_social_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, cup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, toukuang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, stype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, sflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, verify_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, msgs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, msgtimes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, ttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, name_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, achieve_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, max_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, max_sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, max_lsha_),
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  1,
  13,
  ~0u,
  ~0u,
  15,
  14,
  16,
  17,
  18,
  19,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 27, sizeof(::dhc::social_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_social_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "social.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014social.proto\022\003dhc\"\372\002\n\010social_t\022\014\n\004guid"
      "\030\001 \001(\004\022\023\n\013player_guid\030\002 \001(\004\022\023\n\013target_gu"
      "id\030\003 \001(\004\022\014\n\004name\030\004 \001(\t\022\013\n\003cup\030\005 \001(\005\022\016\n\006a"
      "vatar\030\007 \001(\005\022\020\n\010toukuang\030\010 \001(\005\022\021\n\tregion_"
      "id\030\t \001(\005\022\r\n\005level\030\n \001(\005\022\013\n\003sex\030\013 \001(\005\022\r\n\005"
      "stype\030\014 \001(\005\022\r\n\005sflag\030\r \001(\005\022\016\n\006verify\030\016 \001"
      "(\t\022\014\n\004gold\030\017 \001(\005\022\014\n\004msgs\030\020 \003(\t\022\020\n\010msgtim"
      "es\030\021 \003(\004\022\r\n\005ttime\030\022 \001(\004\022\022\n\nname_color\030\023 "
      "\001(\005\022\025\n\rachieve_point\030\025 \001(\005\022\021\n\tmax_score\030"
      "\026 \001(\005\022\017\n\007max_sha\030\027 \001(\005\022\020\n\010max_lsha\030\030 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 400);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "social.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_social_2eproto
namespace dhc {

// ===================================================================

void social_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int social_t::kGuidFieldNumber;
const int social_t::kPlayerGuidFieldNumber;
const int social_t::kTargetGuidFieldNumber;
const int social_t::kNameFieldNumber;
const int social_t::kCupFieldNumber;
const int social_t::kAvatarFieldNumber;
const int social_t::kToukuangFieldNumber;
const int social_t::kRegionIdFieldNumber;
const int social_t::kLevelFieldNumber;
const int social_t::kSexFieldNumber;
const int social_t::kStypeFieldNumber;
const int social_t::kSflagFieldNumber;
const int social_t::kVerifyFieldNumber;
const int social_t::kGoldFieldNumber;
const int social_t::kMsgsFieldNumber;
const int social_t::kMsgtimesFieldNumber;
const int social_t::kTtimeFieldNumber;
const int social_t::kNameColorFieldNumber;
const int social_t::kAchievePointFieldNumber;
const int social_t::kMaxScoreFieldNumber;
const int social_t::kMaxShaFieldNumber;
const int social_t::kMaxLshaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

social_t::social_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_social_2eproto::scc_info_social_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.social_t)
}
social_t::social_t(const social_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      msgs_(from.msgs_),
      msgtimes_(from.msgtimes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  verify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verify()) {
    verify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_lsha_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(max_lsha_));
  // @@protoc_insertion_point(copy_constructor:dhc.social_t)
}

void social_t::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_lsha_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(max_lsha_));
}

social_t::~social_t() {
  // @@protoc_insertion_point(destructor:dhc.social_t)
  SharedDtor();
}

void social_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void social_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* social_t::descriptor() {
  ::protobuf_social_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_social_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const social_t& social_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_social_2eproto::scc_info_social_t.base);
  return *internal_default_instance();
}


void social_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.social_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  msgs_.Clear();
  set_changed();
  msgtimes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_changed();
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      set_changed();
      verify_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&toukuang_) -
        reinterpret_cast<char*>(&guid_)) + sizeof(toukuang_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&region_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ttime_) -
        reinterpret_cast<char*>(&region_id_)) + sizeof(ttime_));
  }
  if (cached_has_bits & 983040u) {
    ::memset(&achieve_point_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_lsha_) -
        reinterpret_cast<char*>(&achieve_point_)) + sizeof(max_lsha_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool social_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.social_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 player_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_player_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 target_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_target_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dhc.social_t.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cup = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_cup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 avatar = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_avatar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 toukuang = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_toukuang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toukuang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 region_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stype = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_stype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sflag = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_sflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string verify = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verify().data(), static_cast<int>(this->verify().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dhc.social_t.verify");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string msgs = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_msgs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msgs(this->msgs_size() - 1).data(),
            static_cast<int>(this->msgs(this->msgs_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dhc.social_t.msgs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 msgtimes = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 136u, input, this->mutable_msgtimes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_msgtimes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ttime = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_ttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 name_color = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_name_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 achieve_point = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_achieve_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_score = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_max_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_sha = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_max_sha();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_sha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_lsha = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_max_lsha();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_lsha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.social_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.social_t)
  return false;
#undef DO_
}

void social_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.social_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // optional uint64 player_guid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guid(), output);
  }

  // optional uint64 target_guid = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->target_guid(), output);
  }

  // optional string name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.social_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional int32 cup = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cup(), output);
  }

  // optional int32 avatar = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->avatar(), output);
  }

  // optional int32 toukuang = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->toukuang(), output);
  }

  // optional int32 region_id = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->region_id(), output);
  }

  // optional int32 level = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->level(), output);
  }

  // optional int32 sex = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->sex(), output);
  }

  // optional int32 stype = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->stype(), output);
  }

  // optional int32 sflag = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->sflag(), output);
  }

  // optional string verify = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verify().data(), static_cast<int>(this->verify().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.social_t.verify");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->verify(), output);
  }

  // optional int32 gold = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->gold(), output);
  }

  // repeated string msgs = 16;
  for (int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgs(i).data(), static_cast<int>(this->msgs(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.social_t.msgs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->msgs(i), output);
  }

  // repeated uint64 msgtimes = 17;
  for (int i = 0, n = this->msgtimes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      17, this->msgtimes(i), output);
  }

  // optional uint64 ttime = 18;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(18, this->ttime(), output);
  }

  // optional int32 name_color = 19;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->name_color(), output);
  }

  // optional int32 achieve_point = 21;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->achieve_point(), output);
  }

  // optional int32 max_score = 22;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->max_score(), output);
  }

  // optional int32 max_sha = 23;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->max_sha(), output);
  }

  // optional int32 max_lsha = 24;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->max_lsha(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.social_t)
}

::google::protobuf::uint8* social_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.social_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // optional uint64 player_guid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guid(), target);
  }

  // optional uint64 target_guid = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->target_guid(), target);
  }

  // optional string name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.social_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional int32 cup = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cup(), target);
  }

  // optional int32 avatar = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->avatar(), target);
  }

  // optional int32 toukuang = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->toukuang(), target);
  }

  // optional int32 region_id = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->region_id(), target);
  }

  // optional int32 level = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->level(), target);
  }

  // optional int32 sex = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->sex(), target);
  }

  // optional int32 stype = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->stype(), target);
  }

  // optional int32 sflag = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->sflag(), target);
  }

  // optional string verify = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verify().data(), static_cast<int>(this->verify().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.social_t.verify");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->verify(), target);
  }

  // optional int32 gold = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->gold(), target);
  }

  // repeated string msgs = 16;
  for (int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgs(i).data(), static_cast<int>(this->msgs(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dhc.social_t.msgs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(16, this->msgs(i), target);
  }

  // repeated uint64 msgtimes = 17;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(17, this->msgtimes_, target);

  // optional uint64 ttime = 18;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(18, this->ttime(), target);
  }

  // optional int32 name_color = 19;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->name_color(), target);
  }

  // optional int32 achieve_point = 21;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->achieve_point(), target);
  }

  // optional int32 max_score = 22;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->max_score(), target);
  }

  // optional int32 max_sha = 23;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->max_sha(), target);
  }

  // optional int32 max_lsha = 24;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->max_lsha(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.social_t)
  return target;
}

size_t social_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.social_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string msgs = 16;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->msgs_size());
  for (int i = 0, n = this->msgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->msgs(i));
  }

  // repeated uint64 msgtimes = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->msgtimes_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->msgtimes_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string verify = 14;
    if (has_verify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verify());
    }

    // optional uint64 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional uint64 player_guid = 2;
    if (has_player_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->player_guid());
    }

    // optional uint64 target_guid = 3;
    if (has_target_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_guid());
    }

    // optional int32 cup = 5;
    if (has_cup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cup());
    }

    // optional int32 avatar = 7;
    if (has_avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->avatar());
    }

    // optional int32 toukuang = 8;
    if (has_toukuang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toukuang());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 region_id = 9;
    if (has_region_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->region_id());
    }

    // optional int32 level = 10;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 sex = 11;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 stype = 12;
    if (has_stype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stype());
    }

    // optional int32 sflag = 13;
    if (has_sflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sflag());
    }

    // optional int32 gold = 15;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional int32 name_color = 19;
    if (has_name_color()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->name_color());
    }

    // optional uint64 ttime = 18;
    if (has_ttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ttime());
    }

  }
  if (_has_bits_[16 / 32] & 983040u) {
    // optional int32 achieve_point = 21;
    if (has_achieve_point()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achieve_point());
    }

    // optional int32 max_score = 22;
    if (has_max_score()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_score());
    }

    // optional int32 max_sha = 23;
    if (has_max_sha()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_sha());
    }

    // optional int32 max_lsha = 24;
    if (has_max_lsha()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_lsha());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void social_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.social_t)
  GOOGLE_DCHECK_NE(&from, this);
  const social_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const social_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.social_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.social_t)
    MergeFrom(*source);
  }
}

void social_t::MergeFrom(const social_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.social_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgs_.MergeFrom(from.msgs_);
  msgtimes_.MergeFrom(from.msgtimes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_verify();
      verify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_);
    }
    if (cached_has_bits & 0x00000004u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      player_guid_ = from.player_guid_;
    }
    if (cached_has_bits & 0x00000010u) {
      target_guid_ = from.target_guid_;
    }
    if (cached_has_bits & 0x00000020u) {
      cup_ = from.cup_;
    }
    if (cached_has_bits & 0x00000040u) {
      avatar_ = from.avatar_;
    }
    if (cached_has_bits & 0x00000080u) {
      toukuang_ = from.toukuang_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      region_id_ = from.region_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000400u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000800u) {
      stype_ = from.stype_;
    }
    if (cached_has_bits & 0x00001000u) {
      sflag_ = from.sflag_;
    }
    if (cached_has_bits & 0x00002000u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00004000u) {
      name_color_ = from.name_color_;
    }
    if (cached_has_bits & 0x00008000u) {
      ttime_ = from.ttime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 983040u) {
    if (cached_has_bits & 0x00010000u) {
      achieve_point_ = from.achieve_point_;
    }
    if (cached_has_bits & 0x00020000u) {
      max_score_ = from.max_score_;
    }
    if (cached_has_bits & 0x00040000u) {
      max_sha_ = from.max_sha_;
    }
    if (cached_has_bits & 0x00080000u) {
      max_lsha_ = from.max_lsha_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void social_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.social_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void social_t::CopyFrom(const social_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.social_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool social_t::IsInitialized() const {
  return true;
}

void social_t::Swap(social_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void social_t::InternalSwap(social_t* other) {
  using std::swap;
  msgs_.InternalSwap(CastToBase(&other->msgs_));
  msgtimes_.InternalSwap(&other->msgtimes_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_.Swap(&other->verify_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(player_guid_, other->player_guid_);
  swap(target_guid_, other->target_guid_);
  swap(cup_, other->cup_);
  swap(avatar_, other->avatar_);
  swap(toukuang_, other->toukuang_);
  swap(region_id_, other->region_id_);
  swap(level_, other->level_);
  swap(sex_, other->sex_);
  swap(stype_, other->stype_);
  swap(sflag_, other->sflag_);
  swap(gold_, other->gold_);
  swap(name_color_, other->name_color_);
  swap(ttime_, other->ttime_);
  swap(achieve_point_, other->achieve_point_);
  swap(max_score_, other->max_score_);
  swap(max_sha_, other->max_sha_);
  swap(max_lsha_, other->max_lsha_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata social_t::GetMetadata() const {
  protobuf_social_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_social_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::social_t* Arena::CreateMaybeMessage< ::dhc::social_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::social_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
